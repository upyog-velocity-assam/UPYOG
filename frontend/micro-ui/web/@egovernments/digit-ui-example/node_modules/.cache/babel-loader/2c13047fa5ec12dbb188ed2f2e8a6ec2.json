{"ast":null,"code":"import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { functionalUpdate, sleep } from './utils'; // TYPES\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n  var resolve = function resolve(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseResolve(value);\n  };\n  var reject = function reject(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseReject(value);\n  };\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n    cancelFn = function cancelFn(cancelOptions) {\n      reject(new CancelledError(cancelOptions)); // Cancel transport if supported\n\n      if (isCancelable(promiseOrValue)) {\n        try {\n          promiseOrValue.cancel();\n        } catch (_unused) {}\n      }\n    }; // Check if the transport layer support cancellation\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = functionalUpdate(retryDelay, _this.failureCount) || 0;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n  run();\n};","map":{"version":3,"names":["focusManager","onlineManager","functionalUpdate","sleep","defaultRetryDelay","failureCount","Math","min","pow","isCancelable","value","cancel","CancelledError","options","revert","silent","isCancelledError","Retryer","config","_this","cancelRetry","cancelFn","continueFn","promiseResolve","promiseReject","cancelOptions","continue","isPaused","isResolved","isTransportCancelable","promise","Promise","outerResolve","outerReject","resolve","reject","pause","continueResolve","onPause","then","undefined","onContinue","run","promiseOrValue","fn","error","_unused","catch","_config$retry","_config$retryDelay","retry","retryDelay","delay","shouldRetry","onFail","isFocused","isOnline"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/node_modules/react-query/es/core/retryer.js"],"sourcesContent":["import { focusManager } from './focusManager';\nimport { onlineManager } from './onlineManager';\nimport { functionalUpdate, sleep } from './utils'; // TYPES\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1000 * Math.pow(2, failureCount), 30000);\n}\n\nexport function isCancelable(value) {\n  return typeof (value == null ? void 0 : value.cancel) === 'function';\n}\nexport var CancelledError = function CancelledError(options) {\n  this.revert = options == null ? void 0 : options.revert;\n  this.silent = options == null ? void 0 : options.silent;\n};\nexport function isCancelledError(value) {\n  return value instanceof CancelledError;\n} // CLASS\n\nexport var Retryer = function Retryer(config) {\n  var _this = this;\n\n  var cancelRetry = false;\n  var cancelFn;\n  var continueFn;\n  var promiseResolve;\n  var promiseReject;\n\n  this.cancel = function (cancelOptions) {\n    return cancelFn == null ? void 0 : cancelFn(cancelOptions);\n  };\n\n  this.cancelRetry = function () {\n    cancelRetry = true;\n  };\n\n  this.continue = function () {\n    return continueFn == null ? void 0 : continueFn();\n  };\n\n  this.failureCount = 0;\n  this.isPaused = false;\n  this.isResolved = false;\n  this.isTransportCancelable = false;\n  this.promise = new Promise(function (outerResolve, outerReject) {\n    promiseResolve = outerResolve;\n    promiseReject = outerReject;\n  });\n\n  var resolve = function resolve(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseResolve(value);\n  };\n\n  var reject = function reject(value) {\n    _this.isResolved = true;\n    continueFn == null ? void 0 : continueFn();\n    promiseReject(value);\n  };\n\n  var pause = function pause() {\n    return new Promise(function (continueResolve) {\n      continueFn = continueResolve;\n      _this.isPaused = true;\n      config.onPause == null ? void 0 : config.onPause();\n    }).then(function () {\n      continueFn = undefined;\n      _this.isPaused = false;\n      config.onContinue == null ? void 0 : config.onContinue();\n    });\n  }; // Create loop function\n\n\n  var run = function run() {\n    // Do nothing if already resolved\n    if (_this.isResolved) {\n      return;\n    }\n\n    var promiseOrValue; // Execute query\n\n    try {\n      promiseOrValue = config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    } // Create callback to cancel this fetch\n\n\n    cancelFn = function cancelFn(cancelOptions) {\n      reject(new CancelledError(cancelOptions)); // Cancel transport if supported\n\n      if (isCancelable(promiseOrValue)) {\n        try {\n          promiseOrValue.cancel();\n        } catch (_unused) {}\n      }\n    }; // Check if the transport layer support cancellation\n\n\n    _this.isTransportCancelable = isCancelable(promiseOrValue);\n    Promise.resolve(promiseOrValue).then(resolve).catch(function (error) {\n      var _config$retry, _config$retryDelay;\n\n      // Stop if the fetch is already resolved\n      if (_this.isResolved) {\n        return;\n      } // Do we need to retry the request?\n\n\n      var retry = (_config$retry = config.retry) != null ? _config$retry : 3;\n      var retryDelay = (_config$retryDelay = config.retryDelay) != null ? _config$retryDelay : defaultRetryDelay;\n      var delay = functionalUpdate(retryDelay, _this.failureCount) || 0;\n      var shouldRetry = retry === true || typeof retry === 'number' && _this.failureCount < retry || typeof retry === 'function' && retry(_this.failureCount, error);\n\n      if (cancelRetry || !shouldRetry) {\n        // We are done if the query does not need to be retried\n        reject(error);\n        return;\n      }\n\n      _this.failureCount++; // Notify on fail\n\n      config.onFail == null ? void 0 : config.onFail(_this.failureCount, error); // Delay\n\n      sleep(delay) // Pause if the document is not visible or when the device is offline\n      .then(function () {\n        if (!focusManager.isFocused() || !onlineManager.isOnline()) {\n          return pause();\n        }\n      }).then(function () {\n        if (cancelRetry) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  }; // Start loop\n\n\n  run();\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}