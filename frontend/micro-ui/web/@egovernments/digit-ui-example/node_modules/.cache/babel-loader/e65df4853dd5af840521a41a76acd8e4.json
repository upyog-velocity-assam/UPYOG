{"ast":null,"code":"import getDate from \"../getDate/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6 inclusively\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, options) {\n  var _options$locale, _options$locale$optio;\n  requiredArgs(1, arguments);\n  var defaultWeekStartsOn = (options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) || 0;\n  var weekStartsOn = (options === null || options === void 0 ? void 0 : options.weekStartsOn) == null ? toInteger(defaultWeekStartsOn) : toInteger(options.weekStartsOn);\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n  var currentDayOfMonth = getDate(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}","map":{"version":3,"names":["getDate","getDay","startOfMonth","requiredArgs","toInteger","getWeekOfMonth","date","options","_options$locale","_options$locale$optio","arguments","defaultWeekStartsOn","locale","weekStartsOn","RangeError","currentDayOfMonth","isNaN","NaN","startWeekDay","lastDayOfFirstWeek","remainingDaysAfterFirstWeek","Math","ceil"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/node_modules/date-fns/esm/getWeekOfMonth/index.js"],"sourcesContent":["import getDate from \"../getDate/index.js\";\nimport getDay from \"../getDay/index.js\";\nimport startOfMonth from \"../startOfMonth/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\n/**\n * @name getWeekOfMonth\n * @category Week Helpers\n * @summary Get the week of the month of the given date.\n *\n * @description\n * Get the week of the month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Number} the week of month\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6 inclusively\n *\n * @example\n * // Which week of the month is 9 November 2017?\n * const result = getWeekOfMonth(new Date(2017, 10, 9))\n * //=> 2\n */\n\nexport default function getWeekOfMonth(date, options) {\n  var _options$locale, _options$locale$optio;\n\n  requiredArgs(1, arguments);\n  var defaultWeekStartsOn = (options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.weekStartsOn) || 0;\n  var weekStartsOn = (options === null || options === void 0 ? void 0 : options.weekStartsOn) == null ? toInteger(defaultWeekStartsOn) : toInteger(options.weekStartsOn);\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var currentDayOfMonth = getDate(date);\n  if (isNaN(currentDayOfMonth)) return NaN;\n  var startWeekDay = getDay(startOfMonth(date));\n  var lastDayOfFirstWeek = weekStartsOn - startWeekDay;\n  if (lastDayOfFirstWeek <= 0) lastDayOfFirstWeek += 7;\n  var remainingDaysAfterFirstWeek = currentDayOfMonth - lastDayOfFirstWeek;\n  return Math.ceil(remainingDaysAfterFirstWeek / 7) + 1;\n}"],"mappings":"AAAA,OAAOA,OAAO,MAAM,qBAAqB;AACzC,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAOC,YAAY,MAAM,0BAA0B;AACnD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,cAAcA,CAACC,IAAI,EAAEC,OAAO,EAAE;EACpD,IAAIC,eAAe,EAAEC,qBAAqB;EAE1CN,YAAY,CAAC,CAAC,EAAEO,SAAS,CAAC;EAC1B,IAAIC,mBAAmB,GAAG,CAACJ,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACC,eAAe,GAAGD,OAAO,CAACK,MAAM,MAAM,IAAI,IAAIJ,eAAe,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAG,CAACC,qBAAqB,GAAGD,eAAe,CAACD,OAAO,MAAM,IAAI,IAAIE,qBAAqB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,qBAAqB,CAACI,YAAY,KAAK,CAAC;EACpT,IAAIA,YAAY,GAAG,CAACN,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACM,YAAY,KAAK,IAAI,GAAGT,SAAS,CAACO,mBAAmB,CAAC,GAAGP,SAAS,CAACG,OAAO,CAACM,YAAY,CAAC;EAEtK,IAAI,EAAEA,YAAY,IAAI,CAAC,IAAIA,YAAY,IAAI,CAAC,CAAC,EAAE;IAC7C,MAAM,IAAIC,UAAU,CAAC,kDAAkD,CAAC;EAC1E;EAEA,IAAIC,iBAAiB,GAAGf,OAAO,CAACM,IAAI,CAAC;EACrC,IAAIU,KAAK,CAACD,iBAAiB,CAAC,EAAE,OAAOE,GAAG;EACxC,IAAIC,YAAY,GAAGjB,MAAM,CAACC,YAAY,CAACI,IAAI,CAAC,CAAC;EAC7C,IAAIa,kBAAkB,GAAGN,YAAY,GAAGK,YAAY;EACpD,IAAIC,kBAAkB,IAAI,CAAC,EAAEA,kBAAkB,IAAI,CAAC;EACpD,IAAIC,2BAA2B,GAAGL,iBAAiB,GAAGI,kBAAkB;EACxE,OAAOE,IAAI,CAACC,IAAI,CAACF,2BAA2B,GAAG,CAAC,CAAC,GAAG,CAAC;AACvD"},"metadata":{},"sourceType":"module"}