{"ast":null,"code":"import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsFetching(arg1, arg2) {\n  var queryClient = useQueryClient();\n  var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n    filters = _parseFilterArgs[0];\n  var _React$useState = React.useState(queryClient.isFetching(filters)),\n    isFetching = _React$useState[0],\n    setIsFetching = _React$useState[1];\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isFetchingRef = React.useRef(isFetching);\n  isFetchingRef.current = isFetching;\n  React.useEffect(function () {\n    return queryClient.getQueryCache().subscribe(notifyManager.batchCalls(function () {\n      var newIsFetching = queryClient.isFetching(filtersRef.current);\n      if (isFetchingRef.current !== newIsFetching) {\n        setIsFetching(newIsFetching);\n      }\n    }));\n  }, [queryClient]);\n  return isFetching;\n}","map":{"version":3,"names":["React","notifyManager","parseFilterArgs","useQueryClient","useIsFetching","arg1","arg2","queryClient","_parseFilterArgs","filters","_React$useState","useState","isFetching","setIsFetching","filtersRef","useRef","current","isFetchingRef","useEffect","getQueryCache","subscribe","batchCalls","newIsFetching"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/node_modules/react-query/es/react/useIsFetching.js"],"sourcesContent":["import React from 'react';\nimport { notifyManager } from '../core/notifyManager';\nimport { parseFilterArgs } from '../core/utils';\nimport { useQueryClient } from './QueryClientProvider';\nexport function useIsFetching(arg1, arg2) {\n  var queryClient = useQueryClient();\n\n  var _parseFilterArgs = parseFilterArgs(arg1, arg2),\n      filters = _parseFilterArgs[0];\n\n  var _React$useState = React.useState(queryClient.isFetching(filters)),\n      isFetching = _React$useState[0],\n      setIsFetching = _React$useState[1];\n\n  var filtersRef = React.useRef(filters);\n  filtersRef.current = filters;\n  var isFetchingRef = React.useRef(isFetching);\n  isFetchingRef.current = isFetching;\n  React.useEffect(function () {\n    return queryClient.getQueryCache().subscribe(notifyManager.batchCalls(function () {\n      var newIsFetching = queryClient.isFetching(filtersRef.current);\n\n      if (isFetchingRef.current !== newIsFetching) {\n        setIsFetching(newIsFetching);\n      }\n    }));\n  }, [queryClient]);\n  return isFetching;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,uBAAuB;AACrD,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,cAAc,QAAQ,uBAAuB;AACtD,OAAO,SAASC,aAAaA,CAACC,IAAI,EAAEC,IAAI,EAAE;EACxC,IAAIC,WAAW,GAAGJ,cAAc,CAAC,CAAC;EAElC,IAAIK,gBAAgB,GAAGN,eAAe,CAACG,IAAI,EAAEC,IAAI,CAAC;IAC9CG,OAAO,GAAGD,gBAAgB,CAAC,CAAC,CAAC;EAEjC,IAAIE,eAAe,GAAGV,KAAK,CAACW,QAAQ,CAACJ,WAAW,CAACK,UAAU,CAACH,OAAO,CAAC,CAAC;IACjEG,UAAU,GAAGF,eAAe,CAAC,CAAC,CAAC;IAC/BG,aAAa,GAAGH,eAAe,CAAC,CAAC,CAAC;EAEtC,IAAII,UAAU,GAAGd,KAAK,CAACe,MAAM,CAACN,OAAO,CAAC;EACtCK,UAAU,CAACE,OAAO,GAAGP,OAAO;EAC5B,IAAIQ,aAAa,GAAGjB,KAAK,CAACe,MAAM,CAACH,UAAU,CAAC;EAC5CK,aAAa,CAACD,OAAO,GAAGJ,UAAU;EAClCZ,KAAK,CAACkB,SAAS,CAAC,YAAY;IAC1B,OAAOX,WAAW,CAACY,aAAa,CAAC,CAAC,CAACC,SAAS,CAACnB,aAAa,CAACoB,UAAU,CAAC,YAAY;MAChF,IAAIC,aAAa,GAAGf,WAAW,CAACK,UAAU,CAACE,UAAU,CAACE,OAAO,CAAC;MAE9D,IAAIC,aAAa,CAACD,OAAO,KAAKM,aAAa,EAAE;QAC3CT,aAAa,CAACS,aAAa,CAAC;MAC9B;IACF,CAAC,CAAC,CAAC;EACL,CAAC,EAAE,CAACf,WAAW,CAAC,CAAC;EACjB,OAAOK,UAAU;AACnB"},"metadata":{},"sourceType":"module"}