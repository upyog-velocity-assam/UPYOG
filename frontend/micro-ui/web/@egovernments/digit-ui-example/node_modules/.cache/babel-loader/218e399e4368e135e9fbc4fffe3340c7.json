{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, getQueryKeyHashFn, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n  function QueriesObserver(client, queries) {\n    var _this;\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = queries || [];\n    _this.result = [];\n    _this.observers = []; // Subscribe to queries\n\n    _this.updateObservers();\n    return _this;\n  }\n  var _proto = QueriesObserver.prototype;\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n  _proto.setQueries = function setQueries(queries) {\n    this.queries = queries;\n    this.updateObservers();\n  };\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n  _proto.updateObservers = function updateObservers() {\n    var _this3 = this;\n    var hasIndexChange = false;\n    var prevObservers = this.observers;\n    var newObservers = this.queries.map(function (options, i) {\n      var observer = prevObservers[i];\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n      var hashFn = getQueryKeyHashFn(defaultedOptions);\n      defaultedOptions.queryHash = hashFn(defaultedOptions.queryKey);\n      if (!observer || observer.getCurrentQuery().queryHash !== defaultedOptions.queryHash) {\n        hasIndexChange = true;\n        observer = prevObservers.find(function (x) {\n          return x.getCurrentQuery().queryHash === defaultedOptions.queryHash;\n        });\n      }\n      if (observer) {\n        observer.setOptions(defaultedOptions);\n        return observer;\n      }\n      return new QueryObserver(_this3.client, defaultedOptions);\n    });\n    if (prevObservers.length === newObservers.length && !hasIndexChange) {\n      return;\n    }\n    this.observers = newObservers;\n    this.result = newObservers.map(function (observer) {\n      return observer.getCurrentResult();\n    });\n    if (!this.listeners.length) {\n      return;\n    }\n    difference(prevObservers, newObservers).forEach(function (observer) {\n      observer.destroy();\n    });\n    difference(newObservers, prevObservers).forEach(function (observer) {\n      observer.subscribe(function (result) {\n        _this3.onUpdate(observer, result);\n      });\n    });\n    this.notify();\n  };\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n  _proto.notify = function notify() {\n    var _this4 = this;\n    notifyManager.batch(function () {\n      _this4.listeners.forEach(function (listener) {\n        listener(_this4.result);\n      });\n    });\n  };\n  return QueriesObserver;\n}(Subscribable);","map":{"version":3,"names":["_inheritsLoose","difference","getQueryKeyHashFn","replaceAt","notifyManager","QueryObserver","Subscribable","QueriesObserver","_Subscribable","client","queries","_this","call","result","observers","updateObservers","_proto","prototype","onSubscribe","_this2","listeners","length","forEach","observer","subscribe","onUpdate","onUnsubscribe","destroy","setQueries","getCurrentResult","_this3","hasIndexChange","prevObservers","newObservers","map","options","i","defaultedOptions","defaultQueryObserverOptions","hashFn","queryHash","queryKey","getCurrentQuery","find","x","setOptions","notify","index","indexOf","_this4","batch","listener"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/node_modules/react-query/es/core/queriesObserver.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport { difference, getQueryKeyHashFn, replaceAt } from './utils';\nimport { notifyManager } from './notifyManager';\nimport { QueryObserver } from './queryObserver';\nimport { Subscribable } from './subscribable';\nexport var QueriesObserver = /*#__PURE__*/function (_Subscribable) {\n  _inheritsLoose(QueriesObserver, _Subscribable);\n\n  function QueriesObserver(client, queries) {\n    var _this;\n\n    _this = _Subscribable.call(this) || this;\n    _this.client = client;\n    _this.queries = queries || [];\n    _this.result = [];\n    _this.observers = []; // Subscribe to queries\n\n    _this.updateObservers();\n\n    return _this;\n  }\n\n  var _proto = QueriesObserver.prototype;\n\n  _proto.onSubscribe = function onSubscribe() {\n    var _this2 = this;\n\n    if (this.listeners.length === 1) {\n      this.observers.forEach(function (observer) {\n        observer.subscribe(function (result) {\n          _this2.onUpdate(observer, result);\n        });\n      });\n    }\n  };\n\n  _proto.onUnsubscribe = function onUnsubscribe() {\n    if (!this.listeners.length) {\n      this.destroy();\n    }\n  };\n\n  _proto.destroy = function destroy() {\n    this.listeners = [];\n    this.observers.forEach(function (observer) {\n      observer.destroy();\n    });\n  };\n\n  _proto.setQueries = function setQueries(queries) {\n    this.queries = queries;\n    this.updateObservers();\n  };\n\n  _proto.getCurrentResult = function getCurrentResult() {\n    return this.result;\n  };\n\n  _proto.updateObservers = function updateObservers() {\n    var _this3 = this;\n\n    var hasIndexChange = false;\n    var prevObservers = this.observers;\n    var newObservers = this.queries.map(function (options, i) {\n      var observer = prevObservers[i];\n\n      var defaultedOptions = _this3.client.defaultQueryObserverOptions(options);\n\n      var hashFn = getQueryKeyHashFn(defaultedOptions);\n      defaultedOptions.queryHash = hashFn(defaultedOptions.queryKey);\n\n      if (!observer || observer.getCurrentQuery().queryHash !== defaultedOptions.queryHash) {\n        hasIndexChange = true;\n        observer = prevObservers.find(function (x) {\n          return x.getCurrentQuery().queryHash === defaultedOptions.queryHash;\n        });\n      }\n\n      if (observer) {\n        observer.setOptions(defaultedOptions);\n        return observer;\n      }\n\n      return new QueryObserver(_this3.client, defaultedOptions);\n    });\n\n    if (prevObservers.length === newObservers.length && !hasIndexChange) {\n      return;\n    }\n\n    this.observers = newObservers;\n    this.result = newObservers.map(function (observer) {\n      return observer.getCurrentResult();\n    });\n\n    if (!this.listeners.length) {\n      return;\n    }\n\n    difference(prevObservers, newObservers).forEach(function (observer) {\n      observer.destroy();\n    });\n    difference(newObservers, prevObservers).forEach(function (observer) {\n      observer.subscribe(function (result) {\n        _this3.onUpdate(observer, result);\n      });\n    });\n    this.notify();\n  };\n\n  _proto.onUpdate = function onUpdate(observer, result) {\n    var index = this.observers.indexOf(observer);\n\n    if (index !== -1) {\n      this.result = replaceAt(this.result, index, result);\n      this.notify();\n    }\n  };\n\n  _proto.notify = function notify() {\n    var _this4 = this;\n\n    notifyManager.batch(function () {\n      _this4.listeners.forEach(function (listener) {\n        listener(_this4.result);\n      });\n    });\n  };\n\n  return QueriesObserver;\n}(Subscribable);"],"mappings":"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"},"metadata":{},"sourceType":"module"}