{"ast":null,"code":"var _regeneratorRuntime = require(\"D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/node_modules/@babel/runtime/regenerator/index.js\");\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react')) : typeof define === 'function' && define.amd ? define(['exports', 'react'], factory) : (global = global || self, factory(global.ReactTable = {}, global.React));\n})(this, function (exports, React) {\n  'use strict';\n\n  React = React && Object.prototype.hasOwnProperty.call(React, 'default') ? React['default'] : React;\n  function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n    try {\n      var info = gen[key](arg);\n      var value = info.value;\n    } catch (error) {\n      reject(error);\n      return;\n    }\n    if (info.done) {\n      resolve(value);\n    } else {\n      Promise.resolve(value).then(_next, _throw);\n    }\n  }\n  function _asyncToGenerator(fn) {\n    return function () {\n      var self = this,\n        args = arguments;\n      return new Promise(function (resolve, reject) {\n        var gen = fn.apply(self, args);\n        function _next(value) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n        }\n        function _throw(err) {\n          asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n        }\n        _next(undefined);\n      });\n    };\n  }\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n    return target;\n  }\n  function _toPrimitive(input, hint) {\n    if (typeof input !== \"object\" || input === null) return input;\n    var prim = input[Symbol.toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (typeof res !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return typeof key === \"symbol\" ? key : String(key);\n  }\n  var renderErr = 'Renderer Error ☝️';\n  var actions = {\n    init: 'init'\n  };\n  var defaultRenderer = function defaultRenderer(_ref) {\n    var _ref$value = _ref.value,\n      value = _ref$value === void 0 ? '' : _ref$value;\n    return value;\n  };\n  var emptyRenderer = function emptyRenderer() {\n    return React.createElement(React.Fragment, null, \"\\xA0\");\n  };\n  var defaultColumn = {\n    Cell: defaultRenderer,\n    width: 150,\n    minWidth: 0,\n    maxWidth: Number.MAX_SAFE_INTEGER\n  };\n  function mergeProps() {\n    for (var _len = arguments.length, propList = new Array(_len), _key = 0; _key < _len; _key++) {\n      propList[_key] = arguments[_key];\n    }\n    return propList.reduce(function (props, next) {\n      var style = next.style,\n        className = next.className,\n        rest = _objectWithoutPropertiesLoose(next, [\"style\", \"className\"]);\n      props = _extends({}, props, {}, rest);\n      if (style) {\n        props.style = props.style ? _extends({}, props.style || {}, {}, style || {}) : style;\n      }\n      if (className) {\n        props.className = props.className ? props.className + ' ' + className : className;\n      }\n      if (props.className === '') {\n        delete props.className;\n      }\n      return props;\n    }, {});\n  }\n  function handlePropGetter(prevProps, userProps, meta) {\n    // Handle a lambda, pass it the previous props\n    if (typeof userProps === 'function') {\n      return handlePropGetter({}, userProps(prevProps, meta));\n    } // Handle an array, merge each item as separate props\n\n    if (Array.isArray(userProps)) {\n      return mergeProps.apply(void 0, [prevProps].concat(userProps));\n    } // Handle an object by default, merge the two objects\n\n    return mergeProps(prevProps, userProps);\n  }\n  var makePropGetter = function makePropGetter(hooks, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return function (userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n      return [].concat(hooks, [userProps]).reduce(function (prev, next) {\n        return handlePropGetter(prev, next, _extends({}, meta, {\n          userProps: userProps\n        }));\n      }, {});\n    };\n  };\n  var reduceHooks = function reduceHooks(hooks, initial, meta, allowUndefined) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return hooks.reduce(function (prev, next) {\n      var nextValue = next(prev, meta);\n      {\n        if (!allowUndefined && typeof nextValue === 'undefined') {\n          console.info(next);\n          throw new Error('React Table: A reducer hook ☝️ just returned undefined! This is not allowed.');\n        }\n      }\n      return nextValue;\n    }, initial);\n  };\n  var loopHooks = function loopHooks(hooks, context, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return hooks.forEach(function (hook) {\n      var nextValue = hook(context, meta);\n      {\n        if (typeof nextValue !== 'undefined') {\n          console.info(hook, nextValue);\n          throw new Error('React Table: A loop-type hook ☝️ just returned a value! This is not allowed.');\n        }\n      }\n    });\n  };\n  function ensurePluginOrder(plugins, befores, pluginName, afters) {\n    if (afters) {\n      throw new Error(\"Defining plugins in the \\\"after\\\" section of ensurePluginOrder is no longer supported (see plugin \" + pluginName + \")\");\n    }\n    var pluginIndex = plugins.findIndex(function (plugin) {\n      return plugin.pluginName === pluginName;\n    });\n    if (pluginIndex === -1) {\n      {\n        throw new Error(\"The plugin \\\"\" + pluginName + \"\\\" was not found in the plugin list!\\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\\n\\n  \" + pluginName + \".pluginName = '\" + pluginName + \"'\\n\");\n      }\n    }\n    befores.forEach(function (before) {\n      var beforeIndex = plugins.findIndex(function (plugin) {\n        return plugin.pluginName === before;\n      });\n      if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n        {\n          throw new Error(\"React Table: The \" + pluginName + \" plugin hook must be placed after the \" + before + \" plugin hook!\");\n        }\n      }\n    });\n  }\n  function functionalUpdate(updater, old) {\n    return typeof updater === 'function' ? updater(old) : updater;\n  }\n  function useGetLatest(obj) {\n    var ref = React.useRef();\n    ref.current = obj;\n    return React.useCallback(function () {\n      return ref.current;\n    }, []);\n  } // SSR has issues with useLayoutEffect still, so use useEffect during SSR\n\n  var safeUseLayoutEffect = typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect;\n  function useMountedLayoutEffect(fn, deps) {\n    var mountedRef = React.useRef(false);\n    safeUseLayoutEffect(function () {\n      if (mountedRef.current) {\n        fn();\n      }\n      mountedRef.current = true; // eslint-disable-next-line\n    }, deps);\n  }\n  function useAsyncDebounce(defaultFn, defaultWait) {\n    if (defaultWait === void 0) {\n      defaultWait = 0;\n    }\n    var debounceRef = React.useRef({});\n    var getDefaultFn = useGetLatest(defaultFn);\n    var getDefaultWait = useGetLatest(defaultWait);\n    return React.useCallback( /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _len2,\n          args,\n          _key2,\n          _args2 = arguments;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                for (_len2 = _args2.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = _args2[_key2];\n                }\n                if (!debounceRef.current.promise) {\n                  debounceRef.current.promise = new Promise(function (resolve, reject) {\n                    debounceRef.current.resolve = resolve;\n                    debounceRef.current.reject = reject;\n                  });\n                }\n                if (debounceRef.current.timeout) {\n                  clearTimeout(debounceRef.current.timeout);\n                }\n                debounceRef.current.timeout = setTimeout( /*#__PURE__*/\n                _asyncToGenerator( /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee() {\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          delete debounceRef.current.timeout;\n                          _context.prev = 1;\n                          _context.t0 = debounceRef.current;\n                          _context.next = 5;\n                          return getDefaultFn().apply(void 0, args);\n                        case 5:\n                          _context.t1 = _context.sent;\n                          _context.t0.resolve.call(_context.t0, _context.t1);\n                          _context.next = 12;\n                          break;\n                        case 9:\n                          _context.prev = 9;\n                          _context.t2 = _context[\"catch\"](1);\n                          debounceRef.current.reject(_context.t2);\n                        case 12:\n                          _context.prev = 12;\n                          delete debounceRef.current.promise;\n                          return _context.finish(12);\n                        case 15:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee, null, [[1, 9, 12, 15]]);\n                })), getDefaultWait());\n                return _context2.abrupt(\"return\", debounceRef.current.promise);\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n      return function () {\n        return _ref2.apply(this, arguments);\n      };\n    }(), [getDefaultFn, getDefaultWait]);\n  }\n  function makeRenderer(instance, column, meta) {\n    if (meta === void 0) {\n      meta = {};\n    }\n    return function (type, userProps) {\n      if (userProps === void 0) {\n        userProps = {};\n      }\n      var Comp = typeof type === 'string' ? column[type] : type;\n      if (typeof Comp === 'undefined') {\n        console.info(column);\n        throw new Error(renderErr);\n      }\n      return flexRender(Comp, _extends({}, instance, {\n        column: column\n      }, meta, {}, userProps));\n    };\n  }\n  function flexRender(Comp, props) {\n    return isReactComponent(Comp) ? React.createElement(Comp, props) : Comp;\n  }\n  function isReactComponent(component) {\n    return isClassComponent(component) || typeof component === 'function' || isExoticComponent(component);\n  }\n  function isClassComponent(component) {\n    return typeof component === 'function' && function () {\n      var proto = Object.getPrototypeOf(component);\n      return proto.prototype && proto.prototype.isReactComponent;\n    }();\n  }\n  function isExoticComponent(component) {\n    return typeof component === 'object' && typeof component.$$typeof === 'symbol' && ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description);\n  }\n  function linkColumnStructure(columns, parent, depth) {\n    if (depth === void 0) {\n      depth = 0;\n    }\n    return columns.map(function (column) {\n      column = _extends({}, column, {\n        parent: parent,\n        depth: depth\n      });\n      assignColumnAccessor(column);\n      if (column.columns) {\n        column.columns = linkColumnStructure(column.columns, column, depth + 1);\n      }\n      return column;\n    });\n  }\n  function flattenColumns(columns) {\n    return flattenBy(columns, 'columns');\n  }\n  function assignColumnAccessor(column) {\n    // First check for string accessor\n    var id = column.id,\n      accessor = column.accessor,\n      Header = column.Header;\n    if (typeof accessor === 'string') {\n      id = id || accessor;\n      var accessorPath = accessor.split('.');\n      accessor = function accessor(row) {\n        return getBy(row, accessorPath);\n      };\n    }\n    if (!id && typeof Header === 'string' && Header) {\n      id = Header;\n    }\n    if (!id && column.columns) {\n      console.error(column);\n      throw new Error('A column ID (or unique \"Header\" value) is required!');\n    }\n    if (!id) {\n      console.error(column);\n      throw new Error('A column ID (or string accessor) is required!');\n    }\n    Object.assign(column, {\n      id: id,\n      accessor: accessor\n    });\n    return column;\n  }\n  function decorateColumn(column, userDefaultColumn) {\n    if (!userDefaultColumn) {\n      throw new Error();\n    }\n    Object.assign(column, _extends({\n      // Make sure there is a fallback header, just in case\n      Header: emptyRenderer,\n      Footer: emptyRenderer\n    }, defaultColumn, {}, userDefaultColumn, {}, column));\n    Object.assign(column, {\n      originalWidth: column.width\n    });\n    return column;\n  } // Build the header groups from the bottom up\n\n  function makeHeaderGroups(allColumns, defaultColumn, additionalHeaderProperties) {\n    if (additionalHeaderProperties === void 0) {\n      additionalHeaderProperties = function additionalHeaderProperties() {\n        return {};\n      };\n    }\n    var headerGroups = [];\n    var scanColumns = allColumns;\n    var uid = 0;\n    var getUID = function getUID() {\n      return uid++;\n    };\n    var _loop = function _loop() {\n      // The header group we are creating\n      var headerGroup = {\n        headers: []\n      }; // The parent columns we're going to scan next\n\n      var parentColumns = [];\n      var hasParents = scanColumns.some(function (d) {\n        return d.parent;\n      }); // Scan each column for parents\n\n      scanColumns.forEach(function (column) {\n        // What is the latest (last) parent column?\n        var latestParentColumn = [].concat(parentColumns).reverse()[0];\n        var newParent;\n        if (hasParents) {\n          // If the column has a parent, add it if necessary\n          if (column.parent) {\n            newParent = _extends({}, column.parent, {\n              originalId: column.parent.id,\n              id: column.parent.id + \"_\" + getUID(),\n              headers: [column]\n            }, additionalHeaderProperties(column));\n          } else {\n            // If other columns have parents, we'll need to add a place holder if necessary\n            var originalId = column.id + \"_placeholder\";\n            newParent = decorateColumn(_extends({\n              originalId: originalId,\n              id: column.id + \"_placeholder_\" + getUID(),\n              placeholderOf: column,\n              headers: [column]\n            }, additionalHeaderProperties(column)), defaultColumn);\n          } // If the resulting parent columns are the same, just add\n          // the column and increment the header span\n\n          if (latestParentColumn && latestParentColumn.originalId === newParent.originalId) {\n            latestParentColumn.headers.push(column);\n          } else {\n            parentColumns.push(newParent);\n          }\n        }\n        headerGroup.headers.push(column);\n      });\n      headerGroups.push(headerGroup); // Start scanning the parent columns\n\n      scanColumns = parentColumns;\n    };\n    while (scanColumns.length) {\n      _loop();\n    }\n    return headerGroups.reverse();\n  }\n  var pathObjCache = new Map();\n  function getBy(obj, path, def) {\n    if (!path) {\n      return obj;\n    }\n    var cacheKey = typeof path === 'function' ? path : JSON.stringify(path);\n    var pathObj = pathObjCache.get(cacheKey) || function () {\n      var pathObj = makePathArray(path);\n      pathObjCache.set(cacheKey, pathObj);\n      return pathObj;\n    }();\n    var val;\n    try {\n      val = pathObj.reduce(function (cursor, pathPart) {\n        return cursor[pathPart];\n      }, obj);\n    } catch (e) {// continue regardless of error\n    }\n    return typeof val !== 'undefined' ? val : def;\n  }\n  function getFirstDefined() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    for (var i = 0; i < args.length; i += 1) {\n      if (typeof args[i] !== 'undefined') {\n        return args[i];\n      }\n    }\n  }\n  function isFunction(a) {\n    if (typeof a === 'function') {\n      return a;\n    }\n  }\n  function flattenBy(arr, key) {\n    var flat = [];\n    var recurse = function recurse(arr) {\n      arr.forEach(function (d) {\n        if (!d[key]) {\n          flat.push(d);\n        } else {\n          recurse(d[key]);\n        }\n      });\n    };\n    recurse(arr);\n    return flat;\n  }\n  function expandRows(rows, _ref) {\n    var manualExpandedKey = _ref.manualExpandedKey,\n      expanded = _ref.expanded,\n      _ref$expandSubRows = _ref.expandSubRows,\n      expandSubRows = _ref$expandSubRows === void 0 ? true : _ref$expandSubRows;\n    var expandedRows = [];\n    var handleRow = function handleRow(row, addToExpandedRows) {\n      if (addToExpandedRows === void 0) {\n        addToExpandedRows = true;\n      }\n      row.isExpanded = row.original && row.original[manualExpandedKey] || expanded[row.id];\n      row.canExpand = row.subRows && !!row.subRows.length;\n      if (addToExpandedRows) {\n        expandedRows.push(row);\n      }\n      if (row.subRows && row.subRows.length && row.isExpanded) {\n        row.subRows.forEach(function (row) {\n          return handleRow(row, expandSubRows);\n        });\n      }\n    };\n    rows.forEach(function (row) {\n      return handleRow(row);\n    });\n    return expandedRows;\n  }\n  function getFilterMethod(filter, userFilterTypes, filterTypes) {\n    return isFunction(filter) || userFilterTypes[filter] || filterTypes[filter] || filterTypes.text;\n  }\n  function shouldAutoRemoveFilter(autoRemove, value, column) {\n    return autoRemove ? autoRemove(value, column) : typeof value === 'undefined';\n  }\n  function unpreparedAccessWarning() {\n    throw new Error('React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.');\n  }\n  var passiveSupported = null;\n  function passiveEventSupported() {\n    // memoize support to avoid adding multiple test events\n    if (typeof passiveSupported === 'boolean') return passiveSupported;\n    var supported = false;\n    try {\n      var options = {\n        get passive() {\n          supported = true;\n          return false;\n        }\n      };\n      window.addEventListener('test', null, options);\n      window.removeEventListener('test', null, options);\n    } catch (err) {\n      supported = false;\n    }\n    passiveSupported = supported;\n    return passiveSupported;\n  } //\n\n  var reOpenBracket = /\\[/g;\n  var reCloseBracket = /\\]/g;\n  function makePathArray(obj) {\n    return flattenDeep(obj) // remove all periods in parts\n    .map(function (d) {\n      return String(d).replace('.', '_');\n    }) // join parts using period\n    .join('.') // replace brackets with periods\n    .replace(reOpenBracket, '.').replace(reCloseBracket, '') // split it back out on periods\n    .split('.');\n  }\n  function flattenDeep(arr, newArr) {\n    if (newArr === void 0) {\n      newArr = [];\n    }\n    if (!Array.isArray(arr)) {\n      newArr.push(arr);\n    } else {\n      for (var i = 0; i < arr.length; i += 1) {\n        flattenDeep(arr[i], newArr);\n      }\n    }\n    return newArr;\n  }\n  var defaultGetTableProps = function defaultGetTableProps(props) {\n    return _extends({\n      role: 'table'\n    }, props);\n  };\n  var defaultGetTableBodyProps = function defaultGetTableBodyProps(props) {\n    return _extends({\n      role: 'rowgroup'\n    }, props);\n  };\n  var defaultGetHeaderProps = function defaultGetHeaderProps(props, _ref) {\n    var column = _ref.column;\n    return _extends({\n      key: \"header_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount,\n      role: 'columnheader'\n    }, props);\n  };\n  var defaultGetFooterProps = function defaultGetFooterProps(props, _ref2) {\n    var column = _ref2.column;\n    return _extends({\n      key: \"footer_\" + column.id,\n      colSpan: column.totalVisibleHeaderCount\n    }, props);\n  };\n  var defaultGetHeaderGroupProps = function defaultGetHeaderGroupProps(props, _ref3) {\n    var index = _ref3.index;\n    return _extends({\n      key: \"headerGroup_\" + index,\n      role: 'row'\n    }, props);\n  };\n  var defaultGetFooterGroupProps = function defaultGetFooterGroupProps(props, _ref4) {\n    var index = _ref4.index;\n    return _extends({\n      key: \"footerGroup_\" + index\n    }, props);\n  };\n  var defaultGetRowProps = function defaultGetRowProps(props, _ref5) {\n    var row = _ref5.row;\n    return _extends({\n      key: \"row_\" + row.id,\n      role: 'row'\n    }, props);\n  };\n  var defaultGetCellProps = function defaultGetCellProps(props, _ref6) {\n    var cell = _ref6.cell;\n    return _extends({\n      key: \"cell_\" + cell.row.id + \"_\" + cell.column.id,\n      role: 'cell'\n    }, props);\n  };\n  function makeDefaultPluginHooks() {\n    return {\n      useOptions: [],\n      stateReducers: [],\n      useControlledState: [],\n      columns: [],\n      columnsDeps: [],\n      allColumns: [],\n      allColumnsDeps: [],\n      accessValue: [],\n      materializedColumns: [],\n      materializedColumnsDeps: [],\n      useInstanceAfterData: [],\n      visibleColumns: [],\n      visibleColumnsDeps: [],\n      headerGroups: [],\n      headerGroupsDeps: [],\n      useInstanceBeforeDimensions: [],\n      useInstance: [],\n      prepareRow: [],\n      getTableProps: [defaultGetTableProps],\n      getTableBodyProps: [defaultGetTableBodyProps],\n      getHeaderGroupProps: [defaultGetHeaderGroupProps],\n      getFooterGroupProps: [defaultGetFooterGroupProps],\n      getHeaderProps: [defaultGetHeaderProps],\n      getFooterProps: [defaultGetFooterProps],\n      getRowProps: [defaultGetRowProps],\n      getCellProps: [defaultGetCellProps],\n      useFinalInstance: []\n    };\n  }\n  actions.resetHiddenColumns = 'resetHiddenColumns';\n  actions.toggleHideColumn = 'toggleHideColumn';\n  actions.setHiddenColumns = 'setHiddenColumns';\n  actions.toggleHideAllColumns = 'toggleHideAllColumns';\n  var useColumnVisibility = function useColumnVisibility(hooks) {\n    hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps];\n    hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps];\n    hooks.stateReducers.push(reducer);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions);\n    hooks.headerGroupsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.hiddenColumns]);\n    });\n    hooks.useInstance.push(useInstance);\n  };\n  useColumnVisibility.pluginName = 'useColumnVisibility';\n  var defaultGetToggleHiddenProps = function defaultGetToggleHiddenProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      onChange: function onChange(e) {\n        column.toggleHidden(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: column.isVisible,\n      title: 'Toggle Column Visible'\n    }];\n  };\n  var defaultGetToggleHideAllColumnsProps = function defaultGetToggleHideAllColumnsProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleHideAllColumns(!e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n      title: 'Toggle All Columns Hidden',\n      indeterminate: !instance.allColumnsHidden && instance.state.hiddenColumns.length\n    }];\n  };\n  function reducer(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        hiddenColumns: []\n      }, state);\n    }\n    if (action.type === actions.resetHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: instance.initialState.hiddenColumns || []\n      });\n    }\n    if (action.type === actions.toggleHideColumn) {\n      var should = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.includes(action.columnId);\n      var hiddenColumns = should ? [].concat(state.hiddenColumns, [action.columnId]) : state.hiddenColumns.filter(function (d) {\n        return d !== action.columnId;\n      });\n      return _extends({}, state, {\n        hiddenColumns: hiddenColumns\n      });\n    }\n    if (action.type === actions.setHiddenColumns) {\n      return _extends({}, state, {\n        hiddenColumns: functionalUpdate(action.value, state.hiddenColumns)\n      });\n    }\n    if (action.type === actions.toggleHideAllColumns) {\n      var shouldAll = typeof action.value !== 'undefined' ? action.value : !state.hiddenColumns.length;\n      return _extends({}, state, {\n        hiddenColumns: shouldAll ? instance.allColumns.map(function (d) {\n          return d.id;\n        }) : []\n      });\n    }\n  }\n  function useInstanceBeforeDimensions(instance) {\n    var headers = instance.headers,\n      hiddenColumns = instance.state.hiddenColumns;\n    var isMountedRef = React.useRef(false);\n    if (!isMountedRef.current) ;\n    var handleColumn = function handleColumn(column, parentVisible) {\n      column.isVisible = parentVisible && !hiddenColumns.includes(column.id);\n      var totalVisibleHeaderCount = 0;\n      if (column.headers && column.headers.length) {\n        column.headers.forEach(function (subColumn) {\n          return totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible);\n        });\n      } else {\n        totalVisibleHeaderCount = column.isVisible ? 1 : 0;\n      }\n      column.totalVisibleHeaderCount = totalVisibleHeaderCount;\n      return totalVisibleHeaderCount;\n    };\n    var totalVisibleHeaderCount = 0;\n    headers.forEach(function (subHeader) {\n      return totalVisibleHeaderCount += handleColumn(subHeader, true);\n    });\n  }\n  function useInstance(instance) {\n    var columns = instance.columns,\n      flatHeaders = instance.flatHeaders,\n      dispatch = instance.dispatch,\n      allColumns = instance.allColumns,\n      getHooks = instance.getHooks,\n      hiddenColumns = instance.state.hiddenColumns,\n      _instance$autoResetHi = instance.autoResetHiddenColumns,\n      autoResetHiddenColumns = _instance$autoResetHi === void 0 ? true : _instance$autoResetHi;\n    var getInstance = useGetLatest(instance);\n    var allColumnsHidden = allColumns.length === hiddenColumns.length;\n    var toggleHideColumn = React.useCallback(function (columnId, value) {\n      return dispatch({\n        type: actions.toggleHideColumn,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setHiddenColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.setHiddenColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleHideAllColumns = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleHideAllColumns,\n        value: value\n      });\n    }, [dispatch]);\n    var getToggleHideAllColumnsProps = makePropGetter(getHooks().getToggleHideAllColumnsProps, {\n      instance: getInstance()\n    });\n    flatHeaders.forEach(function (column) {\n      column.toggleHidden = function (value) {\n        dispatch({\n          type: actions.toggleHideColumn,\n          columnId: column.id,\n          value: value\n        });\n      };\n      column.getToggleHiddenProps = makePropGetter(getHooks().getToggleHiddenProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    var getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetHiddenColumns()) {\n        dispatch({\n          type: actions.resetHiddenColumns\n        });\n      }\n    }, [dispatch, columns]);\n    Object.assign(instance, {\n      allColumnsHidden: allColumnsHidden,\n      toggleHideColumn: toggleHideColumn,\n      setHiddenColumns: setHiddenColumns,\n      toggleHideAllColumns: toggleHideAllColumns,\n      getToggleHideAllColumnsProps: getToggleHideAllColumnsProps\n    });\n  }\n  var defaultInitialState = {};\n  var defaultColumnInstance = {};\n  var defaultReducer = function defaultReducer(state, action, prevState) {\n    return state;\n  };\n  var defaultGetSubRows = function defaultGetSubRows(row, index) {\n    return row.subRows || [];\n  };\n  var defaultGetRowId = function defaultGetRowId(row, index, parent) {\n    return \"\" + (parent ? [parent.id, index].join('.') : index);\n  };\n  var defaultUseControlledState = function defaultUseControlledState(d) {\n    return d;\n  };\n  function applyDefaults(props) {\n    var _props$initialState = props.initialState,\n      initialState = _props$initialState === void 0 ? defaultInitialState : _props$initialState,\n      _props$defaultColumn = props.defaultColumn,\n      defaultColumn = _props$defaultColumn === void 0 ? defaultColumnInstance : _props$defaultColumn,\n      _props$getSubRows = props.getSubRows,\n      getSubRows = _props$getSubRows === void 0 ? defaultGetSubRows : _props$getSubRows,\n      _props$getRowId = props.getRowId,\n      getRowId = _props$getRowId === void 0 ? defaultGetRowId : _props$getRowId,\n      _props$stateReducer = props.stateReducer,\n      stateReducer = _props$stateReducer === void 0 ? defaultReducer : _props$stateReducer,\n      _props$useControlledS = props.useControlledState,\n      useControlledState = _props$useControlledS === void 0 ? defaultUseControlledState : _props$useControlledS,\n      rest = _objectWithoutPropertiesLoose(props, [\"initialState\", \"defaultColumn\", \"getSubRows\", \"getRowId\", \"stateReducer\", \"useControlledState\"]);\n    return _extends({}, rest, {\n      initialState: initialState,\n      defaultColumn: defaultColumn,\n      getSubRows: getSubRows,\n      getRowId: getRowId,\n      stateReducer: stateReducer,\n      useControlledState: useControlledState\n    });\n  }\n  var useTable = function useTable(props) {\n    for (var _len = arguments.length, plugins = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      plugins[_key - 1] = arguments[_key];\n    }\n\n    // Apply default props\n    props = applyDefaults(props); // Add core plugins\n\n    plugins = [useColumnVisibility].concat(plugins); // Create the table instance\n\n    var instanceRef = React.useRef({}); // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n\n    var getInstance = useGetLatest(instanceRef.current); // Assign the props, plugins and hooks to the instance\n\n    Object.assign(getInstance(), _extends({}, props, {\n      plugins: plugins,\n      hooks: makeDefaultPluginHooks()\n    })); // Allow plugins to register hooks as early as possible\n\n    plugins.filter(Boolean).forEach(function (plugin) {\n      plugin(getInstance().hooks);\n    }); // Consume all hooks and make a getter for them\n\n    var getHooks = useGetLatest(getInstance().hooks);\n    getInstance().getHooks = getHooks;\n    delete getInstance().hooks; // Allow useOptions hooks to modify the options coming into the table\n\n    Object.assign(getInstance(), reduceHooks(getHooks().useOptions, applyDefaults(props)));\n    var _getInstance = getInstance(),\n      data = _getInstance.data,\n      userColumns = _getInstance.columns,\n      initialState = _getInstance.initialState,\n      defaultColumn = _getInstance.defaultColumn,\n      getSubRows = _getInstance.getSubRows,\n      getRowId = _getInstance.getRowId,\n      stateReducer = _getInstance.stateReducer,\n      useControlledState = _getInstance.useControlledState; // Setup user reducer ref\n\n    var getStateReducer = useGetLatest(stateReducer); // Build the reducer\n\n    var reducer = React.useCallback(function (state, action) {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({\n          action: action\n        });\n        throw new Error('Unknown Action 👆');\n      } // Reduce the state from all plugin reducers\n\n      return [].concat(getHooks().stateReducers, Array.isArray(getStateReducer()) ? getStateReducer() : [getStateReducer()]).reduce(function (s, handler) {\n        return handler(s, action, state, getInstance()) || s;\n      }, state);\n    }, [getHooks, getStateReducer, getInstance]); // Start the reducer\n\n    var _React$useReducer = React.useReducer(reducer, undefined, function () {\n        return reducer(initialState, {\n          type: actions.init\n        });\n      }),\n      reducerState = _React$useReducer[0],\n      dispatch = _React$useReducer[1]; // Allow the user to control the final state with hooks\n\n    var state = reduceHooks([].concat(getHooks().useControlledState, [useControlledState]), reducerState, {\n      instance: getInstance()\n    });\n    Object.assign(getInstance(), {\n      state: state,\n      dispatch: dispatch\n    }); // Decorate All the columns\n\n    var columns = React.useMemo(function () {\n      return linkColumnStructure(reduceHooks(getHooks().columns, userColumns, {\n        instance: getInstance()\n      }));\n    }, [getHooks, getInstance, userColumns].concat(reduceHooks(getHooks().columnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().columns = columns; // Get the flat list of all columns and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var allColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance()\n      }).map(assignColumnAccessor);\n    }, [columns, getHooks, getInstance].concat(reduceHooks(getHooks().allColumnsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().allColumns = allColumns; // Access the row model using initial columns\n\n    var _React$useMemo = React.useMemo(function () {\n        var rows = [];\n        var flatRows = [];\n        var rowsById = {};\n        var allColumnsQueue = [].concat(allColumns);\n        while (allColumnsQueue.length) {\n          var column = allColumnsQueue.shift();\n          accessRowsForColumn({\n            data: data,\n            rows: rows,\n            flatRows: flatRows,\n            rowsById: rowsById,\n            column: column,\n            getRowId: getRowId,\n            getSubRows: getSubRows,\n            accessValueHooks: getHooks().accessValue,\n            getInstance: getInstance\n          });\n        }\n        return [rows, flatRows, rowsById];\n      }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance]),\n      rows = _React$useMemo[0],\n      flatRows = _React$useMemo[1],\n      rowsById = _React$useMemo[2];\n    Object.assign(getInstance(), {\n      rows: rows,\n      initialRows: [].concat(rows),\n      flatRows: flatRows,\n      rowsById: rowsById // materializedColumns,\n    });\n\n    loopHooks(getHooks().useInstanceAfterData, getInstance()); // Get the flat list of all columns AFTER the rows\n    // have been access, and allow hooks to decorate\n    // those columns (and trigger this memoization via deps)\n\n    var visibleColumns = React.useMemo(function () {\n      return reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance()\n      }).map(function (d) {\n        return decorateColumn(d, defaultColumn);\n      });\n    }, [getHooks, allColumns, getInstance, defaultColumn].concat(reduceHooks(getHooks().visibleColumnsDeps, [], {\n      instance: getInstance()\n    }))); // Combine new visible columns with all columns\n\n    allColumns = React.useMemo(function () {\n      var columns = [].concat(visibleColumns);\n      allColumns.forEach(function (column) {\n        if (!columns.find(function (d) {\n          return d.id === column.id;\n        })) {\n          columns.push(column);\n        }\n      });\n      return columns;\n    }, [allColumns, visibleColumns]);\n    getInstance().allColumns = allColumns;\n    {\n      var duplicateColumns = allColumns.filter(function (column, i) {\n        return allColumns.findIndex(function (d) {\n          return d.id === column.id;\n        }) !== i;\n      });\n      if (duplicateColumns.length) {\n        console.info(allColumns);\n        throw new Error(\"Duplicate columns were found with ids: \\\"\" + duplicateColumns.map(function (d) {\n          return d.id;\n        }).join(', ') + \"\\\" in the columns array above\");\n      }\n    } // Make the headerGroups\n\n    var headerGroups = React.useMemo(function () {\n      return reduceHooks(getHooks().headerGroups, makeHeaderGroups(visibleColumns, defaultColumn), getInstance());\n    }, [getHooks, visibleColumns, defaultColumn, getInstance].concat(reduceHooks(getHooks().headerGroupsDeps, [], {\n      instance: getInstance()\n    })));\n    getInstance().headerGroups = headerGroups; // Get the first level of headers\n\n    var headers = React.useMemo(function () {\n      return headerGroups.length ? headerGroups[0].headers : [];\n    }, [headerGroups]);\n    getInstance().headers = headers; // Provide a flat header list for utilities\n\n    getInstance().flatHeaders = headerGroups.reduce(function (all, headerGroup) {\n      return [].concat(all, headerGroup.headers);\n    }, []);\n    loopHooks(getHooks().useInstanceBeforeDimensions, getInstance()); // Filter columns down to visible ones\n\n    var visibleColumnsDep = visibleColumns.filter(function (d) {\n      return d.isVisible;\n    }).map(function (d) {\n      return d.id;\n    }).sort().join('_');\n    visibleColumns = React.useMemo(function () {\n      return visibleColumns.filter(function (d) {\n        return d.isVisible;\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]);\n    getInstance().visibleColumns = visibleColumns; // Header Visibility is needed by this point\n\n    var _calculateHeaderWidth = calculateHeaderWidths(headers),\n      totalColumnsMinWidth = _calculateHeaderWidth[0],\n      totalColumnsWidth = _calculateHeaderWidth[1],\n      totalColumnsMaxWidth = _calculateHeaderWidth[2];\n    getInstance().totalColumnsMinWidth = totalColumnsMinWidth;\n    getInstance().totalColumnsWidth = totalColumnsWidth;\n    getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth;\n    loopHooks(getHooks().useInstance, getInstance()) // Each materialized header needs to be assigned a render function and other\n    // prop getter properties here.\n    ;\n\n    [].concat(getInstance().flatHeaders, getInstance().allColumns).forEach(function (column) {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column); // Give columns/headers a default getHeaderProps\n\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column: column\n      }); // Give columns/headers a default getFooterProps\n\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column: column\n      });\n    });\n    getInstance().headerGroups = React.useMemo(function () {\n      return headerGroups.filter(function (headerGroup, i) {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(function (column) {\n          var recurse = function recurse(headers) {\n            return headers.filter(function (column) {\n              if (column.headers) {\n                return recurse(column.headers);\n              }\n              return column.isVisible;\n            }).length;\n          };\n          if (column.headers) {\n            return recurse(column.headers);\n          }\n          return column.isVisible;\n        }); // Give headerGroups getRowProps\n\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(getHooks().getHeaderGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          headerGroup.getFooterGroupProps = makePropGetter(getHooks().getFooterGroupProps, {\n            instance: getInstance(),\n            headerGroup: headerGroup,\n            index: i\n          });\n          return true;\n        }\n        return false;\n      });\n    }, [headerGroups, getInstance, getHooks]);\n    getInstance().footerGroups = [].concat(getInstance().headerGroups).reverse(); // The prepareRow function is absolutely necessary and MUST be called on\n    // any rows the user wishes to be displayed.\n\n    getInstance().prepareRow = React.useCallback(function (row) {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row: row\n      }); // Build the visible cells for each row\n\n      row.allCells = allColumns.map(function (column) {\n        var value = row.values[column.id];\n        var cell = {\n          column: column,\n          row: row,\n          value: value\n        }; // Give each cell a getCellProps base\n\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell: cell\n        }); // Give each cell a renderer function (supports multiple renderers)\n\n        cell.render = makeRenderer(getInstance(), column, {\n          row: row,\n          cell: cell,\n          value: value\n        });\n        return cell;\n      });\n      row.cells = visibleColumns.map(function (column) {\n        return row.allCells.find(function (cell) {\n          return cell.column.id === column.id;\n        });\n      }); // need to apply any row specific hooks (useExpanded requires this)\n\n      loopHooks(getHooks().prepareRow, row, {\n        instance: getInstance()\n      });\n    }, [getHooks, getInstance, allColumns, visibleColumns]);\n    getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n      instance: getInstance()\n    });\n    getInstance().getTableBodyProps = makePropGetter(getHooks().getTableBodyProps, {\n      instance: getInstance()\n    });\n    loopHooks(getHooks().useFinalInstance, getInstance());\n    return getInstance();\n  };\n  function calculateHeaderWidths(headers, left) {\n    if (left === void 0) {\n      left = 0;\n    }\n    var sumTotalMinWidth = 0;\n    var sumTotalWidth = 0;\n    var sumTotalMaxWidth = 0;\n    var sumTotalFlexWidth = 0;\n    headers.forEach(function (header) {\n      var subHeaders = header.headers;\n      header.totalLeft = left;\n      if (subHeaders && subHeaders.length) {\n        var _calculateHeaderWidth2 = calculateHeaderWidths(subHeaders, left),\n          totalMinWidth = _calculateHeaderWidth2[0],\n          totalWidth = _calculateHeaderWidth2[1],\n          totalMaxWidth = _calculateHeaderWidth2[2],\n          totalFlexWidth = _calculateHeaderWidth2[3];\n        header.totalMinWidth = totalMinWidth;\n        header.totalWidth = totalWidth;\n        header.totalMaxWidth = totalMaxWidth;\n        header.totalFlexWidth = totalFlexWidth;\n      } else {\n        header.totalMinWidth = header.minWidth;\n        header.totalWidth = Math.min(Math.max(header.minWidth, header.width), header.maxWidth);\n        header.totalMaxWidth = header.maxWidth;\n        header.totalFlexWidth = header.canResize ? header.totalWidth : 0;\n      }\n      if (header.isVisible) {\n        left += header.totalWidth;\n        sumTotalMinWidth += header.totalMinWidth;\n        sumTotalWidth += header.totalWidth;\n        sumTotalMaxWidth += header.totalMaxWidth;\n        sumTotalFlexWidth += header.totalFlexWidth;\n      }\n    });\n    return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth];\n  }\n  function accessRowsForColumn(_ref) {\n    var data = _ref.data,\n      rows = _ref.rows,\n      flatRows = _ref.flatRows,\n      rowsById = _ref.rowsById,\n      column = _ref.column,\n      getRowId = _ref.getRowId,\n      getSubRows = _ref.getSubRows,\n      accessValueHooks = _ref.accessValueHooks,\n      getInstance = _ref.getInstance;\n\n    // Access the row's data column-by-column\n    // We do it this way so we can incrementally add materialized\n    // columns after the first pass and avoid excessive looping\n    var accessRow = function accessRow(originalRow, rowIndex, depth, parent, parentRows) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n\n      // Keep the original reference around\n      var original = originalRow;\n      var id = getRowId(originalRow, rowIndex, parent);\n      var row = rowsById[id]; // If the row hasn't been created, let's make it\n\n      if (!row) {\n        row = {\n          id: id,\n          original: original,\n          index: rowIndex,\n          depth: depth,\n          cells: [{}] // This is a dummy cell\n        }; // Override common array functions (and the dummy cell's getCellProps function)\n        // to show an error if it is accessed without calling prepareRow\n\n        row.cells.map = unpreparedAccessWarning;\n        row.cells.filter = unpreparedAccessWarning;\n        row.cells.forEach = unpreparedAccessWarning;\n        row.cells[0].getCellProps = unpreparedAccessWarning; // Create the cells and values\n\n        row.values = {}; // Push this row into the parentRows array\n\n        parentRows.push(row); // Keep track of every row in a flat array\n\n        flatRows.push(row); // Also keep track of every row by its ID\n\n        rowsById[id] = row; // Get the original subrows\n\n        row.originalSubRows = getSubRows(originalRow, rowIndex); // Then recursively access them\n\n        if (row.originalSubRows) {\n          var subRows = [];\n          row.originalSubRows.forEach(function (d, i) {\n            return accessRow(d, i, depth + 1, row, subRows);\n          }); // Keep the new subRows array on the row\n\n          row.subRows = subRows;\n        }\n      } else if (row.subRows) {\n        // If the row exists, then it's already been accessed\n        // Keep recursing, but don't worry about passing the\n        // accumlator array (those rows already exist)\n        row.originalSubRows.forEach(function (d, i) {\n          return accessRow(d, i, depth + 1, row);\n        });\n      } // If the column has an accessor, use it to get a value\n\n      if (column.accessor) {\n        row.values[column.id] = column.accessor(originalRow, rowIndex, row, parentRows, data);\n      } // Allow plugins to manipulate the column value\n\n      row.values[column.id] = reduceHooks(accessValueHooks, row.values[column.id], {\n        row: row,\n        column: column,\n        instance: getInstance()\n      }, true);\n    };\n    data.forEach(function (originalRow, rowIndex) {\n      return accessRow(originalRow, rowIndex, 0, undefined, rows);\n    });\n  }\n  actions.resetExpanded = 'resetExpanded';\n  actions.toggleRowExpanded = 'toggleRowExpanded';\n  actions.toggleAllRowsExpanded = 'toggleAllRowsExpanded';\n  var useExpanded = function useExpanded(hooks) {\n    hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps];\n    hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps];\n    hooks.stateReducers.push(reducer$1);\n    hooks.useInstance.push(useInstance$1);\n    hooks.prepareRow.push(prepareRow);\n  };\n  useExpanded.pluginName = 'useExpanded';\n  var defaultGetToggleAllRowsExpandedProps = function defaultGetToggleAllRowsExpandedProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      onClick: function onClick(e) {\n        instance.toggleAllRowsExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle All Rows Expanded'\n    }];\n  };\n  var defaultGetToggleRowExpandedProps = function defaultGetToggleRowExpandedProps(props, _ref2) {\n    var row = _ref2.row;\n    return [props, {\n      onClick: function onClick() {\n        row.toggleRowExpanded();\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      title: 'Toggle Row Expanded'\n    }];\n  }; // Reducer\n\n  function reducer$1(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        expanded: {}\n      }, state);\n    }\n    if (action.type === actions.resetExpanded) {\n      return _extends({}, state, {\n        expanded: instance.initialState.expanded || {}\n      });\n    }\n    if (action.type === actions.toggleAllRowsExpanded) {\n      var value = action.value;\n      var isAllRowsExpanded = instance.isAllRowsExpanded,\n        rowsById = instance.rowsById;\n      var expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded;\n      if (expandAll) {\n        var expanded = {};\n        Object.keys(rowsById).forEach(function (rowId) {\n          expanded[rowId] = true;\n        });\n        return _extends({}, state, {\n          expanded: expanded\n        });\n      }\n      return _extends({}, state, {\n        expanded: {}\n      });\n    }\n    if (action.type === actions.toggleRowExpanded) {\n      var id = action.id,\n        setExpanded = action.value;\n      var exists = state.expanded[id];\n      var shouldExist = typeof setExpanded !== 'undefined' ? setExpanded : !exists;\n      if (!exists && shouldExist) {\n        var _extends2;\n        return _extends({}, state, {\n          expanded: _extends({}, state.expanded, (_extends2 = {}, _extends2[id] = true, _extends2))\n        });\n      } else if (exists && !shouldExist) {\n        var _state$expanded = state.expanded,\n          _ = _state$expanded[id],\n          rest = _objectWithoutPropertiesLoose(_state$expanded, [id].map(_toPropertyKey));\n        return _extends({}, state, {\n          expanded: rest\n        });\n      } else {\n        return state;\n      }\n    }\n  }\n  function useInstance$1(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      rowsById = instance.rowsById,\n      _instance$manualExpan = instance.manualExpandedKey,\n      manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n      _instance$paginateExp = instance.paginateExpandedRows,\n      paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n      _instance$expandSubRo = instance.expandSubRows,\n      expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n      _instance$autoResetEx = instance.autoResetExpanded,\n      autoResetExpanded = _instance$autoResetEx === void 0 ? true : _instance$autoResetEx,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      expanded = instance.state.expanded,\n      dispatch = instance.dispatch;\n    ensurePluginOrder(plugins, ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'], 'useExpanded');\n    var getAutoResetExpanded = useGetLatest(autoResetExpanded);\n    var isAllRowsExpanded = Boolean(Object.keys(rowsById).length && Object.keys(expanded).length);\n    if (isAllRowsExpanded) {\n      if (Object.keys(rowsById).some(function (id) {\n        return !expanded[id];\n      })) {\n        isAllRowsExpanded = false;\n      }\n    } // Bypass any effects from firing when this changes\n\n    useMountedLayoutEffect(function () {\n      if (getAutoResetExpanded()) {\n        dispatch({\n          type: actions.resetExpanded\n        });\n      }\n    }, [dispatch, data]);\n    var toggleRowExpanded = React.useCallback(function (id, value) {\n      dispatch({\n        type: actions.toggleRowExpanded,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllRowsExpanded = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsExpanded,\n        value: value\n      });\n    }, [dispatch]);\n    var expandedRows = React.useMemo(function () {\n      if (paginateExpandedRows) {\n        return expandRows(rows, {\n          manualExpandedKey: manualExpandedKey,\n          expanded: expanded,\n          expandSubRows: expandSubRows\n        });\n      }\n      return rows;\n    }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows]);\n    var expandedDepth = React.useMemo(function () {\n      return findExpandedDepth(expanded);\n    }, [expanded]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsExpandedProps = makePropGetter(getHooks().getToggleAllRowsExpandedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      preExpandedRows: rows,\n      expandedRows: expandedRows,\n      rows: expandedRows,\n      expandedDepth: expandedDepth,\n      isAllRowsExpanded: isAllRowsExpanded,\n      toggleRowExpanded: toggleRowExpanded,\n      toggleAllRowsExpanded: toggleAllRowsExpanded,\n      getToggleAllRowsExpandedProps: getToggleAllRowsExpandedProps\n    });\n  }\n  function prepareRow(row, _ref3) {\n    var getHooks = _ref3.instance.getHooks,\n      instance = _ref3.instance;\n    row.toggleRowExpanded = function (set) {\n      return instance.toggleRowExpanded(row.id, set);\n    };\n    row.getToggleRowExpandedProps = makePropGetter(getHooks().getToggleRowExpandedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n  function findExpandedDepth(expanded) {\n    var maxDepth = 0;\n    Object.keys(expanded).forEach(function (id) {\n      var splitId = id.split('.');\n      maxDepth = Math.max(maxDepth, splitId.length);\n    });\n    return maxDepth;\n  }\n  var text = function text(rows, ids, filterValue) {\n    rows = rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return String(rowValue).toLowerCase().includes(String(filterValue).toLowerCase());\n      });\n    });\n    return rows;\n  };\n  text.autoRemove = function (val) {\n    return !val;\n  };\n  var exactText = function exactText(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase() : true;\n      });\n    });\n  };\n  exactText.autoRemove = function (val) {\n    return !val;\n  };\n  var exactTextCase = function exactTextCase(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue !== undefined ? String(rowValue) === String(filterValue) : true;\n      });\n    });\n  };\n  exactTextCase.autoRemove = function (val) {\n    return !val;\n  };\n  var includes = function includes(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue.includes(filterValue);\n      });\n    });\n  };\n  includes.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesAll = function includesAll(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.every(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n  includesAll.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesSome = function includesSome(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue && rowValue.length && filterValue.some(function (val) {\n          return rowValue.includes(val);\n        });\n      });\n    });\n  };\n  includesSome.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var includesValue = function includesValue(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return filterValue.includes(rowValue);\n      });\n    });\n  };\n  includesValue.autoRemove = function (val) {\n    return !val || !val.length;\n  };\n  var exact = function exact(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue === filterValue;\n      });\n    });\n  };\n  exact.autoRemove = function (val) {\n    return typeof val === 'undefined';\n  };\n  var equals = function equals(rows, ids, filterValue) {\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id]; // eslint-disable-next-line eqeqeq\n\n        return rowValue == filterValue;\n      });\n    });\n  };\n  equals.autoRemove = function (val) {\n    return val == null;\n  };\n  var between = function between(rows, ids, filterValue) {\n    var _ref = filterValue || [],\n      min = _ref[0],\n      max = _ref[1];\n    min = typeof min === 'number' ? min : -Infinity;\n    max = typeof max === 'number' ? max : Infinity;\n    if (min > max) {\n      var temp = min;\n      min = max;\n      max = temp;\n    }\n    return rows.filter(function (row) {\n      return ids.some(function (id) {\n        var rowValue = row.values[id];\n        return rowValue >= min && rowValue <= max;\n      });\n    });\n  };\n  between.autoRemove = function (val) {\n    return !val || typeof val[0] !== 'number' && typeof val[1] !== 'number';\n  };\n  var filterTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    text: text,\n    exactText: exactText,\n    exactTextCase: exactTextCase,\n    includes: includes,\n    includesAll: includesAll,\n    includesSome: includesSome,\n    includesValue: includesValue,\n    exact: exact,\n    equals: equals,\n    between: between\n  });\n  actions.resetFilters = 'resetFilters';\n  actions.setFilter = 'setFilter';\n  actions.setAllFilters = 'setAllFilters';\n  var useFilters = function useFilters(hooks) {\n    hooks.stateReducers.push(reducer$2);\n    hooks.useInstance.push(useInstance$2);\n  };\n  useFilters.pluginName = 'useFilters';\n  function reducer$2(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        filters: []\n      }, state);\n    }\n    if (action.type === actions.resetFilters) {\n      return _extends({}, state, {\n        filters: instance.initialState.filters || []\n      });\n    }\n    if (action.type === actions.setFilter) {\n      var columnId = action.columnId,\n        filterValue = action.filterValue;\n      var allColumns = instance.allColumns,\n        userFilterTypes = instance.filterTypes;\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n      if (!column) {\n        throw new Error(\"React-Table: Could not find a column with id: \" + columnId);\n      }\n      var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n      var previousfilter = state.filters.find(function (d) {\n        return d.id === columnId;\n      });\n      var newFilter = functionalUpdate(filterValue, previousfilter && previousfilter.value); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n        return _extends({}, state, {\n          filters: state.filters.filter(function (d) {\n            return d.id !== columnId;\n          })\n        });\n      }\n      if (previousfilter) {\n        return _extends({}, state, {\n          filters: state.filters.map(function (d) {\n            if (d.id === columnId) {\n              return {\n                id: columnId,\n                value: newFilter\n              };\n            }\n            return d;\n          })\n        });\n      }\n      return _extends({}, state, {\n        filters: [].concat(state.filters, [{\n          id: columnId,\n          value: newFilter\n        }])\n      });\n    }\n    if (action.type === actions.setAllFilters) {\n      var filters = action.filters;\n      var _allColumns = instance.allColumns,\n        _userFilterTypes = instance.filterTypes;\n      return _extends({}, state, {\n        // Filter out undefined values\n        filters: functionalUpdate(filters, state.filters).filter(function (filter) {\n          var column = _allColumns.find(function (d) {\n            return d.id === filter.id;\n          });\n          var filterMethod = getFilterMethod(column.filter, _userFilterTypes || {}, filterTypes);\n          if (shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)) {\n            return false;\n          }\n          return true;\n        })\n      });\n    }\n  }\n  function useInstance$2(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      userFilterTypes = instance.filterTypes,\n      manualFilters = instance.manualFilters,\n      _instance$defaultCanF = instance.defaultCanFilter,\n      defaultCanFilter = _instance$defaultCanF === void 0 ? false : _instance$defaultCanF,\n      disableFilters = instance.disableFilters,\n      filters = instance.state.filters,\n      dispatch = instance.dispatch,\n      _instance$autoResetFi = instance.autoResetFilters,\n      autoResetFilters = _instance$autoResetFi === void 0 ? true : _instance$autoResetFi;\n    var setFilter = React.useCallback(function (columnId, filterValue) {\n      dispatch({\n        type: actions.setFilter,\n        columnId: columnId,\n        filterValue: filterValue\n      });\n    }, [dispatch]);\n    var setAllFilters = React.useCallback(function (filters) {\n      dispatch({\n        type: actions.setAllFilters,\n        filters: filters\n      });\n    }, [dispatch]);\n    allColumns.forEach(function (column) {\n      var id = column.id,\n        accessor = column.accessor,\n        columnDefaultCanFilter = column.defaultCanFilter,\n        columnDisableFilters = column.disableFilters; // Determine if a column is filterable\n\n      column.canFilter = accessor ? getFirstDefined(columnDisableFilters === true ? false : undefined, disableFilters === true ? false : undefined, true) : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false); // Provide the column a way of updating the filter value\n\n      column.setFilter = function (val) {\n        return setFilter(column.id, val);\n      }; // Provide the current filter value to the column for\n      // convenience\n\n      var found = filters.find(function (d) {\n        return d.id === id;\n      });\n      column.filterValue = found && found.value;\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualFilters || !filters.length) {\n          return [rows, flatRows, rowsById];\n        }\n        var filteredFlatRows = [];\n        var filteredRowsById = {}; // Filters top level and nested rows\n\n        var filterRows = function filterRows(rows, depth) {\n          if (depth === void 0) {\n            depth = 0;\n          }\n          var filteredRows = rows;\n          filteredRows = filters.reduce(function (filteredSoFar, _ref) {\n            var columnId = _ref.id,\n              filterValue = _ref.value;\n            // Find the filters column\n            var column = allColumns.find(function (d) {\n              return d.id === columnId;\n            });\n            if (!column) {\n              return filteredSoFar;\n            }\n            if (depth === 0) {\n              column.preFilteredRows = filteredSoFar;\n            }\n            var filterMethod = getFilterMethod(column.filter, userFilterTypes || {}, filterTypes);\n            if (!filterMethod) {\n              console.warn(\"Could not find a valid 'column.filter' for column with the ID: \" + column.id + \".\");\n              return filteredSoFar;\n            } // Pass the rows, id, filterValue and column to the filterMethod\n            // to get the filtered rows back\n\n            column.filteredRows = filterMethod(filteredSoFar, [columnId], filterValue);\n            return column.filteredRows;\n          }, rows); // Apply the filter to any subRows\n          // We technically could do this recursively in the above loop,\n          // but that would severely hinder the API for the user, since they\n          // would be required to do that recursion in some scenarios\n\n          filteredRows.forEach(function (row) {\n            filteredFlatRows.push(row);\n            filteredRowsById[row.id] = row;\n            if (!row.subRows) {\n              return;\n            }\n            row.subRows = row.subRows && row.subRows.length > 0 ? filterRows(row.subRows, depth + 1) : row.subRows;\n          });\n          return filteredRows;\n        };\n        return [filterRows(rows), filteredFlatRows, filteredRowsById];\n      }, [manualFilters, filters, rows, flatRows, rowsById, allColumns, userFilterTypes]),\n      filteredRows = _React$useMemo[0],\n      filteredFlatRows = _React$useMemo[1],\n      filteredRowsById = _React$useMemo[2];\n    React.useMemo(function () {\n      // Now that each filtered column has it's partially filtered rows,\n      // lets assign the final filtered rows to all of the other columns\n      var nonFilteredColumns = allColumns.filter(function (column) {\n        return !filters.find(function (d) {\n          return d.id === column.id;\n        });\n      }); // This essentially enables faceted filter options to be built easily\n      // using every column's preFilteredRows value\n\n      nonFilteredColumns.forEach(function (column) {\n        column.preFilteredRows = filteredRows;\n        column.filteredRows = filteredRows;\n      });\n    }, [filteredRows, filters, allColumns]);\n    var getAutoResetFilters = useGetLatest(autoResetFilters);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetFilters()) {\n        dispatch({\n          type: actions.resetFilters\n        });\n      }\n    }, [dispatch, manualFilters ? null : data]);\n    Object.assign(instance, {\n      preFilteredRows: rows,\n      preFilteredFlatRows: flatRows,\n      preFilteredRowsById: rowsById,\n      filteredRows: filteredRows,\n      filteredFlatRows: filteredFlatRows,\n      filteredRowsById: filteredRowsById,\n      rows: filteredRows,\n      flatRows: filteredFlatRows,\n      rowsById: filteredRowsById,\n      setFilter: setFilter,\n      setAllFilters: setAllFilters\n    });\n  }\n  actions.resetGlobalFilter = 'resetGlobalFilter';\n  actions.setGlobalFilter = 'setGlobalFilter';\n  var useGlobalFilter = function useGlobalFilter(hooks) {\n    hooks.stateReducers.push(reducer$3);\n    hooks.useInstance.push(useInstance$3);\n  };\n  useGlobalFilter.pluginName = 'useGlobalFilter';\n  function reducer$3(state, action, previousState, instance) {\n    if (action.type === actions.resetGlobalFilter) {\n      return _extends({}, state, {\n        globalFilter: instance.initialState.globalFilter || undefined\n      });\n    }\n    if (action.type === actions.setGlobalFilter) {\n      var filterValue = action.filterValue;\n      var userFilterTypes = instance.userFilterTypes;\n      var filterMethod = getFilterMethod(instance.globalFilter, userFilterTypes || {}, filterTypes);\n      var newFilter = functionalUpdate(filterValue, state.globalFilter); //\n\n      if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n        var globalFilter = state.globalFilter,\n          stateWithoutGlobalFilter = _objectWithoutPropertiesLoose(state, [\"globalFilter\"]);\n        return stateWithoutGlobalFilter;\n      }\n      return _extends({}, state, {\n        globalFilter: newFilter\n      });\n    }\n  }\n  function useInstance$3(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      userFilterTypes = instance.filterTypes,\n      globalFilter = instance.globalFilter,\n      manualGlobalFilter = instance.manualGlobalFilter,\n      globalFilterValue = instance.state.globalFilter,\n      dispatch = instance.dispatch,\n      _instance$autoResetGl = instance.autoResetGlobalFilter,\n      autoResetGlobalFilter = _instance$autoResetGl === void 0 ? true : _instance$autoResetGl,\n      disableGlobalFilter = instance.disableGlobalFilter;\n    var setGlobalFilter = React.useCallback(function (filterValue) {\n      dispatch({\n        type: actions.setGlobalFilter,\n        filterValue: filterValue\n      });\n    }, [dispatch]); // TODO: Create a filter cache for incremental high speed multi-filtering\n    // This gets pretty complicated pretty fast, since you have to maintain a\n    // cache for each row group (top-level rows, and each row's recursive subrows)\n    // This would make multi-filtering a lot faster though. Too far?\n\n    var _React$useMemo = React.useMemo(function () {\n        if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n          return [rows, flatRows, rowsById];\n        }\n        var filteredFlatRows = [];\n        var filteredRowsById = {};\n        var filterMethod = getFilterMethod(globalFilter, userFilterTypes || {}, filterTypes);\n        if (!filterMethod) {\n          console.warn(\"Could not find a valid 'globalFilter' option.\");\n          return rows;\n        }\n        allColumns.forEach(function (column) {\n          var columnDisableGlobalFilter = column.disableGlobalFilter;\n          column.canFilter = getFirstDefined(columnDisableGlobalFilter === true ? false : undefined, disableGlobalFilter === true ? false : undefined, true);\n        });\n        var filterableColumns = allColumns.filter(function (c) {\n          return c.canFilter === true;\n        }); // Filters top level and nested rows\n\n        var filterRows = function filterRows(filteredRows) {\n          filteredRows = filterMethod(filteredRows, filterableColumns.map(function (d) {\n            return d.id;\n          }), globalFilterValue);\n          filteredRows.forEach(function (row) {\n            filteredFlatRows.push(row);\n            filteredRowsById[row.id] = row;\n            row.subRows = row.subRows && row.subRows.length ? filterRows(row.subRows) : row.subRows;\n          });\n          return filteredRows;\n        };\n        return [filterRows(rows), filteredFlatRows, filteredRowsById];\n      }, [manualGlobalFilter, globalFilterValue, globalFilter, userFilterTypes, allColumns, rows, flatRows, rowsById, disableGlobalFilter]),\n      globalFilteredRows = _React$useMemo[0],\n      globalFilteredFlatRows = _React$useMemo[1],\n      globalFilteredRowsById = _React$useMemo[2];\n    var getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGlobalFilter()) {\n        dispatch({\n          type: actions.resetGlobalFilter\n        });\n      }\n    }, [dispatch, manualGlobalFilter ? null : data]);\n    Object.assign(instance, {\n      preGlobalFilteredRows: rows,\n      preGlobalFilteredFlatRows: flatRows,\n      preGlobalFilteredRowsById: rowsById,\n      globalFilteredRows: globalFilteredRows,\n      globalFilteredFlatRows: globalFilteredFlatRows,\n      globalFilteredRowsById: globalFilteredRowsById,\n      rows: globalFilteredRows,\n      flatRows: globalFilteredFlatRows,\n      rowsById: globalFilteredRowsById,\n      setGlobalFilter: setGlobalFilter,\n      disableGlobalFilter: disableGlobalFilter\n    });\n  }\n  function sum(values, aggregatedValues) {\n    // It's faster to just add the aggregations together instead of\n    // process leaf nodes individually\n    return aggregatedValues.reduce(function (sum, next) {\n      return sum + (typeof next === 'number' ? next : 0);\n    }, 0);\n  }\n  function min(values) {\n    var min = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n      }\n    });\n    return min;\n  }\n  function max(values) {\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        max = Math.max(max, value);\n      }\n    });\n    return max;\n  }\n  function minMax(values) {\n    var min = values[0] || 0;\n    var max = values[0] || 0;\n    values.forEach(function (value) {\n      if (typeof value === 'number') {\n        min = Math.min(min, value);\n        max = Math.max(max, value);\n      }\n    });\n    return min + \"..\" + max;\n  }\n  function average(values) {\n    return sum(null, values) / values.length;\n  }\n  function median(values) {\n    if (!values.length) {\n      return null;\n    }\n    var mid = Math.floor(values.length / 2);\n    var nums = [].concat(values).sort(function (a, b) {\n      return a - b;\n    });\n    return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2;\n  }\n  function unique(values) {\n    return Array.from(new Set(values).values());\n  }\n  function uniqueCount(values) {\n    return new Set(values).size;\n  }\n  function count(values) {\n    return values.length;\n  }\n  var aggregations = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    sum: sum,\n    min: min,\n    max: max,\n    minMax: minMax,\n    average: average,\n    median: median,\n    unique: unique,\n    uniqueCount: uniqueCount,\n    count: count\n  });\n  var emptyArray = [];\n  var emptyObject = {}; // Actions\n\n  actions.resetGroupBy = 'resetGroupBy';\n  actions.setGroupBy = 'setGroupBy';\n  actions.toggleGroupBy = 'toggleGroupBy';\n  var useGroupBy = function useGroupBy(hooks) {\n    hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps];\n    hooks.stateReducers.push(reducer$4);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.groupBy]);\n    });\n    hooks.visibleColumns.push(visibleColumns);\n    hooks.useInstance.push(useInstance$4);\n    hooks.prepareRow.push(prepareRow$1);\n  };\n  useGroupBy.pluginName = 'useGroupBy';\n  var defaultGetGroupByToggleProps = function defaultGetGroupByToggleProps(props, _ref2) {\n    var header = _ref2.header;\n    return [props, {\n      onClick: header.canGroupBy ? function (e) {\n        e.persist();\n        header.toggleGroupBy();\n      } : undefined,\n      style: {\n        cursor: header.canGroupBy ? 'pointer' : undefined\n      },\n      title: 'Toggle GroupBy'\n    }];\n  }; // Reducer\n\n  function reducer$4(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        groupBy: []\n      }, state);\n    }\n    if (action.type === actions.resetGroupBy) {\n      return _extends({}, state, {\n        groupBy: instance.initialState.groupBy || []\n      });\n    }\n    if (action.type === actions.setGroupBy) {\n      var value = action.value;\n      return _extends({}, state, {\n        groupBy: value\n      });\n    }\n    if (action.type === actions.toggleGroupBy) {\n      var columnId = action.columnId,\n        setGroupBy = action.value;\n      var resolvedGroupBy = typeof setGroupBy !== 'undefined' ? setGroupBy : !state.groupBy.includes(columnId);\n      if (resolvedGroupBy) {\n        return _extends({}, state, {\n          groupBy: [].concat(state.groupBy, [columnId])\n        });\n      }\n      return _extends({}, state, {\n        groupBy: state.groupBy.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n  function visibleColumns(columns, _ref3) {\n    var groupBy = _ref3.instance.state.groupBy;\n    // Sort grouped columns to the start of the column list\n    // before the headers are built\n    var groupByColumns = groupBy.map(function (g) {\n      return columns.find(function (col) {\n        return col.id === g;\n      });\n    }).filter(Boolean);\n    var nonGroupByColumns = columns.filter(function (col) {\n      return !groupBy.includes(col.id);\n    });\n    columns = [].concat(groupByColumns, nonGroupByColumns);\n    columns.forEach(function (column) {\n      column.isGrouped = groupBy.includes(column.id);\n      column.groupedIndex = groupBy.indexOf(column.id);\n    });\n    return columns;\n  }\n  var defaultUserAggregations = {};\n  function useInstance$4(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      rowsById = instance.rowsById,\n      allColumns = instance.allColumns,\n      flatHeaders = instance.flatHeaders,\n      _instance$groupByFn = instance.groupByFn,\n      groupByFn = _instance$groupByFn === void 0 ? defaultGroupByFn : _instance$groupByFn,\n      manualGroupBy = instance.manualGroupBy,\n      _instance$aggregation = instance.aggregations,\n      userAggregations = _instance$aggregation === void 0 ? defaultUserAggregations : _instance$aggregation,\n      plugins = instance.plugins,\n      groupBy = instance.state.groupBy,\n      dispatch = instance.dispatch,\n      _instance$autoResetGr = instance.autoResetGroupBy,\n      autoResetGroupBy = _instance$autoResetGr === void 0 ? true : _instance$autoResetGr,\n      disableGroupBy = instance.disableGroupBy,\n      defaultCanGroupBy = instance.defaultCanGroupBy,\n      getHooks = instance.getHooks;\n    ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnGroupBy = column.defaultGroupBy,\n        columnDisableGroupBy = column.disableGroupBy;\n      column.canGroupBy = accessor ? getFirstDefined(column.canGroupBy, columnDisableGroupBy === true ? false : undefined, disableGroupBy === true ? false : undefined, true) : getFirstDefined(column.canGroupBy, defaultColumnGroupBy, defaultCanGroupBy, false);\n      if (column.canGroupBy) {\n        column.toggleGroupBy = function () {\n          return instance.toggleGroupBy(column.id);\n        };\n      }\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n    var toggleGroupBy = React.useCallback(function (columnId, value) {\n      dispatch({\n        type: actions.toggleGroupBy,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var setGroupBy = React.useCallback(function (value) {\n      dispatch({\n        type: actions.setGroupBy,\n        value: value\n      });\n    }, [dispatch]);\n    flatHeaders.forEach(function (header) {\n      header.getGroupByToggleProps = makePropGetter(getHooks().getGroupByToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualGroupBy || !groupBy.length) {\n          return [rows, flatRows, rowsById, emptyArray, emptyObject, flatRows, rowsById];\n        } // Ensure that the list of filtered columns exist\n\n        var existingGroupBy = groupBy.filter(function (g) {\n          return allColumns.find(function (col) {\n            return col.id === g;\n          });\n        }); // Find the columns that can or are aggregating\n        // Uses each column to aggregate rows into a single value\n\n        var aggregateRowsToValues = function aggregateRowsToValues(leafRows, groupedRows, depth) {\n          var values = {};\n          allColumns.forEach(function (column) {\n            // Don't aggregate columns that are in the groupBy\n            if (existingGroupBy.includes(column.id)) {\n              values[column.id] = groupedRows[0] ? groupedRows[0].values[column.id] : null;\n              return;\n            } // Aggregate the values\n\n            var aggregateFn = typeof column.aggregate === 'function' ? column.aggregate : userAggregations[column.aggregate] || aggregations[column.aggregate];\n            if (aggregateFn) {\n              // Get the columnValues to aggregate\n              var groupedValues = groupedRows.map(function (row) {\n                return row.values[column.id];\n              }); // Get the columnValues to aggregate\n\n              var leafValues = leafRows.map(function (row) {\n                var columnValue = row.values[column.id];\n                if (!depth && column.aggregateValue) {\n                  var aggregateValueFn = typeof column.aggregateValue === 'function' ? column.aggregateValue : userAggregations[column.aggregateValue] || aggregations[column.aggregateValue];\n                  if (!aggregateValueFn) {\n                    console.info({\n                      column: column\n                    });\n                    throw new Error(\"React Table: Invalid column.aggregateValue option for column listed above\");\n                  }\n                  columnValue = aggregateValueFn(columnValue, row, column);\n                }\n                return columnValue;\n              });\n              values[column.id] = aggregateFn(leafValues, groupedValues);\n            } else if (column.aggregate) {\n              console.info({\n                column: column\n              });\n              throw new Error(\"React Table: Invalid column.aggregate option for column listed above\");\n            } else {\n              values[column.id] = null;\n            }\n          });\n          return values;\n        };\n        var groupedFlatRows = [];\n        var groupedRowsById = {};\n        var onlyGroupedFlatRows = [];\n        var onlyGroupedRowsById = {};\n        var nonGroupedFlatRows = [];\n        var nonGroupedRowsById = {}; // Recursively group the data\n\n        var groupUpRecursively = function groupUpRecursively(rows, depth, parentId) {\n          if (depth === void 0) {\n            depth = 0;\n          }\n\n          // This is the last level, just return the rows\n          if (depth === existingGroupBy.length) {\n            return rows;\n          }\n          var columnId = existingGroupBy[depth]; // Group the rows together for this level\n\n          var rowGroupsMap = groupByFn(rows, columnId); // Peform aggregations for each group\n\n          var aggregatedGroupedRows = Object.entries(rowGroupsMap).map(function (_ref4, index) {\n            var groupByVal = _ref4[0],\n              groupedRows = _ref4[1];\n            var id = columnId + \":\" + groupByVal;\n            id = parentId ? parentId + \">\" + id : id; // First, Recurse to group sub rows before aggregation\n\n            var subRows = groupUpRecursively(groupedRows, depth + 1, id); // Flatten the leaf rows of the rows in this group\n\n            var leafRows = depth ? flattenBy(groupedRows, 'leafRows') : groupedRows;\n            var values = aggregateRowsToValues(leafRows, groupedRows, depth);\n            var row = {\n              id: id,\n              isGrouped: true,\n              groupByID: columnId,\n              groupByVal: groupByVal,\n              values: values,\n              subRows: subRows,\n              leafRows: leafRows,\n              depth: depth,\n              index: index\n            };\n            subRows.forEach(function (subRow) {\n              groupedFlatRows.push(subRow);\n              groupedRowsById[subRow.id] = subRow;\n              if (subRow.isGrouped) {\n                onlyGroupedFlatRows.push(subRow);\n                onlyGroupedRowsById[subRow.id] = subRow;\n              } else {\n                nonGroupedFlatRows.push(subRow);\n                nonGroupedRowsById[subRow.id] = subRow;\n              }\n            });\n            return row;\n          });\n          return aggregatedGroupedRows;\n        };\n        var groupedRows = groupUpRecursively(rows);\n        groupedRows.forEach(function (subRow) {\n          groupedFlatRows.push(subRow);\n          groupedRowsById[subRow.id] = subRow;\n          if (subRow.isGrouped) {\n            onlyGroupedFlatRows.push(subRow);\n            onlyGroupedRowsById[subRow.id] = subRow;\n          } else {\n            nonGroupedFlatRows.push(subRow);\n            nonGroupedRowsById[subRow.id] = subRow;\n          }\n        }); // Assign the new data\n\n        return [groupedRows, groupedFlatRows, groupedRowsById, onlyGroupedFlatRows, onlyGroupedRowsById, nonGroupedFlatRows, nonGroupedRowsById];\n      }, [manualGroupBy, groupBy, rows, flatRows, rowsById, allColumns, userAggregations, groupByFn]),\n      groupedRows = _React$useMemo[0],\n      groupedFlatRows = _React$useMemo[1],\n      groupedRowsById = _React$useMemo[2],\n      onlyGroupedFlatRows = _React$useMemo[3],\n      onlyGroupedRowsById = _React$useMemo[4],\n      nonGroupedFlatRows = _React$useMemo[5],\n      nonGroupedRowsById = _React$useMemo[6];\n    var getAutoResetGroupBy = useGetLatest(autoResetGroupBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetGroupBy()) {\n        dispatch({\n          type: actions.resetGroupBy\n        });\n      }\n    }, [dispatch, manualGroupBy ? null : data]);\n    Object.assign(instance, {\n      preGroupedRows: rows,\n      preGroupedFlatRow: flatRows,\n      preGroupedRowsById: rowsById,\n      groupedRows: groupedRows,\n      groupedFlatRows: groupedFlatRows,\n      groupedRowsById: groupedRowsById,\n      onlyGroupedFlatRows: onlyGroupedFlatRows,\n      onlyGroupedRowsById: onlyGroupedRowsById,\n      nonGroupedFlatRows: nonGroupedFlatRows,\n      nonGroupedRowsById: nonGroupedRowsById,\n      rows: groupedRows,\n      flatRows: groupedFlatRows,\n      rowsById: groupedRowsById,\n      toggleGroupBy: toggleGroupBy,\n      setGroupBy: setGroupBy\n    });\n  }\n  function prepareRow$1(row) {\n    row.allCells.forEach(function (cell) {\n      var _row$subRows;\n\n      // Grouped cells are in the groupBy and the pivot cell for the row\n      cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID; // Placeholder cells are any columns in the groupBy that are not grouped\n\n      cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped; // Aggregated cells are not grouped, not repeated, but still have subRows\n\n      cell.isAggregated = !cell.isGrouped && !cell.isPlaceholder && ((_row$subRows = row.subRows) == null ? void 0 : _row$subRows.length);\n    });\n  }\n  function defaultGroupByFn(rows, columnId) {\n    return rows.reduce(function (prev, row, i) {\n      // TODO: Might want to implement a key serializer here so\n      // irregular column values can still be grouped if needed?\n      var resKey = \"\" + row.values[columnId];\n      prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : [];\n      prev[resKey].push(row);\n      return prev;\n    }, {});\n  }\n  var reSplitAlphaNumeric = /([0-9]+)/gm; // Mixed sorting is slow, but very inclusive of many edge cases.\n  // It handles numbers, mixed alphanumeric combinations, and even\n  // null, undefined, and Infinity\n\n  var alphanumeric = function alphanumeric(rowA, rowB, columnId) {\n    var _getRowValuesByColumn = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn[0],\n      b = _getRowValuesByColumn[1]; // Force to strings (or \"\" for unsupported types)\n\n    a = toString(a);\n    b = toString(b); // Split on number groups, but keep the delimiter\n    // Then remove falsey split values\n\n    a = a.split(reSplitAlphaNumeric).filter(Boolean);\n    b = b.split(reSplitAlphaNumeric).filter(Boolean); // While\n\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var an = parseInt(aa, 10);\n      var bn = parseInt(bb, 10);\n      var combo = [an, bn].sort(); // Both are string\n\n      if (isNaN(combo[0])) {\n        if (aa > bb) {\n          return 1;\n        }\n        if (bb > aa) {\n          return -1;\n        }\n        continue;\n      } // One is a string, one is a number\n\n      if (isNaN(combo[1])) {\n        return isNaN(an) ? -1 : 1;\n      } // Both are numbers\n\n      if (an > bn) {\n        return 1;\n      }\n      if (bn > an) {\n        return -1;\n      }\n    }\n    return a.length - b.length;\n  };\n  function datetime(rowA, rowB, columnId) {\n    var _getRowValuesByColumn2 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn2[0],\n      b = _getRowValuesByColumn2[1];\n    a = a.getTime();\n    b = b.getTime();\n    return compareBasic(a, b);\n  }\n  function basic(rowA, rowB, columnId) {\n    var _getRowValuesByColumn3 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn3[0],\n      b = _getRowValuesByColumn3[1];\n    return compareBasic(a, b);\n  }\n  function string(rowA, rowB, columnId) {\n    var _getRowValuesByColumn4 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn4[0],\n      b = _getRowValuesByColumn4[1];\n    a = a.split('').filter(Boolean);\n    b = b.split('').filter(Boolean);\n    while (a.length && b.length) {\n      var aa = a.shift();\n      var bb = b.shift();\n      var alower = aa.toLowerCase();\n      var blower = bb.toLowerCase(); // Case insensitive comparison until characters match\n\n      if (alower > blower) {\n        return 1;\n      }\n      if (blower > alower) {\n        return -1;\n      } // If lowercase characters are identical\n\n      if (aa > bb) {\n        return 1;\n      }\n      if (bb > aa) {\n        return -1;\n      }\n      continue;\n    }\n    return a.length - b.length;\n  }\n  function number(rowA, rowB, columnId) {\n    var _getRowValuesByColumn5 = getRowValuesByColumnID(rowA, rowB, columnId),\n      a = _getRowValuesByColumn5[0],\n      b = _getRowValuesByColumn5[1];\n    var replaceNonNumeric = /[^0-9.]/gi;\n    a = Number(String(a).replace(replaceNonNumeric, ''));\n    b = Number(String(b).replace(replaceNonNumeric, ''));\n    return compareBasic(a, b);\n  } // Utils\n\n  function compareBasic(a, b) {\n    return a === b ? 0 : a > b ? 1 : -1;\n  }\n  function getRowValuesByColumnID(row1, row2, columnId) {\n    return [row1.values[columnId], row2.values[columnId]];\n  }\n  function toString(a) {\n    if (typeof a === 'number') {\n      if (isNaN(a) || a === Infinity || a === -Infinity) {\n        return '';\n      }\n      return String(a);\n    }\n    if (typeof a === 'string') {\n      return a;\n    }\n    return '';\n  }\n  var sortTypes = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    alphanumeric: alphanumeric,\n    datetime: datetime,\n    basic: basic,\n    string: string,\n    number: number\n  });\n  actions.resetSortBy = 'resetSortBy';\n  actions.setSortBy = 'setSortBy';\n  actions.toggleSortBy = 'toggleSortBy';\n  actions.clearSortBy = 'clearSortBy';\n  defaultColumn.sortType = 'alphanumeric';\n  defaultColumn.sortDescFirst = false;\n  var useSortBy = function useSortBy(hooks) {\n    hooks.getSortByToggleProps = [defaultGetSortByToggleProps];\n    hooks.stateReducers.push(reducer$5);\n    hooks.useInstance.push(useInstance$5);\n  };\n  useSortBy.pluginName = 'useSortBy';\n  var defaultGetSortByToggleProps = function defaultGetSortByToggleProps(props, _ref) {\n    var instance = _ref.instance,\n      column = _ref.column;\n    var _instance$isMultiSort = instance.isMultiSortEvent,\n      isMultiSortEvent = _instance$isMultiSort === void 0 ? function (e) {\n        return e.shiftKey;\n      } : _instance$isMultiSort;\n    return [props, {\n      onClick: column.canSort ? function (e) {\n        e.persist();\n        column.toggleSortBy(undefined, !instance.disableMultiSort && isMultiSortEvent(e));\n      } : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined\n    }];\n  }; // Reducer\n\n  function reducer$5(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        sortBy: []\n      }, state);\n    }\n    if (action.type === actions.resetSortBy) {\n      return _extends({}, state, {\n        sortBy: instance.initialState.sortBy || []\n      });\n    }\n    if (action.type === actions.clearSortBy) {\n      var sortBy = state.sortBy;\n      var newSortBy = sortBy.filter(function (d) {\n        return d.id !== action.columnId;\n      });\n      return _extends({}, state, {\n        sortBy: newSortBy\n      });\n    }\n    if (action.type === actions.setSortBy) {\n      var _sortBy = action.sortBy;\n      return _extends({}, state, {\n        sortBy: _sortBy\n      });\n    }\n    if (action.type === actions.toggleSortBy) {\n      var columnId = action.columnId,\n        desc = action.desc,\n        multi = action.multi;\n      var allColumns = instance.allColumns,\n        disableMultiSort = instance.disableMultiSort,\n        disableSortRemove = instance.disableSortRemove,\n        disableMultiRemove = instance.disableMultiRemove,\n        _instance$maxMultiSor = instance.maxMultiSortColCount,\n        maxMultiSortColCount = _instance$maxMultiSor === void 0 ? Number.MAX_SAFE_INTEGER : _instance$maxMultiSor;\n      var _sortBy2 = state.sortBy; // Find the column for this columnId\n\n      var column = allColumns.find(function (d) {\n        return d.id === columnId;\n      });\n      var sortDescFirst = column.sortDescFirst; // Find any existing sortBy for this column\n\n      var existingSortBy = _sortBy2.find(function (d) {\n        return d.id === columnId;\n      });\n      var existingIndex = _sortBy2.findIndex(function (d) {\n        return d.id === columnId;\n      });\n      var hasDescDefined = typeof desc !== 'undefined' && desc !== null;\n      var _newSortBy = []; // What should we do with this sort action?\n\n      var sortAction;\n      if (!disableMultiSort && multi) {\n        if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'add';\n        }\n      } else {\n        // Normal mode\n        if (existingIndex !== _sortBy2.length - 1 || _sortBy2.length !== 1) {\n          sortAction = 'replace';\n        } else if (existingSortBy) {\n          sortAction = 'toggle';\n        } else {\n          sortAction = 'replace';\n        }\n      } // Handle toggle states that will remove the sortBy\n\n      if (sortAction === 'toggle' &&\n      // Must be toggling\n      !disableSortRemove &&\n      // If disableSortRemove, disable in general\n      !hasDescDefined && (\n      // Must not be setting desc\n      multi ? !disableMultiRemove : true) && (\n      // If multi, don't allow if disableMultiRemove\n      existingSortBy &&\n      // Finally, detect if it should indeed be removed\n      existingSortBy.desc && !sortDescFirst || !existingSortBy.desc && sortDescFirst)) {\n        sortAction = 'remove';\n      }\n      if (sortAction === 'replace') {\n        _newSortBy = [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }];\n      } else if (sortAction === 'add') {\n        _newSortBy = [].concat(_sortBy2, [{\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst\n        }]); // Take latest n columns\n\n        _newSortBy.splice(0, _newSortBy.length - maxMultiSortColCount);\n      } else if (sortAction === 'toggle') {\n        // This flips (or sets) the\n        _newSortBy = _sortBy2.map(function (d) {\n          if (d.id === columnId) {\n            return _extends({}, d, {\n              desc: hasDescDefined ? desc : !existingSortBy.desc\n            });\n          }\n          return d;\n        });\n      } else if (sortAction === 'remove') {\n        _newSortBy = _sortBy2.filter(function (d) {\n          return d.id !== columnId;\n        });\n      }\n      return _extends({}, state, {\n        sortBy: _newSortBy\n      });\n    }\n  }\n  function useInstance$5(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      flatRows = instance.flatRows,\n      allColumns = instance.allColumns,\n      _instance$orderByFn = instance.orderByFn,\n      orderByFn = _instance$orderByFn === void 0 ? defaultOrderByFn : _instance$orderByFn,\n      userSortTypes = instance.sortTypes,\n      manualSortBy = instance.manualSortBy,\n      defaultCanSort = instance.defaultCanSort,\n      disableSortBy = instance.disableSortBy,\n      flatHeaders = instance.flatHeaders,\n      sortBy = instance.state.sortBy,\n      dispatch = instance.dispatch,\n      plugins = instance.plugins,\n      getHooks = instance.getHooks,\n      _instance$autoResetSo = instance.autoResetSortBy,\n      autoResetSortBy = _instance$autoResetSo === void 0 ? true : _instance$autoResetSo;\n    ensurePluginOrder(plugins, ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'], 'useSortBy');\n    var setSortBy = React.useCallback(function (sortBy) {\n      dispatch({\n        type: actions.setSortBy,\n        sortBy: sortBy\n      });\n    }, [dispatch]); // Updates sorting based on a columnId, desc flag and multi flag\n\n    var toggleSortBy = React.useCallback(function (columnId, desc, multi) {\n      dispatch({\n        type: actions.toggleSortBy,\n        columnId: columnId,\n        desc: desc,\n        multi: multi\n      });\n    }, [dispatch]); // use reference to avoid memory leak in #1608\n\n    var getInstance = useGetLatest(instance); // Add the getSortByToggleProps method to columns and headers\n\n    flatHeaders.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnCanSort = column.canSort,\n        columnDisableSortBy = column.disableSortBy,\n        id = column.id;\n      var canSort = accessor ? getFirstDefined(columnDisableSortBy === true ? false : undefined, disableSortBy === true ? false : undefined, true) : getFirstDefined(defaultCanSort, defaultColumnCanSort, false);\n      column.canSort = canSort;\n      if (column.canSort) {\n        column.toggleSortBy = function (desc, multi) {\n          return toggleSortBy(column.id, desc, multi);\n        };\n        column.clearSortBy = function () {\n          dispatch({\n            type: actions.clearSortBy,\n            columnId: column.id\n          });\n        };\n      }\n      column.getSortByToggleProps = makePropGetter(getHooks().getSortByToggleProps, {\n        instance: getInstance(),\n        column: column\n      });\n      var columnSort = sortBy.find(function (d) {\n        return d.id === id;\n      });\n      column.isSorted = !!columnSort;\n      column.sortedIndex = sortBy.findIndex(function (d) {\n        return d.id === id;\n      });\n      column.isSortedDesc = column.isSorted ? columnSort.desc : undefined;\n    });\n    var _React$useMemo = React.useMemo(function () {\n        if (manualSortBy || !sortBy.length) {\n          return [rows, flatRows];\n        }\n        var sortedFlatRows = []; // Filter out sortBys that correspond to non existing columns\n\n        var availableSortBy = sortBy.filter(function (sort) {\n          return allColumns.find(function (col) {\n            return col.id === sort.id;\n          });\n        });\n        var sortData = function sortData(rows) {\n          // Use the orderByFn to compose multiple sortBy's together.\n          // This will also perform a stable sorting using the row index\n          // if needed.\n          var sortedData = orderByFn(rows, availableSortBy.map(function (sort) {\n            // Support custom sorting methods for each column\n            var column = allColumns.find(function (d) {\n              return d.id === sort.id;\n            });\n            if (!column) {\n              throw new Error(\"React-Table: Could not find a column with id: \" + sort.id + \" while sorting\");\n            }\n            var sortType = column.sortType; // Look up sortBy functions in this order:\n            // column function\n            // column string lookup on user sortType\n            // column string lookup on built-in sortType\n            // default function\n            // default string lookup on user sortType\n            // default string lookup on built-in sortType\n\n            var sortMethod = isFunction(sortType) || (userSortTypes || {})[sortType] || sortTypes[sortType];\n            if (!sortMethod) {\n              throw new Error(\"React-Table: Could not find a valid sortType of '\" + sortType + \"' for column '\" + sort.id + \"'.\");\n            } // Return the correct sortFn.\n            // This function should always return in ascending order\n\n            return function (a, b) {\n              return sortMethod(a, b, sort.id, sort.desc);\n            };\n          }),\n          // Map the directions\n          availableSortBy.map(function (sort) {\n            // Detect and use the sortInverted option\n            var column = allColumns.find(function (d) {\n              return d.id === sort.id;\n            });\n            if (column && column.sortInverted) {\n              return sort.desc;\n            }\n            return !sort.desc;\n          })); // If there are sub-rows, sort them\n\n          sortedData.forEach(function (row) {\n            sortedFlatRows.push(row);\n            if (!row.subRows || row.subRows.length === 0) {\n              return;\n            }\n            row.subRows = sortData(row.subRows);\n          });\n          return sortedData;\n        };\n        return [sortData(rows), sortedFlatRows];\n      }, [manualSortBy, sortBy, rows, flatRows, allColumns, orderByFn, userSortTypes]),\n      sortedRows = _React$useMemo[0],\n      sortedFlatRows = _React$useMemo[1];\n    var getAutoResetSortBy = useGetLatest(autoResetSortBy);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSortBy()) {\n        dispatch({\n          type: actions.resetSortBy\n        });\n      }\n    }, [manualSortBy ? null : data]);\n    Object.assign(instance, {\n      preSortedRows: rows,\n      preSortedFlatRows: flatRows,\n      sortedRows: sortedRows,\n      sortedFlatRows: sortedFlatRows,\n      rows: sortedRows,\n      flatRows: sortedFlatRows,\n      setSortBy: setSortBy,\n      toggleSortBy: toggleSortBy\n    });\n  }\n  function defaultOrderByFn(arr, funcs, dirs) {\n    return [].concat(arr).sort(function (rowA, rowB) {\n      for (var i = 0; i < funcs.length; i += 1) {\n        var sortFn = funcs[i];\n        var desc = dirs[i] === false || dirs[i] === 'desc';\n        var sortInt = sortFn(rowA, rowB);\n        if (sortInt !== 0) {\n          return desc ? -sortInt : sortInt;\n        }\n      }\n      return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index;\n    });\n  }\n  var pluginName = 'usePagination'; // Actions\n\n  actions.resetPage = 'resetPage';\n  actions.gotoPage = 'gotoPage';\n  actions.setPageSize = 'setPageSize';\n  var usePagination = function usePagination(hooks) {\n    hooks.stateReducers.push(reducer$6);\n    hooks.useInstance.push(useInstance$6);\n  };\n  usePagination.pluginName = pluginName;\n  function reducer$6(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pageSize: 10,\n        pageIndex: 0\n      }, state);\n    }\n    if (action.type === actions.resetPage) {\n      return _extends({}, state, {\n        pageIndex: instance.initialState.pageIndex || 0\n      });\n    }\n    if (action.type === actions.gotoPage) {\n      var pageCount = instance.pageCount,\n        page = instance.page;\n      var newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex);\n      var canNavigate = false;\n      if (newPageIndex > state.pageIndex) {\n        // next page\n        canNavigate = pageCount === -1 ? page.length >= state.pageSize : newPageIndex < pageCount;\n      } else if (newPageIndex < state.pageIndex) {\n        // prev page\n        canNavigate = newPageIndex > -1;\n      }\n      if (!canNavigate) {\n        return state;\n      }\n      return _extends({}, state, {\n        pageIndex: newPageIndex\n      });\n    }\n    if (action.type === actions.setPageSize) {\n      var pageSize = action.pageSize;\n      var topRowIndex = state.pageSize * state.pageIndex;\n      var pageIndex = Math.floor(topRowIndex / pageSize);\n      return _extends({}, state, {\n        pageIndex: pageIndex,\n        pageSize: pageSize\n      });\n    }\n  }\n  function useInstance$6(instance) {\n    var rows = instance.rows,\n      _instance$autoResetPa = instance.autoResetPage,\n      autoResetPage = _instance$autoResetPa === void 0 ? true : _instance$autoResetPa,\n      _instance$manualExpan = instance.manualExpandedKey,\n      manualExpandedKey = _instance$manualExpan === void 0 ? 'expanded' : _instance$manualExpan,\n      plugins = instance.plugins,\n      userPageCount = instance.pageCount,\n      _instance$paginateExp = instance.paginateExpandedRows,\n      paginateExpandedRows = _instance$paginateExp === void 0 ? true : _instance$paginateExp,\n      _instance$expandSubRo = instance.expandSubRows,\n      expandSubRows = _instance$expandSubRo === void 0 ? true : _instance$expandSubRo,\n      _instance$state = instance.state,\n      pageSize = _instance$state.pageSize,\n      pageIndex = _instance$state.pageIndex,\n      expanded = _instance$state.expanded,\n      globalFilter = _instance$state.globalFilter,\n      filters = _instance$state.filters,\n      groupBy = _instance$state.groupBy,\n      sortBy = _instance$state.sortBy,\n      dispatch = instance.dispatch,\n      data = instance.data,\n      manualPagination = instance.manualPagination;\n    ensurePluginOrder(plugins, ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'], 'usePagination');\n    var getAutoResetPage = useGetLatest(autoResetPage);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPage()) {\n        dispatch({\n          type: actions.resetPage\n        });\n      }\n    }, [dispatch, manualPagination ? null : data, globalFilter, filters, groupBy, sortBy]);\n    var pageCount = manualPagination ? userPageCount : Math.ceil(rows.length / pageSize);\n    var pageOptions = React.useMemo(function () {\n      return pageCount > 0 ? [].concat(new Array(pageCount)).fill(null).map(function (d, i) {\n        return i;\n      }) : [];\n    }, [pageCount]);\n    var page = React.useMemo(function () {\n      var page;\n      if (manualPagination) {\n        page = rows;\n      } else {\n        var pageStart = pageSize * pageIndex;\n        var pageEnd = pageStart + pageSize;\n        page = rows.slice(pageStart, pageEnd);\n      }\n      if (paginateExpandedRows) {\n        return page;\n      }\n      return expandRows(page, {\n        manualExpandedKey: manualExpandedKey,\n        expanded: expanded,\n        expandSubRows: expandSubRows\n      });\n    }, [expandSubRows, expanded, manualExpandedKey, manualPagination, pageIndex, pageSize, paginateExpandedRows, rows]);\n    var canPreviousPage = pageIndex > 0;\n    var canNextPage = pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1;\n    var gotoPage = React.useCallback(function (pageIndex) {\n      dispatch({\n        type: actions.gotoPage,\n        pageIndex: pageIndex\n      });\n    }, [dispatch]);\n    var previousPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old - 1;\n      });\n    }, [gotoPage]);\n    var nextPage = React.useCallback(function () {\n      return gotoPage(function (old) {\n        return old + 1;\n      });\n    }, [gotoPage]);\n    var setPageSize = React.useCallback(function (pageSize) {\n      dispatch({\n        type: actions.setPageSize,\n        pageSize: pageSize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      pageOptions: pageOptions,\n      pageCount: pageCount,\n      page: page,\n      canPreviousPage: canPreviousPage,\n      canNextPage: canNextPage,\n      gotoPage: gotoPage,\n      previousPage: previousPage,\n      nextPage: nextPage,\n      setPageSize: setPageSize\n    });\n  }\n  actions.resetPivot = 'resetPivot';\n  actions.togglePivot = 'togglePivot';\n  var _UNSTABLE_usePivotColumns = function _UNSTABLE_usePivotColumns(hooks) {\n    hooks.getPivotToggleProps = [defaultGetPivotToggleProps];\n    hooks.stateReducers.push(reducer$7);\n    hooks.useInstanceAfterData.push(useInstanceAfterData);\n    hooks.allColumns.push(allColumns);\n    hooks.accessValue.push(accessValue);\n    hooks.materializedColumns.push(materializedColumns);\n    hooks.materializedColumnsDeps.push(materializedColumnsDeps);\n    hooks.visibleColumns.push(visibleColumns$1);\n    hooks.visibleColumnsDeps.push(visibleColumnsDeps);\n    hooks.useInstance.push(useInstance$7);\n    hooks.prepareRow.push(prepareRow$2);\n  };\n  _UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns';\n  var defaultPivotColumns = [];\n  var defaultGetPivotToggleProps = function defaultGetPivotToggleProps(props, _ref) {\n    var header = _ref.header;\n    return [props, {\n      onClick: header.canPivot ? function (e) {\n        e.persist();\n        header.togglePivot();\n      } : undefined,\n      style: {\n        cursor: header.canPivot ? 'pointer' : undefined\n      },\n      title: 'Toggle Pivot'\n    }];\n  }; // Reducer\n\n  function reducer$7(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        pivotColumns: defaultPivotColumns\n      }, state);\n    }\n    if (action.type === actions.resetPivot) {\n      return _extends({}, state, {\n        pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns\n      });\n    }\n    if (action.type === actions.togglePivot) {\n      var columnId = action.columnId,\n        setPivot = action.value;\n      var resolvedPivot = typeof setPivot !== 'undefined' ? setPivot : !state.pivotColumns.includes(columnId);\n      if (resolvedPivot) {\n        return _extends({}, state, {\n          pivotColumns: [].concat(state.pivotColumns, [columnId])\n        });\n      }\n      return _extends({}, state, {\n        pivotColumns: state.pivotColumns.filter(function (d) {\n          return d !== columnId;\n        })\n      });\n    }\n  }\n  function useInstanceAfterData(instance) {\n    instance.allColumns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n    });\n  }\n  function allColumns(columns, _ref2) {\n    var instance = _ref2.instance;\n    columns.forEach(function (column) {\n      column.isPivotSource = instance.state.pivotColumns.includes(column.id);\n      column.uniqueValues = new Set();\n    });\n    return columns;\n  }\n  function accessValue(value, _ref3) {\n    var column = _ref3.column;\n    if (column.uniqueValues && typeof value !== 'undefined') {\n      column.uniqueValues.add(value);\n    }\n    return value;\n  }\n  function materializedColumns(materialized, _ref4) {\n    var instance = _ref4.instance;\n    var allColumns = instance.allColumns,\n      state = instance.state;\n    if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n      return materialized;\n    }\n    var pivotColumns = state.pivotColumns.map(function (id) {\n      return allColumns.find(function (d) {\n        return d.id === id;\n      });\n    }).filter(Boolean);\n    var sourceColumns = allColumns.filter(function (d) {\n      return !d.isPivotSource && !state.groupBy.includes(d.id) && !state.pivotColumns.includes(d.id);\n    });\n    var buildPivotColumns = function buildPivotColumns(depth, parent, pivotFilters) {\n      if (depth === void 0) {\n        depth = 0;\n      }\n      if (pivotFilters === void 0) {\n        pivotFilters = [];\n      }\n      var pivotColumn = pivotColumns[depth];\n      if (!pivotColumn) {\n        return sourceColumns.map(function (sourceColumn) {\n          // TODO: We could offer support here for renesting pivoted\n          // columns inside copies of their header groups. For now,\n          // that seems like it would be (1) overkill on nesting, considering\n          // you already get nesting for every pivot level and (2)\n          // really hard. :)\n          return _extends({}, sourceColumn, {\n            canPivot: false,\n            isPivoted: true,\n            parent: parent,\n            depth: depth,\n            id: \"\" + (parent ? parent.id + \".\" + sourceColumn.id : sourceColumn.id),\n            accessor: function accessor(originalRow, i, row) {\n              if (pivotFilters.every(function (filter) {\n                return filter(row);\n              })) {\n                return row.values[sourceColumn.id];\n              }\n            }\n          });\n        });\n      }\n      var uniqueValues = Array.from(pivotColumn.uniqueValues).sort();\n      return uniqueValues.map(function (uniqueValue) {\n        var columnGroup = _extends({}, pivotColumn, {\n          Header: pivotColumn.PivotHeader || typeof pivotColumn.header === 'string' ? pivotColumn.Header + \": \" + uniqueValue : uniqueValue,\n          isPivotGroup: true,\n          parent: parent,\n          depth: depth,\n          id: parent ? parent.id + \".\" + pivotColumn.id + \".\" + uniqueValue : pivotColumn.id + \".\" + uniqueValue,\n          pivotValue: uniqueValue\n        });\n        columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [].concat(pivotFilters, [function (row) {\n          return row.values[pivotColumn.id] === uniqueValue;\n        }]));\n        return columnGroup;\n      });\n    };\n    var newMaterialized = flattenColumns(buildPivotColumns());\n    return [].concat(materialized, newMaterialized);\n  }\n  function materializedColumnsDeps(deps, _ref5) {\n    var _ref5$instance$state = _ref5.instance.state,\n      pivotColumns = _ref5$instance$state.pivotColumns,\n      groupBy = _ref5$instance$state.groupBy;\n    return [].concat(deps, [pivotColumns, groupBy]);\n  }\n  function visibleColumns$1(visibleColumns, _ref6) {\n    var state = _ref6.instance.state;\n    visibleColumns = visibleColumns.filter(function (d) {\n      return !d.isPivotSource;\n    });\n    if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n      visibleColumns = visibleColumns.filter(function (column) {\n        return column.isGrouped || column.isPivoted;\n      });\n    }\n    return visibleColumns;\n  }\n  function visibleColumnsDeps(deps, _ref7) {\n    var instance = _ref7.instance;\n    return [].concat(deps, [instance.state.pivotColumns, instance.state.groupBy]);\n  }\n  function useInstance$7(instance) {\n    var columns = instance.columns,\n      allColumns = instance.allColumns,\n      flatHeaders = instance.flatHeaders,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      dispatch = instance.dispatch,\n      _instance$autoResetPi = instance.autoResetPivot,\n      autoResetPivot = _instance$autoResetPi === void 0 ? true : _instance$autoResetPi,\n      manaulPivot = instance.manaulPivot,\n      disablePivot = instance.disablePivot,\n      defaultCanPivot = instance.defaultCanPivot;\n    ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns');\n    var getInstance = useGetLatest(instance);\n    allColumns.forEach(function (column) {\n      var accessor = column.accessor,\n        defaultColumnPivot = column.defaultPivot,\n        columnDisablePivot = column.disablePivot;\n      column.canPivot = accessor ? getFirstDefined(column.canPivot, columnDisablePivot === true ? false : undefined, disablePivot === true ? false : undefined, true) : getFirstDefined(column.canPivot, defaultColumnPivot, defaultCanPivot, false);\n      if (column.canPivot) {\n        column.togglePivot = function () {\n          return instance.togglePivot(column.id);\n        };\n      }\n      column.Aggregated = column.Aggregated || column.Cell;\n    });\n    var togglePivot = function togglePivot(columnId, value) {\n      dispatch({\n        type: actions.togglePivot,\n        columnId: columnId,\n        value: value\n      });\n    };\n    flatHeaders.forEach(function (header) {\n      header.getPivotToggleProps = makePropGetter(getHooks().getPivotToggleProps, {\n        instance: getInstance(),\n        header: header\n      });\n    });\n    var getAutoResetPivot = useGetLatest(autoResetPivot);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetPivot()) {\n        dispatch({\n          type: actions.resetPivot\n        });\n      }\n    }, [dispatch, manaulPivot ? null : columns]);\n    Object.assign(instance, {\n      togglePivot: togglePivot\n    });\n  }\n  function prepareRow$2(row) {\n    row.allCells.forEach(function (cell) {\n      // Grouped cells are in the pivotColumns and the pivot cell for the row\n      cell.isPivoted = cell.column.isPivoted;\n    });\n  }\n  var pluginName$1 = 'useRowSelect'; // Actions\n\n  actions.resetSelectedRows = 'resetSelectedRows';\n  actions.toggleAllRowsSelected = 'toggleAllRowsSelected';\n  actions.toggleRowSelected = 'toggleRowSelected';\n  actions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected';\n  var useRowSelect = function useRowSelect(hooks) {\n    hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps];\n    hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps];\n    hooks.getToggleAllPageRowsSelectedProps = [defaultGetToggleAllPageRowsSelectedProps];\n    hooks.stateReducers.push(reducer$8);\n    hooks.useInstance.push(useInstance$8);\n    hooks.prepareRow.push(prepareRow$3);\n  };\n  useRowSelect.pluginName = pluginName$1;\n  var defaultGetToggleRowSelectedProps = function defaultGetToggleRowSelectedProps(props, _ref) {\n    var instance = _ref.instance,\n      row = _ref.row;\n    var _instance$manualRowSe = instance.manualRowSelectedKey,\n      manualRowSelectedKey = _instance$manualRowSe === void 0 ? 'isSelected' : _instance$manualRowSe;\n    var checked = false;\n    if (row.original && row.original[manualRowSelectedKey]) {\n      checked = true;\n    } else {\n      checked = row.isSelected;\n    }\n    return [props, {\n      onChange: function onChange(e) {\n        row.toggleRowSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected\n    }];\n  };\n  var defaultGetToggleAllRowsSelectedProps = function defaultGetToggleAllRowsSelectedProps(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllRowsSelected,\n      title: 'Toggle All Rows Selected',\n      indeterminate: Boolean(!instance.isAllRowsSelected && Object.keys(instance.state.selectedRowIds).length)\n    }];\n  };\n  var defaultGetToggleAllPageRowsSelectedProps = function defaultGetToggleAllPageRowsSelectedProps(props, _ref3) {\n    var instance = _ref3.instance;\n    return [props, {\n      onChange: function onChange(e) {\n        instance.toggleAllPageRowsSelected(e.target.checked);\n      },\n      style: {\n        cursor: 'pointer'\n      },\n      checked: instance.isAllPageRowsSelected,\n      title: 'Toggle All Current Page Rows Selected',\n      indeterminate: Boolean(!instance.isAllPageRowsSelected && instance.page.some(function (_ref4) {\n        var id = _ref4.id;\n        return instance.state.selectedRowIds[id];\n      }))\n    }];\n  }; // eslint-disable-next-line max-params\n\n  function reducer$8(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        selectedRowIds: {}\n      }, state);\n    }\n    if (action.type === actions.resetSelectedRows) {\n      return _extends({}, state, {\n        selectedRowIds: instance.initialState.selectedRowIds || {}\n      });\n    }\n    if (action.type === actions.toggleAllRowsSelected) {\n      var setSelected = action.value;\n      var isAllRowsSelected = instance.isAllRowsSelected,\n        rowsById = instance.rowsById,\n        _instance$nonGroupedR = instance.nonGroupedRowsById,\n        nonGroupedRowsById = _instance$nonGroupedR === void 0 ? rowsById : _instance$nonGroupedR;\n      var selectAll = typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected; // Only remove/add the rows that are visible on the screen\n      //  Leave all the other rows that are selected alone.\n\n      var selectedRowIds = Object.assign({}, state.selectedRowIds);\n      if (selectAll) {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          selectedRowIds[rowId] = true;\n        });\n      } else {\n        Object.keys(nonGroupedRowsById).forEach(function (rowId) {\n          delete selectedRowIds[rowId];\n        });\n      }\n      return _extends({}, state, {\n        selectedRowIds: selectedRowIds\n      });\n    }\n    if (action.type === actions.toggleRowSelected) {\n      var id = action.id,\n        _setSelected = action.value;\n      var _rowsById = instance.rowsById,\n        _instance$selectSubRo = instance.selectSubRows,\n        selectSubRows = _instance$selectSubRo === void 0 ? true : _instance$selectSubRo,\n        getSubRows = instance.getSubRows;\n      var isSelected = state.selectedRowIds[id];\n      var shouldExist = typeof _setSelected !== 'undefined' ? _setSelected : !isSelected;\n      if (isSelected === shouldExist) {\n        return state;\n      }\n      var newSelectedRowIds = _extends({}, state.selectedRowIds);\n      var handleRowById = function handleRowById(id) {\n        var row = _rowsById[id];\n        if (!row.isGrouped) {\n          if (shouldExist) {\n            newSelectedRowIds[id] = true;\n          } else {\n            delete newSelectedRowIds[id];\n          }\n        }\n        if (selectSubRows && getSubRows(row)) {\n          return getSubRows(row).forEach(function (row) {\n            return handleRowById(row.id);\n          });\n        }\n      };\n      handleRowById(id);\n      return _extends({}, state, {\n        selectedRowIds: newSelectedRowIds\n      });\n    }\n    if (action.type === actions.toggleAllPageRowsSelected) {\n      var _setSelected2 = action.value;\n      var page = instance.page,\n        _rowsById2 = instance.rowsById,\n        _instance$selectSubRo2 = instance.selectSubRows,\n        _selectSubRows = _instance$selectSubRo2 === void 0 ? true : _instance$selectSubRo2,\n        isAllPageRowsSelected = instance.isAllPageRowsSelected,\n        _getSubRows = instance.getSubRows;\n      var _selectAll = typeof _setSelected2 !== 'undefined' ? _setSelected2 : !isAllPageRowsSelected;\n      var _newSelectedRowIds = _extends({}, state.selectedRowIds);\n      var _handleRowById = function _handleRowById(id) {\n        var row = _rowsById2[id];\n        if (!row.isGrouped) {\n          if (_selectAll) {\n            _newSelectedRowIds[id] = true;\n          } else {\n            delete _newSelectedRowIds[id];\n          }\n        }\n        if (_selectSubRows && _getSubRows(row)) {\n          return _getSubRows(row).forEach(function (row) {\n            return _handleRowById(row.id);\n          });\n        }\n      };\n      page.forEach(function (row) {\n        return _handleRowById(row.id);\n      });\n      return _extends({}, state, {\n        selectedRowIds: _newSelectedRowIds\n      });\n    }\n    return state;\n  }\n  function useInstance$8(instance) {\n    var data = instance.data,\n      rows = instance.rows,\n      getHooks = instance.getHooks,\n      plugins = instance.plugins,\n      rowsById = instance.rowsById,\n      _instance$nonGroupedR2 = instance.nonGroupedRowsById,\n      nonGroupedRowsById = _instance$nonGroupedR2 === void 0 ? rowsById : _instance$nonGroupedR2,\n      _instance$autoResetSe = instance.autoResetSelectedRows,\n      autoResetSelectedRows = _instance$autoResetSe === void 0 ? true : _instance$autoResetSe,\n      selectedRowIds = instance.state.selectedRowIds,\n      _instance$selectSubRo3 = instance.selectSubRows,\n      selectSubRows = _instance$selectSubRo3 === void 0 ? true : _instance$selectSubRo3,\n      dispatch = instance.dispatch,\n      page = instance.page,\n      getSubRows = instance.getSubRows;\n    ensurePluginOrder(plugins, ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'], 'useRowSelect');\n    var selectedFlatRows = React.useMemo(function () {\n      var selectedFlatRows = [];\n      rows.forEach(function (row) {\n        var isSelected = selectSubRows ? getRowIsSelected(row, selectedRowIds, getSubRows) : !!selectedRowIds[row.id];\n        row.isSelected = !!isSelected;\n        row.isSomeSelected = isSelected === null;\n        if (isSelected) {\n          selectedFlatRows.push(row);\n        }\n      });\n      return selectedFlatRows;\n    }, [rows, selectSubRows, selectedRowIds, getSubRows]);\n    var isAllRowsSelected = Boolean(Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length);\n    var isAllPageRowsSelected = isAllRowsSelected;\n    if (isAllRowsSelected) {\n      if (Object.keys(nonGroupedRowsById).some(function (id) {\n        return !selectedRowIds[id];\n      })) {\n        isAllRowsSelected = false;\n      }\n    }\n    if (!isAllRowsSelected) {\n      if (page && page.length && page.some(function (_ref5) {\n        var id = _ref5.id;\n        return !selectedRowIds[id];\n      })) {\n        isAllPageRowsSelected = false;\n      }\n    }\n    var getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetSelectedRows()) {\n        dispatch({\n          type: actions.resetSelectedRows\n        });\n      }\n    }, [dispatch, data]);\n    var toggleAllRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleAllPageRowsSelected = React.useCallback(function (value) {\n      return dispatch({\n        type: actions.toggleAllPageRowsSelected,\n        value: value\n      });\n    }, [dispatch]);\n    var toggleRowSelected = React.useCallback(function (id, value) {\n      return dispatch({\n        type: actions.toggleRowSelected,\n        id: id,\n        value: value\n      });\n    }, [dispatch]);\n    var getInstance = useGetLatest(instance);\n    var getToggleAllRowsSelectedProps = makePropGetter(getHooks().getToggleAllRowsSelectedProps, {\n      instance: getInstance()\n    });\n    var getToggleAllPageRowsSelectedProps = makePropGetter(getHooks().getToggleAllPageRowsSelectedProps, {\n      instance: getInstance()\n    });\n    Object.assign(instance, {\n      selectedFlatRows: selectedFlatRows,\n      isAllRowsSelected: isAllRowsSelected,\n      isAllPageRowsSelected: isAllPageRowsSelected,\n      toggleRowSelected: toggleRowSelected,\n      toggleAllRowsSelected: toggleAllRowsSelected,\n      getToggleAllRowsSelectedProps: getToggleAllRowsSelectedProps,\n      getToggleAllPageRowsSelectedProps: getToggleAllPageRowsSelectedProps,\n      toggleAllPageRowsSelected: toggleAllPageRowsSelected\n    });\n  }\n  function prepareRow$3(row, _ref6) {\n    var instance = _ref6.instance;\n    row.toggleRowSelected = function (set) {\n      return instance.toggleRowSelected(row.id, set);\n    };\n    row.getToggleRowSelectedProps = makePropGetter(instance.getHooks().getToggleRowSelectedProps, {\n      instance: instance,\n      row: row\n    });\n  }\n  function getRowIsSelected(row, selectedRowIds, getSubRows) {\n    if (selectedRowIds[row.id]) {\n      return true;\n    }\n    var subRows = getSubRows(row);\n    if (subRows && subRows.length) {\n      var allChildrenSelected = true;\n      var someSelected = false;\n      subRows.forEach(function (subRow) {\n        // Bail out early if we know both of these\n        if (someSelected && !allChildrenSelected) {\n          return;\n        }\n        if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n          someSelected = true;\n        } else {\n          allChildrenSelected = false;\n        }\n      });\n      return allChildrenSelected ? true : someSelected ? null : false;\n    }\n    return false;\n  }\n  var defaultInitialRowStateAccessor = function defaultInitialRowStateAccessor(row) {\n    return {};\n  };\n  var defaultInitialCellStateAccessor = function defaultInitialCellStateAccessor(cell) {\n    return {};\n  }; // Actions\n\n  actions.setRowState = 'setRowState';\n  actions.setCellState = 'setCellState';\n  actions.resetRowState = 'resetRowState';\n  var useRowState = function useRowState(hooks) {\n    hooks.stateReducers.push(reducer$9);\n    hooks.useInstance.push(useInstance$9);\n    hooks.prepareRow.push(prepareRow$4);\n  };\n  useRowState.pluginName = 'useRowState';\n  function reducer$9(state, action, previousState, instance) {\n    var _instance$initialRowS = instance.initialRowStateAccessor,\n      initialRowStateAccessor = _instance$initialRowS === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS,\n      _instance$initialCell = instance.initialCellStateAccessor,\n      initialCellStateAccessor = _instance$initialCell === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell,\n      rowsById = instance.rowsById;\n    if (action.type === actions.init) {\n      return _extends({\n        rowState: {}\n      }, state);\n    }\n    if (action.type === actions.resetRowState) {\n      return _extends({}, state, {\n        rowState: instance.initialState.rowState || {}\n      });\n    }\n    if (action.type === actions.setRowState) {\n      var _extends2;\n      var rowId = action.rowId,\n        value = action.value;\n      var oldRowState = typeof state.rowState[rowId] !== 'undefined' ? state.rowState[rowId] : initialRowStateAccessor(rowsById[rowId]);\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends2 = {}, _extends2[rowId] = functionalUpdate(value, oldRowState), _extends2))\n      });\n    }\n    if (action.type === actions.setCellState) {\n      var _oldRowState$cellStat, _rowsById$_rowId, _rowsById$_rowId$cell, _extends3, _extends4;\n      var _rowId = action.rowId,\n        columnId = action.columnId,\n        _value = action.value;\n      var _oldRowState = typeof state.rowState[_rowId] !== 'undefined' ? state.rowState[_rowId] : initialRowStateAccessor(rowsById[_rowId]);\n      var oldCellState = typeof (_oldRowState == null ? void 0 : (_oldRowState$cellStat = _oldRowState.cellState) == null ? void 0 : _oldRowState$cellStat[columnId]) !== 'undefined' ? _oldRowState.cellState[columnId] : initialCellStateAccessor((_rowsById$_rowId = rowsById[_rowId]) == null ? void 0 : (_rowsById$_rowId$cell = _rowsById$_rowId.cells) == null ? void 0 : _rowsById$_rowId$cell.find(function (cell) {\n        return cell.column.id === columnId;\n      }));\n      return _extends({}, state, {\n        rowState: _extends({}, state.rowState, (_extends4 = {}, _extends4[_rowId] = _extends({}, _oldRowState, {\n          cellState: _extends({}, _oldRowState.cellState || {}, (_extends3 = {}, _extends3[columnId] = functionalUpdate(_value, oldCellState), _extends3))\n        }), _extends4))\n      });\n    }\n  }\n  function useInstance$9(instance) {\n    var _instance$autoResetRo = instance.autoResetRowState,\n      autoResetRowState = _instance$autoResetRo === void 0 ? true : _instance$autoResetRo,\n      data = instance.data,\n      dispatch = instance.dispatch;\n    var setRowState = React.useCallback(function (rowId, value) {\n      return dispatch({\n        type: actions.setRowState,\n        rowId: rowId,\n        value: value\n      });\n    }, [dispatch]);\n    var setCellState = React.useCallback(function (rowId, columnId, value) {\n      return dispatch({\n        type: actions.setCellState,\n        rowId: rowId,\n        columnId: columnId,\n        value: value\n      });\n    }, [dispatch]);\n    var getAutoResetRowState = useGetLatest(autoResetRowState);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetRowState()) {\n        dispatch({\n          type: actions.resetRowState\n        });\n      }\n    }, [data]);\n    Object.assign(instance, {\n      setRowState: setRowState,\n      setCellState: setCellState\n    });\n  }\n  function prepareRow$4(row, _ref) {\n    var instance = _ref.instance;\n    var _instance$initialRowS2 = instance.initialRowStateAccessor,\n      initialRowStateAccessor = _instance$initialRowS2 === void 0 ? defaultInitialRowStateAccessor : _instance$initialRowS2,\n      _instance$initialCell2 = instance.initialCellStateAccessor,\n      initialCellStateAccessor = _instance$initialCell2 === void 0 ? defaultInitialCellStateAccessor : _instance$initialCell2,\n      rowState = instance.state.rowState;\n    if (row) {\n      row.state = typeof rowState[row.id] !== 'undefined' ? rowState[row.id] : initialRowStateAccessor(row);\n      row.setState = function (updater) {\n        return instance.setRowState(row.id, updater);\n      };\n      row.cells.forEach(function (cell) {\n        if (!row.state.cellState) {\n          row.state.cellState = {};\n        }\n        cell.state = typeof row.state.cellState[cell.column.id] !== 'undefined' ? row.state.cellState[cell.column.id] : initialCellStateAccessor(cell);\n        cell.setState = function (updater) {\n          return instance.setCellState(row.id, cell.column.id, updater);\n        };\n      });\n    }\n  }\n  actions.resetColumnOrder = 'resetColumnOrder';\n  actions.setColumnOrder = 'setColumnOrder';\n  var useColumnOrder = function useColumnOrder(hooks) {\n    hooks.stateReducers.push(reducer$a);\n    hooks.visibleColumnsDeps.push(function (deps, _ref) {\n      var instance = _ref.instance;\n      return [].concat(deps, [instance.state.columnOrder]);\n    });\n    hooks.visibleColumns.push(visibleColumns$2);\n    hooks.useInstance.push(useInstance$a);\n  };\n  useColumnOrder.pluginName = 'useColumnOrder';\n  function reducer$a(state, action, previousState, instance) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnOrder: []\n      }, state);\n    }\n    if (action.type === actions.resetColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: instance.initialState.columnOrder || []\n      });\n    }\n    if (action.type === actions.setColumnOrder) {\n      return _extends({}, state, {\n        columnOrder: functionalUpdate(action.columnOrder, state.columnOrder)\n      });\n    }\n  }\n  function visibleColumns$2(columns, _ref2) {\n    var columnOrder = _ref2.instance.state.columnOrder;\n\n    // If there is no order, return the normal columns\n    if (!columnOrder || !columnOrder.length) {\n      return columns;\n    }\n    var columnOrderCopy = [].concat(columnOrder); // If there is an order, make a copy of the columns\n\n    var columnsCopy = [].concat(columns); // And make a new ordered array of the columns\n\n    var columnsInOrder = []; // Loop over the columns and place them in order into the new array\n\n    var _loop = function _loop() {\n      var targetColumnId = columnOrderCopy.shift();\n      var foundIndex = columnsCopy.findIndex(function (d) {\n        return d.id === targetColumnId;\n      });\n      if (foundIndex > -1) {\n        columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0]);\n      }\n    };\n    while (columnsCopy.length && columnOrderCopy.length) {\n      _loop();\n    } // If there are any columns left, add them to the end\n\n    return [].concat(columnsInOrder, columnsCopy);\n  }\n  function useInstance$a(instance) {\n    var dispatch = instance.dispatch;\n    instance.setColumnOrder = React.useCallback(function (columnOrder) {\n      return dispatch({\n        type: actions.setColumnOrder,\n        columnOrder: columnOrder\n      });\n    }, [dispatch]);\n  }\n  defaultColumn.canResize = true; // Actions\n\n  actions.columnStartResizing = 'columnStartResizing';\n  actions.columnResizing = 'columnResizing';\n  actions.columnDoneResizing = 'columnDoneResizing';\n  actions.resetResize = 'resetResize';\n  var useResizeColumns = function useResizeColumns(hooks) {\n    hooks.getResizerProps = [defaultGetResizerProps];\n    hooks.getHeaderProps.push({\n      style: {\n        position: 'relative'\n      }\n    });\n    hooks.stateReducers.push(reducer$b);\n    hooks.useInstance.push(useInstance$b);\n    hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions$1);\n  };\n  var defaultGetResizerProps = function defaultGetResizerProps(props, _ref) {\n    var instance = _ref.instance,\n      header = _ref.header;\n    var dispatch = instance.dispatch;\n    var onResizeStart = function onResizeStart(e, header) {\n      var isTouchEvent = false;\n      if (e.type === 'touchstart') {\n        // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n        if (e.touches && e.touches.length > 1) {\n          return;\n        }\n        isTouchEvent = true;\n      }\n      var headersToResize = getLeafHeaders(header);\n      var headerIdWidths = headersToResize.map(function (d) {\n        return [d.id, d.totalWidth];\n      });\n      var clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX;\n      var dispatchMove = function dispatchMove(clientXPos) {\n        dispatch({\n          type: actions.columnResizing,\n          clientX: clientXPos\n        });\n      };\n      var dispatchEnd = function dispatchEnd() {\n        return dispatch({\n          type: actions.columnDoneResizing\n        });\n      };\n      var handlersAndEvents = {\n        mouse: {\n          moveEvent: 'mousemove',\n          moveHandler: function moveHandler(e) {\n            return dispatchMove(e.clientX);\n          },\n          upEvent: 'mouseup',\n          upHandler: function upHandler(e) {\n            document.removeEventListener('mousemove', handlersAndEvents.mouse.moveHandler);\n            document.removeEventListener('mouseup', handlersAndEvents.mouse.upHandler);\n            dispatchEnd();\n          }\n        },\n        touch: {\n          moveEvent: 'touchmove',\n          moveHandler: function moveHandler(e) {\n            if (e.cancelable) {\n              e.preventDefault();\n              e.stopPropagation();\n            }\n            dispatchMove(e.touches[0].clientX);\n            return false;\n          },\n          upEvent: 'touchend',\n          upHandler: function upHandler(e) {\n            document.removeEventListener(handlersAndEvents.touch.moveEvent, handlersAndEvents.touch.moveHandler);\n            document.removeEventListener(handlersAndEvents.touch.upEvent, handlersAndEvents.touch.moveHandler);\n            dispatchEnd();\n          }\n        }\n      };\n      var events = isTouchEvent ? handlersAndEvents.touch : handlersAndEvents.mouse;\n      var passiveIfSupported = passiveEventSupported() ? {\n        passive: false\n      } : false;\n      document.addEventListener(events.moveEvent, events.moveHandler, passiveIfSupported);\n      document.addEventListener(events.upEvent, events.upHandler, passiveIfSupported);\n      dispatch({\n        type: actions.columnStartResizing,\n        columnId: header.id,\n        columnWidth: header.totalWidth,\n        headerIdWidths: headerIdWidths,\n        clientX: clientX\n      });\n    };\n    return [props, {\n      onMouseDown: function onMouseDown(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      onTouchStart: function onTouchStart(e) {\n        return e.persist() || onResizeStart(e, header);\n      },\n      style: {\n        cursor: 'col-resize'\n      },\n      draggable: false,\n      role: 'separator'\n    }];\n  };\n  useResizeColumns.pluginName = 'useResizeColumns';\n  function reducer$b(state, action) {\n    if (action.type === actions.init) {\n      return _extends({\n        columnResizing: {\n          columnWidths: {}\n        }\n      }, state);\n    }\n    if (action.type === actions.resetResize) {\n      return _extends({}, state, {\n        columnResizing: {\n          columnWidths: {}\n        }\n      });\n    }\n    if (action.type === actions.columnStartResizing) {\n      var clientX = action.clientX,\n        columnId = action.columnId,\n        columnWidth = action.columnWidth,\n        headerIdWidths = action.headerIdWidths;\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: clientX,\n          headerIdWidths: headerIdWidths,\n          columnWidth: columnWidth,\n          isResizingColumn: columnId\n        })\n      });\n    }\n    if (action.type === actions.columnResizing) {\n      var _clientX = action.clientX;\n      var _state$columnResizing = state.columnResizing,\n        startX = _state$columnResizing.startX,\n        _columnWidth = _state$columnResizing.columnWidth,\n        _state$columnResizing2 = _state$columnResizing.headerIdWidths,\n        _headerIdWidths = _state$columnResizing2 === void 0 ? [] : _state$columnResizing2;\n      var deltaX = _clientX - startX;\n      var percentageDeltaX = deltaX / _columnWidth;\n      var newColumnWidths = {};\n      _headerIdWidths.forEach(function (_ref2) {\n        var headerId = _ref2[0],\n          headerWidth = _ref2[1];\n        newColumnWidths[headerId] = Math.max(headerWidth + headerWidth * percentageDeltaX, 0);\n      });\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          columnWidths: _extends({}, state.columnResizing.columnWidths, {}, newColumnWidths)\n        })\n      });\n    }\n    if (action.type === actions.columnDoneResizing) {\n      return _extends({}, state, {\n        columnResizing: _extends({}, state.columnResizing, {\n          startX: null,\n          isResizingColumn: null\n        })\n      });\n    }\n  }\n  var useInstanceBeforeDimensions$1 = function useInstanceBeforeDimensions(instance) {\n    var flatHeaders = instance.flatHeaders,\n      disableResizing = instance.disableResizing,\n      getHooks = instance.getHooks,\n      columnResizing = instance.state.columnResizing;\n    var getInstance = useGetLatest(instance);\n    flatHeaders.forEach(function (header) {\n      var canResize = getFirstDefined(header.disableResizing === true ? false : undefined, disableResizing === true ? false : undefined, true);\n      header.canResize = canResize;\n      header.width = columnResizing.columnWidths[header.id] || header.originalWidth || header.width;\n      header.isResizing = columnResizing.isResizingColumn === header.id;\n      if (canResize) {\n        header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n          instance: getInstance(),\n          header: header\n        });\n      }\n    });\n  };\n  function useInstance$b(instance) {\n    var plugins = instance.plugins,\n      dispatch = instance.dispatch,\n      _instance$autoResetRe = instance.autoResetResize,\n      autoResetResize = _instance$autoResetRe === void 0 ? true : _instance$autoResetRe,\n      columns = instance.columns;\n    ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns');\n    var getAutoResetResize = useGetLatest(autoResetResize);\n    useMountedLayoutEffect(function () {\n      if (getAutoResetResize()) {\n        dispatch({\n          type: actions.resetResize\n        });\n      }\n    }, [columns]);\n    var resetResizing = React.useCallback(function () {\n      return dispatch({\n        type: actions.resetResize\n      });\n    }, [dispatch]);\n    Object.assign(instance, {\n      resetResizing: resetResizing\n    });\n  }\n  function getLeafHeaders(header) {\n    var leafHeaders = [];\n    var recurseHeader = function recurseHeader(header) {\n      if (header.columns && header.columns.length) {\n        header.columns.map(recurseHeader);\n      }\n      leafHeaders.push(header);\n    };\n    recurseHeader(header);\n    return leafHeaders;\n  }\n  var cellStyles = {\n    position: 'absolute',\n    top: 0\n  };\n  var useAbsoluteLayout = function useAbsoluteLayout(hooks) {\n    hooks.getTableBodyProps.push(getRowStyles);\n    hooks.getRowProps.push(getRowStyles);\n    hooks.getHeaderGroupProps.push(getRowStyles);\n    hooks.getFooterGroupProps.push(getRowStyles);\n    hooks.getHeaderProps.push(function (props, _ref) {\n      var column = _ref.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref2) {\n      var cell = _ref2.cell;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: cell.column.totalLeft + \"px\",\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref3) {\n      var column = _ref3.column;\n      return [props, {\n        style: _extends({}, cellStyles, {\n          left: column.totalLeft + \"px\",\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n  useAbsoluteLayout.pluginName = 'useAbsoluteLayout';\n  var getRowStyles = function getRowStyles(props, _ref4) {\n    var instance = _ref4.instance;\n    return [props, {\n      style: {\n        position: 'relative',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n  var cellStyles$1 = {\n    display: 'inline-block',\n    boxSizing: 'border-box'\n  };\n  var getRowStyles$1 = function getRowStyles(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        width: instance.totalColumnsWidth + \"px\"\n      }\n    }];\n  };\n  var useBlockLayout = function useBlockLayout(hooks) {\n    hooks.getRowProps.push(getRowStyles$1);\n    hooks.getHeaderGroupProps.push(getRowStyles$1);\n    hooks.getFooterGroupProps.push(getRowStyles$1);\n    hooks.getHeaderProps.push(function (props, _ref2) {\n      var column = _ref2.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getCellProps.push(function (props, _ref3) {\n      var cell = _ref3.cell;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: cell.column.totalWidth + \"px\"\n        })\n      }];\n    });\n    hooks.getFooterProps.push(function (props, _ref4) {\n      var column = _ref4.column;\n      return [props, {\n        style: _extends({}, cellStyles$1, {\n          width: column.totalWidth + \"px\"\n        })\n      }];\n    });\n  };\n  useBlockLayout.pluginName = 'useBlockLayout';\n  function useFlexLayout(hooks) {\n    hooks.getTableProps.push(getTableProps);\n    hooks.getRowProps.push(getRowStyles$2);\n    hooks.getHeaderGroupProps.push(getRowStyles$2);\n    hooks.getFooterGroupProps.push(getRowStyles$2);\n    hooks.getHeaderProps.push(getHeaderProps);\n    hooks.getCellProps.push(getCellProps);\n    hooks.getFooterProps.push(getFooterProps);\n  }\n  useFlexLayout.pluginName = 'useFlexLayout';\n  var getTableProps = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n  var getRowStyles$2 = function getRowStyles(props, _ref2) {\n    var instance = _ref2.instance;\n    return [props, {\n      style: {\n        display: 'flex',\n        flex: '1 0 auto',\n        minWidth: instance.totalColumnsMinWidth + \"px\"\n      }\n    }];\n  };\n  var getHeaderProps = function getHeaderProps(props, _ref3) {\n    var column = _ref3.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n  var getCellProps = function getCellProps(props, _ref4) {\n    var cell = _ref4.cell;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: cell.column.totalFlexWidth + \" 0 auto\",\n        minWidth: cell.column.totalMinWidth + \"px\",\n        width: cell.column.totalWidth + \"px\"\n      }\n    }];\n  };\n  var getFooterProps = function getFooterProps(props, _ref5) {\n    var column = _ref5.column;\n    return [props, {\n      style: {\n        boxSizing: 'border-box',\n        flex: column.totalFlexWidth ? column.totalFlexWidth + \" 0 auto\" : undefined,\n        minWidth: column.totalMinWidth + \"px\",\n        width: column.totalWidth + \"px\"\n      }\n    }];\n  };\n  function useGridLayout(hooks) {\n    hooks.stateReducers.push(reducer$c);\n    hooks.getTableProps.push(getTableProps$1);\n    hooks.getHeaderProps.push(getHeaderProps$1);\n  }\n  useGridLayout.pluginName = 'useGridLayout';\n  var getTableProps$1 = function getTableProps(props, _ref) {\n    var instance = _ref.instance;\n    return [props, {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: instance.state.gridLayout.columnWidths.map(function (w) {\n          return w;\n        }).join(\" \")\n      }\n    }];\n  };\n  var getHeaderProps$1 = function getHeaderProps(props, _ref2) {\n    var column = _ref2.column;\n    return [props, {\n      id: \"header-cell-\" + column.id,\n      style: {\n        position: \"sticky\" //enables a scroll wrapper to be placed around the table and have sticky headers\n      }\n    }];\n  };\n\n  function reducer$c(state, action, previousState, instance) {\n    if (action.type === \"init\") {\n      return _extends({\n        gridLayout: {\n          columnWidths: instance.columns.map(function () {\n            return \"auto\";\n          })\n        }\n      }, state);\n    }\n    if (action.type === \"columnStartResizing\") {\n      var columnId = action.columnId;\n      var columnIndex = instance.visibleColumns.findIndex(function (col) {\n        return col.id === columnId;\n      });\n      var elWidth = getElementWidth(columnId);\n      if (elWidth !== undefined) {\n        return _extends({}, state, {\n          gridLayout: _extends({}, state.gridLayout, {\n            columnId: columnId,\n            columnIndex: columnIndex,\n            startingWidth: elWidth\n          })\n        });\n      } else {\n        return state;\n      }\n    }\n    if (action.type === \"columnResizing\") {\n      var _state$gridLayout = state.gridLayout,\n        _columnIndex = _state$gridLayout.columnIndex,\n        startingWidth = _state$gridLayout.startingWidth,\n        columnWidths = _state$gridLayout.columnWidths;\n      var change = state.columnResizing.startX - action.clientX;\n      var newWidth = startingWidth - change;\n      var columnWidthsCopy = [].concat(columnWidths);\n      columnWidthsCopy[_columnIndex] = newWidth + \"px\";\n      return _extends({}, state, {\n        gridLayout: _extends({}, state.gridLayout, {\n          columnWidths: columnWidthsCopy\n        })\n      });\n    }\n  }\n  function getElementWidth(columnId) {\n    var _document$getElementB;\n    var width = (_document$getElementB = document.getElementById(\"header-cell-\" + columnId)) == null ? void 0 : _document$getElementB.offsetWidth;\n    if (width !== undefined) {\n      return width;\n    }\n  }\n  exports._UNSTABLE_usePivotColumns = _UNSTABLE_usePivotColumns;\n  exports.actions = actions;\n  exports.defaultColumn = defaultColumn;\n  exports.defaultGroupByFn = defaultGroupByFn;\n  exports.defaultOrderByFn = defaultOrderByFn;\n  exports.defaultRenderer = defaultRenderer;\n  exports.emptyRenderer = emptyRenderer;\n  exports.ensurePluginOrder = ensurePluginOrder;\n  exports.flexRender = flexRender;\n  exports.functionalUpdate = functionalUpdate;\n  exports.loopHooks = loopHooks;\n  exports.makePropGetter = makePropGetter;\n  exports.makeRenderer = makeRenderer;\n  exports.reduceHooks = reduceHooks;\n  exports.safeUseLayoutEffect = safeUseLayoutEffect;\n  exports.useAbsoluteLayout = useAbsoluteLayout;\n  exports.useAsyncDebounce = useAsyncDebounce;\n  exports.useBlockLayout = useBlockLayout;\n  exports.useColumnOrder = useColumnOrder;\n  exports.useExpanded = useExpanded;\n  exports.useFilters = useFilters;\n  exports.useFlexLayout = useFlexLayout;\n  exports.useGetLatest = useGetLatest;\n  exports.useGlobalFilter = useGlobalFilter;\n  exports.useGridLayout = useGridLayout;\n  exports.useGroupBy = useGroupBy;\n  exports.useMountedLayoutEffect = useMountedLayoutEffect;\n  exports.usePagination = usePagination;\n  exports.useResizeColumns = useResizeColumns;\n  exports.useRowSelect = useRowSelect;\n  exports.useRowState = useRowState;\n  exports.useSortBy = useSortBy;\n  exports.useTable = useTable;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["../src/publicUtils.js","../src/utils.js","../src/makeDefaultPluginHooks.js","../src/hooks/useColumnVisibility.js","../src/hooks/useTable.js","../src/plugin-hooks/useExpanded.js","../src/filterTypes.js","../src/plugin-hooks/useFilters.js","../src/plugin-hooks/useGlobalFilter.js","../src/aggregations.js","../src/plugin-hooks/useGroupBy.js","../src/sortTypes.js","../src/plugin-hooks/useSortBy.js","../src/plugin-hooks/usePagination.js","../src/plugin-hooks/_UNSTABLE_usePivotColumns.js","../src/plugin-hooks/useRowSelect.js","../src/plugin-hooks/useRowState.js","../src/plugin-hooks/useColumnOrder.js","../src/plugin-hooks/useResizeColumns.js","../src/plugin-hooks/useAbsoluteLayout.js","../src/plugin-hooks/useBlockLayout.js","../src/plugin-hooks/useFlexLayout.js","../src/plugin-hooks/useGridLayout.js"],"names":["renderErr","actions","init","defaultRenderer","value","emptyRenderer","defaultColumn","Cell","width","minWidth","maxWidth","Number","MAX_SAFE_INTEGER","mergeProps","propList","reduce","props","next","style","className","rest","handlePropGetter","prevProps","userProps","meta","Array","isArray","makePropGetter","hooks","prev","reduceHooks","initial","allowUndefined","nextValue","console","info","Error","loopHooks","context","forEach","hook","ensurePluginOrder","plugins","befores","pluginName","afters","pluginIndex","findIndex","plugin","beforeIndex","before","functionalUpdate","updater","old","useGetLatest","obj","ref","React","useRef","current","useCallback","safeUseLayoutEffect","document","useLayoutEffect","useEffect","useMountedLayoutEffect","fn","deps","mountedRef","useAsyncDebounce","defaultFn","defaultWait","debounceRef","getDefaultFn","getDefaultWait","args","promise","Promise","resolve","reject","timeout","clearTimeout","setTimeout","makeRenderer","instance","column","type","Comp","flexRender","isReactComponent","component","isClassComponent","isExoticComponent","proto","Object","getPrototypeOf","prototype","$$typeof","includes","description","linkColumnStructure","columns","parent","depth","map","assignColumnAccessor","flattenColumns","flattenBy","id","accessor","Header","accessorPath","split","getBy","row","error","assign","decorateColumn","userDefaultColumn","Footer","originalWidth","makeHeaderGroups","allColumns","additionalHeaderProperties","headerGroups","scanColumns","uid","getUID","length","headerGroup","headers","parentColumns","hasParents","some","d","latestParentColumn","reverse","newParent","originalId","placeholderOf","push","pathObjCache","Map","path","def","cacheKey","JSON","stringify","pathObj","get","makePathArray","set","val","cursor","pathPart","e","getFirstDefined","i","isFunction","a","arr","key","flat","recurse","expandRows","rows","manualExpandedKey","expanded","expandSubRows","expandedRows","handleRow","addToExpandedRows","isExpanded","original","canExpand","subRows","getFilterMethod","filter","userFilterTypes","filterTypes","text","shouldAutoRemoveFilter","autoRemove","unpreparedAccessWarning","passiveSupported","passiveEventSupported","supported","options","passive","window","addEventListener","removeEventListener","err","reOpenBracket","reCloseBracket","String","replace","join","flattenDeep","newArr","defaultGetTableProps","role","defaultGetTableBodyProps","defaultGetHeaderProps","colSpan","totalVisibleHeaderCount","defaultGetFooterProps","defaultGetHeaderGroupProps","index","defaultGetFooterGroupProps","defaultGetRowProps","defaultGetCellProps","cell","makeDefaultPluginHooks","useOptions","stateReducers","useControlledState","columnsDeps","allColumnsDeps","accessValue","materializedColumns","materializedColumnsDeps","useInstanceAfterData","visibleColumns","visibleColumnsDeps","headerGroupsDeps","useInstanceBeforeDimensions","useInstance","prepareRow","getTableProps","getTableBodyProps","getHeaderGroupProps","getFooterGroupProps","getHeaderProps","getFooterProps","getRowProps","getCellProps","useFinalInstance","resetHiddenColumns","toggleHideColumn","setHiddenColumns","toggleHideAllColumns","useColumnVisibility","getToggleHiddenProps","defaultGetToggleHiddenProps","getToggleHideAllColumnsProps","defaultGetToggleHideAllColumnsProps","reducer","state","hiddenColumns","onChange","toggleHidden","target","checked","isVisible","title","allColumnsHidden","indeterminate","action","previousState","initialState","should","columnId","shouldAll","isMountedRef","handleColumn","parentVisible","subColumn","subHeader","flatHeaders","dispatch","getHooks","autoResetHiddenColumns","getInstance","getAutoResetHiddenColumns","defaultInitialState","defaultColumnInstance","defaultReducer","prevState","defaultGetSubRows","defaultGetRowId","defaultUseControlledState","applyDefaults","getSubRows","getRowId","stateReducer","useTable","instanceRef","Boolean","data","userColumns","getStateReducer","s","handler","reducerState","useReducer","undefined","useMemo","flatRows","rowsById","allColumnsQueue","shift","accessRowsForColumn","accessValueHooks","initialRows","find","duplicateColumns","all","visibleColumnsDep","sort","totalColumnsMinWidth","totalColumnsWidth","totalColumnsMaxWidth","calculateHeaderWidths","render","footerGroups","allCells","values","cells","left","sumTotalMinWidth","sumTotalWidth","sumTotalMaxWidth","sumTotalFlexWidth","subHeaders","header","totalLeft","totalMinWidth","totalWidth","totalMaxWidth","totalFlexWidth","Math","min","max","canResize","accessRow","originalRow","rowIndex","parentRows","originalSubRows","resetExpanded","toggleRowExpanded","toggleAllRowsExpanded","useExpanded","getToggleAllRowsExpandedProps","defaultGetToggleAllRowsExpandedProps","getToggleRowExpandedProps","defaultGetToggleRowExpandedProps","onClick","isAllRowsExpanded","expandAll","keys","rowId","setExpanded","exists","shouldExist","_","paginateExpandedRows","autoResetExpanded","getAutoResetExpanded","expandedDepth","findExpandedDepth","preExpandedRows","maxDepth","splitId","ids","filterValue","rowValue","toLowerCase","exactText","exactTextCase","includesAll","every","includesSome","includesValue","exact","equals","between","Infinity","temp","resetFilters","setFilter","setAllFilters","useFilters","filters","filterMethod","previousfilter","newFilter","manualFilters","defaultCanFilter","disableFilters","autoResetFilters","columnDefaultCanFilter","columnDisableFilters","canFilter","found","filteredRows","filteredFlatRows","filteredRowsById","filterRows","filteredSoFar","preFilteredRows","warn","nonFilteredColumns","getAutoResetFilters","preFilteredFlatRows","preFilteredRowsById","resetGlobalFilter","setGlobalFilter","useGlobalFilter","globalFilter","stateWithoutGlobalFilter","manualGlobalFilter","globalFilterValue","autoResetGlobalFilter","disableGlobalFilter","globalFilteredRows","globalFilteredFlatRows","globalFilteredRowsById","columnDisableGlobalFilter","filterableColumns","c","getAutoResetGlobalFilter","preGlobalFilteredRows","preGlobalFilteredFlatRows","preGlobalFilteredRowsById","sum","aggregatedValues","minMax","average","median","mid","floor","nums","b","unique","from","Set","uniqueCount","size","count","emptyArray","emptyObject","resetGroupBy","setGroupBy","toggleGroupBy","useGroupBy","getGroupByToggleProps","defaultGetGroupByToggleProps","groupBy","canGroupBy","persist","resolvedGroupBy","groupByColumns","col","g","nonGroupByColumns","isGrouped","groupedIndex","indexOf","defaultUserAggregations","groupByFn","defaultGroupByFn","manualGroupBy","aggregations","userAggregations","autoResetGroupBy","disableGroupBy","defaultCanGroupBy","defaultGroupBy","defaultColumnGroupBy","columnDisableGroupBy","Aggregated","groupedRows","groupedFlatRows","groupedRowsById","onlyGroupedFlatRows","onlyGroupedRowsById","nonGroupedFlatRows","nonGroupedRowsById","existingGroupBy","aggregateRowsToValues","leafRows","aggregateFn","aggregate","groupedValues","leafValues","columnValue","aggregateValue","aggregateValueFn","groupUpRecursively","parentId","rowGroupsMap","aggregatedGroupedRows","entries","groupByVal","groupByID","subRow","getAutoResetGroupBy","preGroupedRows","preGroupedFlatRow","preGroupedRowsById","isPlaceholder","isAggregated","resKey","reSplitAlphaNumeric","alphanumeric","rowA","rowB","getRowValuesByColumnID","toString","aa","bb","an","parseInt","bn","combo","isNaN","datetime","getTime","compareBasic","basic","string","alower","blower","number","replaceNonNumeric","row1","row2","resetSortBy","setSortBy","toggleSortBy","clearSortBy","sortType","sortDescFirst","useSortBy","getSortByToggleProps","defaultGetSortByToggleProps","isMultiSortEvent","shiftKey","canSort","disableMultiSort","sortBy","newSortBy","desc","multi","disableSortRemove","disableMultiRemove","maxMultiSortColCount","existingSortBy","existingIndex","hasDescDefined","sortAction","splice","orderByFn","defaultOrderByFn","sortTypes","userSortTypes","manualSortBy","defaultCanSort","disableSortBy","autoResetSortBy","defaultColumnCanSort","columnDisableSortBy","columnSort","isSorted","sortedIndex","isSortedDesc","sortedRows","sortedFlatRows","availableSortBy","sortData","sortedData","sortMethod","sortInverted","getAutoResetSortBy","preSortedRows","preSortedFlatRows","funcs","dirs","sortFn","sortInt","resetPage","gotoPage","setPageSize","usePagination","pageSize","pageIndex","pageCount","page","newPageIndex","canNavigate","topRowIndex","autoResetPage","userPageCount","manualPagination","getAutoResetPage","ceil","pageOptions","fill","pageStart","pageEnd","slice","canPreviousPage","canNextPage","previousPage","nextPage","resetPivot","togglePivot","_UNSTABLE_usePivotColumns","getPivotToggleProps","defaultGetPivotToggleProps","defaultPivotColumns","canPivot","pivotColumns","setPivot","resolvedPivot","isPivotSource","uniqueValues","add","materialized","sourceColumns","buildPivotColumns","pivotFilters","pivotColumn","sourceColumn","isPivoted","columnGroup","PivotHeader","uniqueValue","isPivotGroup","pivotValue","newMaterialized","autoResetPivot","manaulPivot","disablePivot","defaultCanPivot","defaultPivot","defaultColumnPivot","columnDisablePivot","getAutoResetPivot","resetSelectedRows","toggleAllRowsSelected","toggleRowSelected","toggleAllPageRowsSelected","useRowSelect","getToggleRowSelectedProps","defaultGetToggleRowSelectedProps","getToggleAllRowsSelectedProps","defaultGetToggleAllRowsSelectedProps","getToggleAllPageRowsSelectedProps","defaultGetToggleAllPageRowsSelectedProps","manualRowSelectedKey","isSelected","isSomeSelected","isAllRowsSelected","selectedRowIds","isAllPageRowsSelected","setSelected","selectAll","selectSubRows","newSelectedRowIds","handleRowById","autoResetSelectedRows","selectedFlatRows","getRowIsSelected","getAutoResetSelectedRows","allChildrenSelected","someSelected","defaultInitialRowStateAccessor","defaultInitialCellStateAccessor","setRowState","setCellState","resetRowState","useRowState","initialRowStateAccessor","initialCellStateAccessor","rowState","oldRowState","oldCellState","cellState","autoResetRowState","getAutoResetRowState","setState","resetColumnOrder","setColumnOrder","useColumnOrder","columnOrder","columnOrderCopy","columnsCopy","columnsInOrder","targetColumnId","foundIndex","columnStartResizing","columnResizing","columnDoneResizing","resetResize","useResizeColumns","getResizerProps","defaultGetResizerProps","position","onResizeStart","isTouchEvent","touches","headersToResize","getLeafHeaders","headerIdWidths","clientX","round","dispatchMove","clientXPos","dispatchEnd","handlersAndEvents","mouse","moveEvent","moveHandler","upEvent","upHandler","touch","cancelable","preventDefault","stopPropagation","events","passiveIfSupported","columnWidth","onMouseDown","onTouchStart","draggable","columnWidths","startX","isResizingColumn","deltaX","percentageDeltaX","newColumnWidths","headerId","headerWidth","disableResizing","isResizing","autoResetResize","getAutoResetResize","resetResizing","leafHeaders","recurseHeader","cellStyles","top","useAbsoluteLayout","getRowStyles","display","boxSizing","useBlockLayout","useFlexLayout","flex","useGridLayout","gridTemplateColumns","gridLayout","w","columnIndex","elWidth","getElementWidth","startingWidth","change","newWidth","columnWidthsCopy","getElementById","offsetWidth"],"mappings":"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","sourcesContent":["import React from 'react'\n\nlet renderErr = 'Renderer Error ☝️'\n\nexport const actions = {\n  init: 'init',\n}\n\nexport const defaultRenderer = ({ value = '' }) => value;\nexport const emptyRenderer = () => <>&nbsp;</>;\n\nexport const defaultColumn = {\n  Cell: defaultRenderer,\n  width: 150,\n  minWidth: 0,\n  maxWidth: Number.MAX_SAFE_INTEGER,\n}\n\nfunction mergeProps(...propList) {\n  return propList.reduce((props, next) => {\n    const { style, className, ...rest } = next\n\n    props = {\n      ...props,\n      ...rest,\n    }\n\n    if (style) {\n      props.style = props.style\n        ? { ...(props.style || {}), ...(style || {}) }\n        : style\n    }\n\n    if (className) {\n      props.className = props.className\n        ? props.className + ' ' + className\n        : className\n    }\n\n    if (props.className === '') {\n      delete props.className\n    }\n\n    return props\n  }, {})\n}\n\nfunction handlePropGetter(prevProps, userProps, meta) {\n  // Handle a lambda, pass it the previous props\n  if (typeof userProps === 'function') {\n    return handlePropGetter({}, userProps(prevProps, meta))\n  }\n\n  // Handle an array, merge each item as separate props\n  if (Array.isArray(userProps)) {\n    return mergeProps(prevProps, ...userProps)\n  }\n\n  // Handle an object by default, merge the two objects\n  return mergeProps(prevProps, userProps)\n}\n\nexport const makePropGetter = (hooks, meta = {}) => {\n  return (userProps = {}) =>\n    [...hooks, userProps].reduce(\n      (prev, next) =>\n        handlePropGetter(prev, next, {\n          ...meta,\n          userProps,\n        }),\n      {}\n    )\n}\n\nexport const reduceHooks = (hooks, initial, meta = {}, allowUndefined) =>\n  hooks.reduce((prev, next) => {\n    const nextValue = next(prev, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (!allowUndefined && typeof nextValue === 'undefined') {\n        console.info(next)\n        throw new Error(\n          'React Table: A reducer hook ☝️ just returned undefined! This is not allowed.'\n        )\n      }\n    }\n    return nextValue\n  }, initial)\n\nexport const loopHooks = (hooks, context, meta = {}) =>\n  hooks.forEach(hook => {\n    const nextValue = hook(context, meta)\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof nextValue !== 'undefined') {\n        console.info(hook, nextValue)\n        throw new Error(\n          'React Table: A loop-type hook ☝️ just returned a value! This is not allowed.'\n        )\n      }\n    }\n  })\n\nexport function ensurePluginOrder(plugins, befores, pluginName, afters) {\n  if (process.env.NODE_ENV !== 'production' && afters) {\n    throw new Error(\n      `Defining plugins in the \"after\" section of ensurePluginOrder is no longer supported (see plugin ${pluginName})`\n    )\n  }\n  const pluginIndex = plugins.findIndex(\n    plugin => plugin.pluginName === pluginName\n  )\n\n  if (pluginIndex === -1) {\n    if (process.env.NODE_ENV !== 'production') {\n      throw new Error(`The plugin \"${pluginName}\" was not found in the plugin list!\nThis usually means you need to need to name your plugin hook by setting the 'pluginName' property of the hook function, eg:\n\n  ${pluginName}.pluginName = '${pluginName}'\n`)\n    }\n  }\n\n  befores.forEach(before => {\n    const beforeIndex = plugins.findIndex(\n      plugin => plugin.pluginName === before\n    )\n    if (beforeIndex > -1 && beforeIndex > pluginIndex) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `React Table: The ${pluginName} plugin hook must be placed after the ${before} plugin hook!`\n        )\n      }\n    }\n  })\n}\n\nexport function functionalUpdate(updater, old) {\n  return typeof updater === 'function' ? updater(old) : updater\n}\n\nexport function useGetLatest(obj) {\n  const ref = React.useRef()\n  ref.current = obj\n\n  return React.useCallback(() => ref.current, [])\n}\n\n// SSR has issues with useLayoutEffect still, so use useEffect during SSR\nexport const safeUseLayoutEffect =\n  typeof document !== 'undefined' ? React.useLayoutEffect : React.useEffect\n\nexport function useMountedLayoutEffect(fn, deps) {\n  const mountedRef = React.useRef(false)\n\n  safeUseLayoutEffect(() => {\n    if (mountedRef.current) {\n      fn()\n    }\n    mountedRef.current = true\n    // eslint-disable-next-line\n  }, deps)\n}\n\nexport function useAsyncDebounce(defaultFn, defaultWait = 0) {\n  const debounceRef = React.useRef({})\n\n  const getDefaultFn = useGetLatest(defaultFn)\n  const getDefaultWait = useGetLatest(defaultWait)\n\n  return React.useCallback(\n    async (...args) => {\n      if (!debounceRef.current.promise) {\n        debounceRef.current.promise = new Promise((resolve, reject) => {\n          debounceRef.current.resolve = resolve\n          debounceRef.current.reject = reject\n        })\n      }\n\n      if (debounceRef.current.timeout) {\n        clearTimeout(debounceRef.current.timeout)\n      }\n\n      debounceRef.current.timeout = setTimeout(async () => {\n        delete debounceRef.current.timeout\n        try {\n          debounceRef.current.resolve(await getDefaultFn()(...args))\n        } catch (err) {\n          debounceRef.current.reject(err)\n        } finally {\n          delete debounceRef.current.promise\n        }\n      }, getDefaultWait())\n\n      return debounceRef.current.promise\n    },\n    [getDefaultFn, getDefaultWait]\n  )\n}\n\nexport function makeRenderer(instance, column, meta = {}) {\n  return (type, userProps = {}) => {\n    const Comp = typeof type === 'string' ? column[type] : type\n\n    if (typeof Comp === 'undefined') {\n      console.info(column)\n      throw new Error(renderErr)\n    }\n\n    return flexRender(Comp, { ...instance, column, ...meta, ...userProps })\n  }\n}\n\nexport function flexRender(Comp, props) {\n  return isReactComponent(Comp) ? <Comp {...props} /> : Comp\n}\n\nfunction isReactComponent(component) {\n  return (\n    isClassComponent(component) ||\n    typeof component === 'function' ||\n    isExoticComponent(component)\n  )\n}\n\nfunction isClassComponent(component) {\n  return (\n    typeof component === 'function' &&\n    (() => {\n      const proto = Object.getPrototypeOf(component)\n      return proto.prototype && proto.prototype.isReactComponent\n    })()\n  )\n}\n\nfunction isExoticComponent(component) {\n  return (\n    typeof component === 'object' &&\n    typeof component.$$typeof === 'symbol' &&\n    ['react.memo', 'react.forward_ref'].includes(component.$$typeof.description)\n  )\n}\n","import { defaultColumn, emptyRenderer } from './publicUtils'\n\n// Find the depth of the columns\nexport function findMaxDepth(columns, depth = 0) {\n  return columns.reduce((prev, curr) => {\n    if (curr.columns) {\n      return Math.max(prev, findMaxDepth(curr.columns, depth + 1))\n    }\n    return depth\n  }, 0)\n}\n\n// Build the visible columns, headers and flat column list\nexport function linkColumnStructure(columns, parent, depth = 0) {\n  return columns.map(column => {\n    column = {\n      ...column,\n      parent,\n      depth,\n    }\n\n    assignColumnAccessor(column)\n\n    if (column.columns) {\n      column.columns = linkColumnStructure(column.columns, column, depth + 1)\n    }\n    return column\n  })\n}\n\nexport function flattenColumns(columns) {\n  return flattenBy(columns, 'columns')\n}\n\nexport function assignColumnAccessor(column) {\n  // First check for string accessor\n  let { id, accessor, Header } = column\n\n  if (typeof accessor === 'string') {\n    id = id || accessor\n    const accessorPath = accessor.split('.')\n    accessor = row => getBy(row, accessorPath)\n  }\n\n  if (!id && typeof Header === 'string' && Header) {\n    id = Header\n  }\n\n  if (!id && column.columns) {\n    console.error(column)\n    throw new Error('A column ID (or unique \"Header\" value) is required!')\n  }\n\n  if (!id) {\n    console.error(column)\n    throw new Error('A column ID (or string accessor) is required!')\n  }\n\n  Object.assign(column, {\n    id,\n    accessor,\n  })\n\n  return column\n}\n\nexport function decorateColumn(column, userDefaultColumn) {\n  if (!userDefaultColumn) {\n    throw new Error()\n  }\n  Object.assign(column, {\n    // Make sure there is a fallback header, just in case\n    Header: emptyRenderer,\n    Footer: emptyRenderer,\n    ...defaultColumn,\n    ...userDefaultColumn,\n    ...column,\n  })\n\n  Object.assign(column, {\n    originalWidth: column.width,\n  })\n\n  return column\n}\n\n// Build the header groups from the bottom up\nexport function makeHeaderGroups(\n  allColumns,\n  defaultColumn,\n  additionalHeaderProperties = () => ({})\n) {\n  const headerGroups = []\n\n  let scanColumns = allColumns\n\n  let uid = 0\n  const getUID = () => uid++\n\n  while (scanColumns.length) {\n    // The header group we are creating\n    const headerGroup = {\n      headers: [],\n    }\n\n    // The parent columns we're going to scan next\n    const parentColumns = []\n\n    const hasParents = scanColumns.some(d => d.parent)\n\n    // Scan each column for parents\n    scanColumns.forEach(column => {\n      // What is the latest (last) parent column?\n      let latestParentColumn = [...parentColumns].reverse()[0]\n\n      let newParent\n\n      if (hasParents) {\n        // If the column has a parent, add it if necessary\n        if (column.parent) {\n          newParent = {\n            ...column.parent,\n            originalId: column.parent.id,\n            id: `${column.parent.id}_${getUID()}`,\n            headers: [column],\n            ...additionalHeaderProperties(column),\n          }\n        } else {\n          // If other columns have parents, we'll need to add a place holder if necessary\n          const originalId = `${column.id}_placeholder`\n          newParent = decorateColumn(\n            {\n              originalId,\n              id: `${column.id}_placeholder_${getUID()}`,\n              placeholderOf: column,\n              headers: [column],\n              ...additionalHeaderProperties(column),\n            },\n            defaultColumn\n          )\n        }\n\n        // If the resulting parent columns are the same, just add\n        // the column and increment the header span\n        if (\n          latestParentColumn &&\n          latestParentColumn.originalId === newParent.originalId\n        ) {\n          latestParentColumn.headers.push(column)\n        } else {\n          parentColumns.push(newParent)\n        }\n      }\n\n      headerGroup.headers.push(column)\n    })\n\n    headerGroups.push(headerGroup)\n\n    // Start scanning the parent columns\n    scanColumns = parentColumns\n  }\n\n  return headerGroups.reverse()\n}\n\nconst pathObjCache = new Map()\n\nexport function getBy(obj, path, def) {\n  if (!path) {\n    return obj\n  }\n  const cacheKey = typeof path === 'function' ? path : JSON.stringify(path)\n\n  const pathObj =\n    pathObjCache.get(cacheKey) ||\n    (() => {\n      const pathObj = makePathArray(path)\n      pathObjCache.set(cacheKey, pathObj)\n      return pathObj\n    })()\n\n  let val\n\n  try {\n    val = pathObj.reduce((cursor, pathPart) => cursor[pathPart], obj)\n  } catch (e) {\n    // continue regardless of error\n  }\n  return typeof val !== 'undefined' ? val : def\n}\n\nexport function getFirstDefined(...args) {\n  for (let i = 0; i < args.length; i += 1) {\n    if (typeof args[i] !== 'undefined') {\n      return args[i]\n    }\n  }\n}\n\nexport function getElementDimensions(element) {\n  const rect = element.getBoundingClientRect()\n  const style = window.getComputedStyle(element)\n  const margins = {\n    left: parseInt(style.marginLeft),\n    right: parseInt(style.marginRight),\n  }\n  const padding = {\n    left: parseInt(style.paddingLeft),\n    right: parseInt(style.paddingRight),\n  }\n  return {\n    left: Math.ceil(rect.left),\n    width: Math.ceil(rect.width),\n    outerWidth: Math.ceil(\n      rect.width + margins.left + margins.right + padding.left + padding.right\n    ),\n    marginLeft: margins.left,\n    marginRight: margins.right,\n    paddingLeft: padding.left,\n    paddingRight: padding.right,\n    scrollWidth: element.scrollWidth,\n  }\n}\n\nexport function isFunction(a) {\n  if (typeof a === 'function') {\n    return a\n  }\n}\n\nexport function flattenBy(arr, key) {\n  const flat = []\n\n  const recurse = arr => {\n    arr.forEach(d => {\n      if (!d[key]) {\n        flat.push(d)\n      } else {\n        recurse(d[key])\n      }\n    })\n  }\n\n  recurse(arr)\n\n  return flat\n}\n\nexport function expandRows(\n  rows,\n  { manualExpandedKey, expanded, expandSubRows = true }\n) {\n  const expandedRows = []\n\n  const handleRow = (row, addToExpandedRows = true) => {\n    row.isExpanded =\n      (row.original && row.original[manualExpandedKey]) || expanded[row.id]\n\n    row.canExpand = row.subRows && !!row.subRows.length\n\n    if (addToExpandedRows) {\n      expandedRows.push(row)\n    }\n\n    if (row.subRows && row.subRows.length && row.isExpanded) {\n      row.subRows.forEach(row => handleRow(row, expandSubRows))\n    }\n  }\n\n  rows.forEach(row => handleRow(row))\n\n  return expandedRows\n}\n\nexport function getFilterMethod(filter, userFilterTypes, filterTypes) {\n  return (\n    isFunction(filter) ||\n    userFilterTypes[filter] ||\n    filterTypes[filter] ||\n    filterTypes.text\n  )\n}\n\nexport function shouldAutoRemoveFilter(autoRemove, value, column) {\n  return autoRemove ? autoRemove(value, column) : typeof value === 'undefined'\n}\n\nexport function unpreparedAccessWarning() {\n  throw new Error(\n    'React-Table: You have not called prepareRow(row) one or more rows you are attempting to render.'\n  )\n}\n\nlet passiveSupported = null\nexport function passiveEventSupported() {\n  // memoize support to avoid adding multiple test events\n  if (typeof passiveSupported === 'boolean') return passiveSupported\n\n  let supported = false\n  try {\n    const options = {\n      get passive() {\n        supported = true\n        return false\n      },\n    }\n\n    window.addEventListener('test', null, options)\n    window.removeEventListener('test', null, options)\n  } catch (err) {\n    supported = false\n  }\n  passiveSupported = supported\n  return passiveSupported\n}\n\n//\n\nconst reOpenBracket = /\\[/g\nconst reCloseBracket = /\\]/g\n\nfunction makePathArray(obj) {\n  return (\n    flattenDeep(obj)\n      // remove all periods in parts\n      .map(d => String(d).replace('.', '_'))\n      // join parts using period\n      .join('.')\n      // replace brackets with periods\n      .replace(reOpenBracket, '.')\n      .replace(reCloseBracket, '')\n      // split it back out on periods\n      .split('.')\n  )\n}\n\nfunction flattenDeep(arr, newArr = []) {\n  if (!Array.isArray(arr)) {\n    newArr.push(arr)\n  } else {\n    for (let i = 0; i < arr.length; i += 1) {\n      flattenDeep(arr[i], newArr)\n    }\n  }\n  return newArr\n}\n","const defaultGetTableProps = props => ({\n  role: 'table',\n  ...props,\n})\n\nconst defaultGetTableBodyProps = props => ({\n  role: 'rowgroup',\n  ...props,\n})\n\nconst defaultGetHeaderProps = (props, { column }) => ({\n  key: `header_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  role: 'columnheader',\n  ...props,\n})\n\nconst defaultGetFooterProps = (props, { column }) => ({\n  key: `footer_${column.id}`,\n  colSpan: column.totalVisibleHeaderCount,\n  ...props,\n})\n\nconst defaultGetHeaderGroupProps = (props, { index }) => ({\n  key: `headerGroup_${index}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetFooterGroupProps = (props, { index }) => ({\n  key: `footerGroup_${index}`,\n  ...props,\n})\n\nconst defaultGetRowProps = (props, { row }) => ({\n  key: `row_${row.id}`,\n  role: 'row',\n  ...props,\n})\n\nconst defaultGetCellProps = (props, { cell }) => ({\n  key: `cell_${cell.row.id}_${cell.column.id}`,\n  role: 'cell',\n  ...props,\n})\n\nexport default function makeDefaultPluginHooks() {\n  return {\n    useOptions: [],\n    stateReducers: [],\n    useControlledState: [],\n    columns: [],\n    columnsDeps: [],\n    allColumns: [],\n    allColumnsDeps: [],\n    accessValue: [],\n    materializedColumns: [],\n    materializedColumnsDeps: [],\n    useInstanceAfterData: [],\n    visibleColumns: [],\n    visibleColumnsDeps: [],\n    headerGroups: [],\n    headerGroupsDeps: [],\n    useInstanceBeforeDimensions: [],\n    useInstance: [],\n    prepareRow: [],\n    getTableProps: [defaultGetTableProps],\n    getTableBodyProps: [defaultGetTableBodyProps],\n    getHeaderGroupProps: [defaultGetHeaderGroupProps],\n    getFooterGroupProps: [defaultGetFooterGroupProps],\n    getHeaderProps: [defaultGetHeaderProps],\n    getFooterProps: [defaultGetFooterProps],\n    getRowProps: [defaultGetRowProps],\n    getCellProps: [defaultGetCellProps],\n    useFinalInstance: [],\n  }\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useGetLatest,\n  makePropGetter,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nactions.resetHiddenColumns = 'resetHiddenColumns'\nactions.toggleHideColumn = 'toggleHideColumn'\nactions.setHiddenColumns = 'setHiddenColumns'\nactions.toggleHideAllColumns = 'toggleHideAllColumns'\n\nexport const useColumnVisibility = hooks => {\n  hooks.getToggleHiddenProps = [defaultGetToggleHiddenProps]\n  hooks.getToggleHideAllColumnsProps = [defaultGetToggleHideAllColumnsProps]\n\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n  hooks.headerGroupsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.hiddenColumns,\n  ])\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnVisibility.pluginName = 'useColumnVisibility'\n\nconst defaultGetToggleHiddenProps = (props, { column }) => [\n  props,\n  {\n    onChange: e => {\n      column.toggleHidden(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: column.isVisible,\n    title: 'Toggle Column Visible',\n  },\n]\n\nconst defaultGetToggleHideAllColumnsProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleHideAllColumns(!e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: !instance.allColumnsHidden && !instance.state.hiddenColumns.length,\n    title: 'Toggle All Columns Hidden',\n    indeterminate:\n      !instance.allColumnsHidden && instance.state.hiddenColumns.length,\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      hiddenColumns: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: instance.initialState.hiddenColumns || [],\n    }\n  }\n\n  if (action.type === actions.toggleHideColumn) {\n    const should =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.includes(action.columnId)\n\n    const hiddenColumns = should\n      ? [...state.hiddenColumns, action.columnId]\n      : state.hiddenColumns.filter(d => d !== action.columnId)\n\n    return {\n      ...state,\n      hiddenColumns,\n    }\n  }\n\n  if (action.type === actions.setHiddenColumns) {\n    return {\n      ...state,\n      hiddenColumns: functionalUpdate(action.value, state.hiddenColumns),\n    }\n  }\n\n  if (action.type === actions.toggleHideAllColumns) {\n    const shouldAll =\n      typeof action.value !== 'undefined'\n        ? action.value\n        : !state.hiddenColumns.length\n\n    return {\n      ...state,\n      hiddenColumns: shouldAll ? instance.allColumns.map(d => d.id) : [],\n    }\n  }\n}\n\nfunction useInstanceBeforeDimensions(instance) {\n  const {\n    headers,\n    state: { hiddenColumns },\n  } = instance\n\n  const isMountedRef = React.useRef(false)\n\n  if (!isMountedRef.current) {\n  }\n\n  const handleColumn = (column, parentVisible) => {\n    column.isVisible = parentVisible && !hiddenColumns.includes(column.id)\n\n    let totalVisibleHeaderCount = 0\n\n    if (column.headers && column.headers.length) {\n      column.headers.forEach(\n        subColumn =>\n          (totalVisibleHeaderCount += handleColumn(subColumn, column.isVisible))\n      )\n    } else {\n      totalVisibleHeaderCount = column.isVisible ? 1 : 0\n    }\n\n    column.totalVisibleHeaderCount = totalVisibleHeaderCount\n\n    return totalVisibleHeaderCount\n  }\n\n  let totalVisibleHeaderCount = 0\n\n  headers.forEach(\n    subHeader => (totalVisibleHeaderCount += handleColumn(subHeader, true))\n  )\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    flatHeaders,\n    dispatch,\n    allColumns,\n    getHooks,\n    state: { hiddenColumns },\n    autoResetHiddenColumns = true,\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  const allColumnsHidden = allColumns.length === hiddenColumns.length\n\n  const toggleHideColumn = React.useCallback(\n    (columnId, value) =>\n      dispatch({ type: actions.toggleHideColumn, columnId, value }),\n    [dispatch]\n  )\n\n  const setHiddenColumns = React.useCallback(\n    value => dispatch({ type: actions.setHiddenColumns, value }),\n    [dispatch]\n  )\n\n  const toggleHideAllColumns = React.useCallback(\n    value => dispatch({ type: actions.toggleHideAllColumns, value }),\n    [dispatch]\n  )\n\n  const getToggleHideAllColumnsProps = makePropGetter(\n    getHooks().getToggleHideAllColumnsProps,\n    { instance: getInstance() }\n  )\n\n  flatHeaders.forEach(column => {\n    column.toggleHidden = value => {\n      dispatch({\n        type: actions.toggleHideColumn,\n        columnId: column.id,\n        value,\n      })\n    }\n\n    column.getToggleHiddenProps = makePropGetter(\n      getHooks().getToggleHiddenProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n  })\n\n  const getAutoResetHiddenColumns = useGetLatest(autoResetHiddenColumns)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetHiddenColumns()) {\n      dispatch({ type: actions.resetHiddenColumns })\n    }\n  }, [dispatch, columns])\n\n  Object.assign(instance, {\n    allColumnsHidden,\n    toggleHideColumn,\n    setHiddenColumns,\n    toggleHideAllColumns,\n    getToggleHideAllColumnsProps,\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  linkColumnStructure,\n  flattenColumns,\n  assignColumnAccessor,\n  unpreparedAccessWarning,\n  makeHeaderGroups,\n  decorateColumn,\n} from '../utils'\n\nimport {\n  useGetLatest,\n  reduceHooks,\n  actions,\n  loopHooks,\n  makePropGetter,\n  makeRenderer,\n} from '../publicUtils'\n\nimport makeDefaultPluginHooks from '../makeDefaultPluginHooks'\n\nimport { useColumnVisibility } from './useColumnVisibility'\n\nconst defaultInitialState = {}\nconst defaultColumnInstance = {}\nconst defaultReducer = (state, action, prevState) => state\nconst defaultGetSubRows = (row, index) => row.subRows || []\nconst defaultGetRowId = (row, index, parent) =>\n  `${parent ? [parent.id, index].join('.') : index}`\nconst defaultUseControlledState = d => d\n\nfunction applyDefaults(props) {\n  const {\n    initialState = defaultInitialState,\n    defaultColumn = defaultColumnInstance,\n    getSubRows = defaultGetSubRows,\n    getRowId = defaultGetRowId,\n    stateReducer = defaultReducer,\n    useControlledState = defaultUseControlledState,\n    ...rest\n  } = props\n\n  return {\n    ...rest,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  }\n}\n\nexport const useTable = (props, ...plugins) => {\n  // Apply default props\n  props = applyDefaults(props)\n\n  // Add core plugins\n  plugins = [useColumnVisibility, ...plugins]\n\n  // Create the table instance\n  let instanceRef = React.useRef({})\n\n  // Create a getter for the instance (helps avoid a lot of potential memory leaks)\n  const getInstance = useGetLatest(instanceRef.current)\n\n  // Assign the props, plugins and hooks to the instance\n  Object.assign(getInstance(), {\n    ...props,\n    plugins,\n    hooks: makeDefaultPluginHooks(),\n  })\n\n  // Allow plugins to register hooks as early as possible\n  plugins.filter(Boolean).forEach(plugin => {\n    plugin(getInstance().hooks)\n  })\n\n  // Consume all hooks and make a getter for them\n  const getHooks = useGetLatest(getInstance().hooks)\n  getInstance().getHooks = getHooks\n  delete getInstance().hooks\n\n  // Allow useOptions hooks to modify the options coming into the table\n  Object.assign(\n    getInstance(),\n    reduceHooks(getHooks().useOptions, applyDefaults(props))\n  )\n\n  const {\n    data,\n    columns: userColumns,\n    initialState,\n    defaultColumn,\n    getSubRows,\n    getRowId,\n    stateReducer,\n    useControlledState,\n  } = getInstance()\n\n  // Setup user reducer ref\n  const getStateReducer = useGetLatest(stateReducer)\n\n  // Build the reducer\n  const reducer = React.useCallback(\n    (state, action) => {\n      // Detect invalid actions\n      if (!action.type) {\n        console.info({ action })\n        throw new Error('Unknown Action 👆')\n      }\n\n      // Reduce the state from all plugin reducers\n      return [\n        ...getHooks().stateReducers,\n        // Allow the user to add their own state reducer(s)\n        ...(Array.isArray(getStateReducer())\n          ? getStateReducer()\n          : [getStateReducer()]),\n      ].reduce(\n        (s, handler) => handler(s, action, state, getInstance()) || s,\n        state\n      )\n    },\n    [getHooks, getStateReducer, getInstance]\n  )\n\n  // Start the reducer\n  const [reducerState, dispatch] = React.useReducer(reducer, undefined, () =>\n    reducer(initialState, { type: actions.init })\n  )\n\n  // Allow the user to control the final state with hooks\n  const state = reduceHooks(\n    [...getHooks().useControlledState, useControlledState],\n    reducerState,\n    { instance: getInstance() }\n  )\n\n  Object.assign(getInstance(), {\n    state,\n    dispatch,\n  })\n\n  // Decorate All the columns\n  const columns = React.useMemo(\n    () =>\n      linkColumnStructure(\n        reduceHooks(getHooks().columns, userColumns, {\n          instance: getInstance(),\n        })\n      ),\n    [\n      getHooks,\n      getInstance,\n      userColumns,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().columnsDeps, [], { instance: getInstance() }),\n    ]\n  )\n  getInstance().columns = columns\n\n  // Get the flat list of all columns and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let allColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().allColumns, flattenColumns(columns), {\n        instance: getInstance(),\n      }).map(assignColumnAccessor),\n    [\n      columns,\n      getHooks,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().allColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().allColumns = allColumns\n\n  // Access the row model using initial columns\n  const [rows, flatRows, rowsById] = React.useMemo(() => {\n    let rows = []\n    let flatRows = []\n    const rowsById = {}\n\n    const allColumnsQueue = [...allColumns]\n\n    while (allColumnsQueue.length) {\n      const column = allColumnsQueue.shift()\n      accessRowsForColumn({\n        data,\n        rows,\n        flatRows,\n        rowsById,\n        column,\n        getRowId,\n        getSubRows,\n        accessValueHooks: getHooks().accessValue,\n        getInstance,\n      })\n    }\n\n    return [rows, flatRows, rowsById]\n  }, [allColumns, data, getRowId, getSubRows, getHooks, getInstance])\n\n  Object.assign(getInstance(), {\n    rows,\n    initialRows: [...rows],\n    flatRows,\n    rowsById,\n    // materializedColumns,\n  })\n\n  loopHooks(getHooks().useInstanceAfterData, getInstance())\n\n  // Get the flat list of all columns AFTER the rows\n  // have been access, and allow hooks to decorate\n  // those columns (and trigger this memoization via deps)\n  let visibleColumns = React.useMemo(\n    () =>\n      reduceHooks(getHooks().visibleColumns, allColumns, {\n        instance: getInstance(),\n      }).map(d => decorateColumn(d, defaultColumn)),\n    [\n      getHooks,\n      allColumns,\n      getInstance,\n      defaultColumn,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().visibleColumnsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n\n  // Combine new visible columns with all columns\n  allColumns = React.useMemo(() => {\n    const columns = [...visibleColumns]\n\n    allColumns.forEach(column => {\n      if (!columns.find(d => d.id === column.id)) {\n        columns.push(column)\n      }\n    })\n\n    return columns\n  }, [allColumns, visibleColumns])\n  getInstance().allColumns = allColumns\n\n  if (process.env.NODE_ENV !== 'production') {\n    const duplicateColumns = allColumns.filter((column, i) => {\n      return allColumns.findIndex(d => d.id === column.id) !== i\n    })\n\n    if (duplicateColumns.length) {\n      console.info(allColumns)\n      throw new Error(\n        `Duplicate columns were found with ids: \"${duplicateColumns\n          .map(d => d.id)\n          .join(', ')}\" in the columns array above`\n      )\n    }\n  }\n\n  // Make the headerGroups\n  const headerGroups = React.useMemo(\n    () =>\n      reduceHooks(\n        getHooks().headerGroups,\n        makeHeaderGroups(visibleColumns, defaultColumn),\n        getInstance()\n      ),\n    [\n      getHooks,\n      visibleColumns,\n      defaultColumn,\n      getInstance,\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      ...reduceHooks(getHooks().headerGroupsDeps, [], {\n        instance: getInstance(),\n      }),\n    ]\n  )\n  getInstance().headerGroups = headerGroups\n\n  // Get the first level of headers\n  const headers = React.useMemo(\n    () => (headerGroups.length ? headerGroups[0].headers : []),\n    [headerGroups]\n  )\n  getInstance().headers = headers\n\n  // Provide a flat header list for utilities\n  getInstance().flatHeaders = headerGroups.reduce(\n    (all, headerGroup) => [...all, ...headerGroup.headers],\n    []\n  )\n\n  loopHooks(getHooks().useInstanceBeforeDimensions, getInstance())\n\n  // Filter columns down to visible ones\n  const visibleColumnsDep = visibleColumns\n    .filter(d => d.isVisible)\n    .map(d => d.id)\n    .sort()\n    .join('_')\n\n  visibleColumns = React.useMemo(\n    () => visibleColumns.filter(d => d.isVisible),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [visibleColumns, visibleColumnsDep]\n  )\n  getInstance().visibleColumns = visibleColumns\n\n  // Header Visibility is needed by this point\n  const [\n    totalColumnsMinWidth,\n    totalColumnsWidth,\n    totalColumnsMaxWidth,\n  ] = calculateHeaderWidths(headers)\n\n  getInstance().totalColumnsMinWidth = totalColumnsMinWidth\n  getInstance().totalColumnsWidth = totalColumnsWidth\n  getInstance().totalColumnsMaxWidth = totalColumnsMaxWidth\n\n  loopHooks(getHooks().useInstance, getInstance())\n\n  // Each materialized header needs to be assigned a render function and other\n  // prop getter properties here.\n  ;[...getInstance().flatHeaders, ...getInstance().allColumns].forEach(\n    column => {\n      // Give columns/headers rendering power\n      column.render = makeRenderer(getInstance(), column)\n\n      // Give columns/headers a default getHeaderProps\n      column.getHeaderProps = makePropGetter(getHooks().getHeaderProps, {\n        instance: getInstance(),\n        column,\n      })\n\n      // Give columns/headers a default getFooterProps\n      column.getFooterProps = makePropGetter(getHooks().getFooterProps, {\n        instance: getInstance(),\n        column,\n      })\n    }\n  )\n\n  getInstance().headerGroups = React.useMemo(\n    () =>\n      headerGroups.filter((headerGroup, i) => {\n        // Filter out any headers and headerGroups that don't have visible columns\n        headerGroup.headers = headerGroup.headers.filter(column => {\n          const recurse = headers =>\n            headers.filter(column => {\n              if (column.headers) {\n                return recurse(column.headers)\n              }\n              return column.isVisible\n            }).length\n          if (column.headers) {\n            return recurse(column.headers)\n          }\n          return column.isVisible\n        })\n\n        // Give headerGroups getRowProps\n        if (headerGroup.headers.length) {\n          headerGroup.getHeaderGroupProps = makePropGetter(\n            getHooks().getHeaderGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          headerGroup.getFooterGroupProps = makePropGetter(\n            getHooks().getFooterGroupProps,\n            { instance: getInstance(), headerGroup, index: i }\n          )\n\n          return true\n        }\n\n        return false\n      }),\n    [headerGroups, getInstance, getHooks]\n  )\n\n  getInstance().footerGroups = [...getInstance().headerGroups].reverse()\n\n  // The prepareRow function is absolutely necessary and MUST be called on\n  // any rows the user wishes to be displayed.\n\n  getInstance().prepareRow = React.useCallback(\n    row => {\n      row.getRowProps = makePropGetter(getHooks().getRowProps, {\n        instance: getInstance(),\n        row,\n      })\n\n      // Build the visible cells for each row\n      row.allCells = allColumns.map(column => {\n        const value = row.values[column.id]\n\n        const cell = {\n          column,\n          row,\n          value,\n        }\n\n        // Give each cell a getCellProps base\n        cell.getCellProps = makePropGetter(getHooks().getCellProps, {\n          instance: getInstance(),\n          cell,\n        })\n\n        // Give each cell a renderer function (supports multiple renderers)\n        cell.render = makeRenderer(getInstance(), column, {\n          row,\n          cell,\n          value,\n        })\n\n        return cell\n      })\n\n      row.cells = visibleColumns.map(column =>\n        row.allCells.find(cell => cell.column.id === column.id)\n      )\n\n      // need to apply any row specific hooks (useExpanded requires this)\n      loopHooks(getHooks().prepareRow, row, { instance: getInstance() })\n    },\n    [getHooks, getInstance, allColumns, visibleColumns]\n  )\n\n  getInstance().getTableProps = makePropGetter(getHooks().getTableProps, {\n    instance: getInstance(),\n  })\n\n  getInstance().getTableBodyProps = makePropGetter(\n    getHooks().getTableBodyProps,\n    {\n      instance: getInstance(),\n    }\n  )\n\n  loopHooks(getHooks().useFinalInstance, getInstance())\n\n  return getInstance()\n}\n\nfunction calculateHeaderWidths(headers, left = 0) {\n  let sumTotalMinWidth = 0\n  let sumTotalWidth = 0\n  let sumTotalMaxWidth = 0\n  let sumTotalFlexWidth = 0\n\n  headers.forEach(header => {\n    let { headers: subHeaders } = header\n\n    header.totalLeft = left\n\n    if (subHeaders && subHeaders.length) {\n      const [\n        totalMinWidth,\n        totalWidth,\n        totalMaxWidth,\n        totalFlexWidth,\n      ] = calculateHeaderWidths(subHeaders, left)\n      header.totalMinWidth = totalMinWidth\n      header.totalWidth = totalWidth\n      header.totalMaxWidth = totalMaxWidth\n      header.totalFlexWidth = totalFlexWidth\n    } else {\n      header.totalMinWidth = header.minWidth\n      header.totalWidth = Math.min(\n        Math.max(header.minWidth, header.width),\n        header.maxWidth\n      )\n      header.totalMaxWidth = header.maxWidth\n      header.totalFlexWidth = header.canResize ? header.totalWidth : 0\n    }\n    if (header.isVisible) {\n      left += header.totalWidth\n      sumTotalMinWidth += header.totalMinWidth\n      sumTotalWidth += header.totalWidth\n      sumTotalMaxWidth += header.totalMaxWidth\n      sumTotalFlexWidth += header.totalFlexWidth\n    }\n  })\n\n  return [sumTotalMinWidth, sumTotalWidth, sumTotalMaxWidth, sumTotalFlexWidth]\n}\n\nfunction accessRowsForColumn({\n  data,\n  rows,\n  flatRows,\n  rowsById,\n  column,\n  getRowId,\n  getSubRows,\n  accessValueHooks,\n  getInstance,\n}) {\n  // Access the row's data column-by-column\n  // We do it this way so we can incrementally add materialized\n  // columns after the first pass and avoid excessive looping\n  const accessRow = (originalRow, rowIndex, depth = 0, parent, parentRows) => {\n    // Keep the original reference around\n    const original = originalRow\n\n    const id = getRowId(originalRow, rowIndex, parent)\n\n    let row = rowsById[id]\n\n    // If the row hasn't been created, let's make it\n    if (!row) {\n      row = {\n        id,\n        original,\n        index: rowIndex,\n        depth,\n        cells: [{}], // This is a dummy cell\n      }\n\n      // Override common array functions (and the dummy cell's getCellProps function)\n      // to show an error if it is accessed without calling prepareRow\n      row.cells.map = unpreparedAccessWarning\n      row.cells.filter = unpreparedAccessWarning\n      row.cells.forEach = unpreparedAccessWarning\n      row.cells[0].getCellProps = unpreparedAccessWarning\n\n      // Create the cells and values\n      row.values = {}\n\n      // Push this row into the parentRows array\n      parentRows.push(row)\n      // Keep track of every row in a flat array\n      flatRows.push(row)\n      // Also keep track of every row by its ID\n      rowsById[id] = row\n\n      // Get the original subrows\n      row.originalSubRows = getSubRows(originalRow, rowIndex)\n\n      // Then recursively access them\n      if (row.originalSubRows) {\n        const subRows = []\n        row.originalSubRows.forEach((d, i) =>\n          accessRow(d, i, depth + 1, row, subRows)\n        )\n        // Keep the new subRows array on the row\n        row.subRows = subRows\n      }\n    } else if (row.subRows) {\n      // If the row exists, then it's already been accessed\n      // Keep recursing, but don't worry about passing the\n      // accumlator array (those rows already exist)\n      row.originalSubRows.forEach((d, i) => accessRow(d, i, depth + 1, row))\n    }\n\n    // If the column has an accessor, use it to get a value\n    if (column.accessor) {\n      row.values[column.id] = column.accessor(\n        originalRow,\n        rowIndex,\n        row,\n        parentRows,\n        data\n      )\n    }\n\n    // Allow plugins to manipulate the column value\n    row.values[column.id] = reduceHooks(\n      accessValueHooks,\n      row.values[column.id],\n      {\n        row,\n        column,\n        instance: getInstance(),\n      },\n      true\n    )\n  }\n\n  data.forEach((originalRow, rowIndex) =>\n    accessRow(originalRow, rowIndex, 0, undefined, rows)\n  )\n}\n","import React from 'react'\n\nimport { expandRows } from '../utils'\n\nimport {\n  useGetLatest,\n  actions,\n  useMountedLayoutEffect,\n  makePropGetter,\n  ensurePluginOrder,\n} from '../publicUtils'\n\n// Actions\nactions.resetExpanded = 'resetExpanded'\nactions.toggleRowExpanded = 'toggleRowExpanded'\nactions.toggleAllRowsExpanded = 'toggleAllRowsExpanded'\n\nexport const useExpanded = hooks => {\n  hooks.getToggleAllRowsExpandedProps = [defaultGetToggleAllRowsExpandedProps]\n  hooks.getToggleRowExpandedProps = [defaultGetToggleRowExpandedProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseExpanded.pluginName = 'useExpanded'\n\nconst defaultGetToggleAllRowsExpandedProps = (props, { instance }) => [\n  props,\n  {\n    onClick: e => {\n      instance.toggleAllRowsExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle All Rows Expanded',\n  },\n]\n\nconst defaultGetToggleRowExpandedProps = (props, { row }) => [\n  props,\n  {\n    onClick: () => {\n      row.toggleRowExpanded()\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    title: 'Toggle Row Expanded',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      expanded: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetExpanded) {\n    return {\n      ...state,\n      expanded: instance.initialState.expanded || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsExpanded) {\n    const { value } = action\n    const { isAllRowsExpanded, rowsById } = instance\n\n    const expandAll = typeof value !== 'undefined' ? value : !isAllRowsExpanded\n\n    if (expandAll) {\n      const expanded = {}\n\n      Object.keys(rowsById).forEach(rowId => {\n        expanded[rowId] = true\n      })\n\n      return {\n        ...state,\n        expanded,\n      }\n    }\n\n    return {\n      ...state,\n      expanded: {},\n    }\n  }\n\n  if (action.type === actions.toggleRowExpanded) {\n    const { id, value: setExpanded } = action\n    const exists = state.expanded[id]\n\n    const shouldExist =\n      typeof setExpanded !== 'undefined' ? setExpanded : !exists\n\n    if (!exists && shouldExist) {\n      return {\n        ...state,\n        expanded: {\n          ...state.expanded,\n          [id]: true,\n        },\n      }\n    } else if (exists && !shouldExist) {\n      const { [id]: _, ...rest } = state.expanded\n      return {\n        ...state,\n        expanded: rest,\n      }\n    } else {\n      return state\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    rowsById,\n    manualExpandedKey = 'expanded',\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    autoResetExpanded = true,\n    getHooks,\n    plugins,\n    state: { expanded },\n    dispatch,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useSortBy', 'useGroupBy', 'usePivotColumns', 'useGlobalFilter'],\n    'useExpanded'\n  )\n\n  const getAutoResetExpanded = useGetLatest(autoResetExpanded)\n\n  let isAllRowsExpanded = Boolean(\n    Object.keys(rowsById).length && Object.keys(expanded).length\n  )\n\n  if (isAllRowsExpanded) {\n    if (Object.keys(rowsById).some(id => !expanded[id])) {\n      isAllRowsExpanded = false\n    }\n  }\n\n  // Bypass any effects from firing when this changes\n  useMountedLayoutEffect(() => {\n    if (getAutoResetExpanded()) {\n      dispatch({ type: actions.resetExpanded })\n    }\n  }, [dispatch, data])\n\n  const toggleRowExpanded = React.useCallback(\n    (id, value) => {\n      dispatch({ type: actions.toggleRowExpanded, id, value })\n    },\n    [dispatch]\n  )\n\n  const toggleAllRowsExpanded = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsExpanded, value }),\n    [dispatch]\n  )\n\n  const expandedRows = React.useMemo(() => {\n    if (paginateExpandedRows) {\n      return expandRows(rows, { manualExpandedKey, expanded, expandSubRows })\n    }\n\n    return rows\n  }, [paginateExpandedRows, rows, manualExpandedKey, expanded, expandSubRows])\n\n  const expandedDepth = React.useMemo(() => findExpandedDepth(expanded), [\n    expanded,\n  ])\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsExpandedProps = makePropGetter(\n    getHooks().getToggleAllRowsExpandedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    preExpandedRows: rows,\n    expandedRows,\n    rows: expandedRows,\n    expandedDepth,\n    isAllRowsExpanded,\n    toggleRowExpanded,\n    toggleAllRowsExpanded,\n    getToggleAllRowsExpandedProps,\n  })\n}\n\nfunction prepareRow(row, { instance: { getHooks }, instance }) {\n  row.toggleRowExpanded = set => instance.toggleRowExpanded(row.id, set)\n\n  row.getToggleRowExpandedProps = makePropGetter(\n    getHooks().getToggleRowExpandedProps,\n    {\n      instance,\n      row,\n    }\n  )\n}\n\nfunction findExpandedDepth(expanded) {\n  let maxDepth = 0\n\n  Object.keys(expanded).forEach(id => {\n    const splitId = id.split('.')\n    maxDepth = Math.max(maxDepth, splitId.length)\n  })\n\n  return maxDepth\n}\n","export const text = (rows, ids, filterValue) => {\n  rows = rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return String(rowValue)\n        .toLowerCase()\n        .includes(String(filterValue).toLowerCase())\n    })\n  })\n  return rows\n}\n\ntext.autoRemove = val => !val\n\nexport const exactText = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue).toLowerCase() === String(filterValue).toLowerCase()\n        : true\n    })\n  })\n}\n\nexactText.autoRemove = val => !val\n\nexport const exactTextCase = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue !== undefined\n        ? String(rowValue) === String(filterValue)\n        : true\n    })\n  })\n}\n\nexactTextCase.autoRemove = val => !val\n\nexport const includes = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue.includes(filterValue)\n    })\n  })\n}\n\nincludes.autoRemove = val => !val || !val.length\n\nexport const includesAll = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.every(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesAll.autoRemove = val => !val || !val.length\n\nexport const includesSome = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return (\n        rowValue &&\n        rowValue.length &&\n        filterValue.some(val => rowValue.includes(val))\n      )\n    })\n  })\n}\n\nincludesSome.autoRemove = val => !val || !val.length\n\nexport const includesValue = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return filterValue.includes(rowValue)\n    })\n  })\n}\n\nincludesValue.autoRemove = val => !val || !val.length\n\nexport const exact = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue === filterValue\n    })\n  })\n}\n\nexact.autoRemove = val => typeof val === 'undefined'\n\nexport const equals = (rows, ids, filterValue) => {\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      // eslint-disable-next-line eqeqeq\n      return rowValue == filterValue\n    })\n  })\n}\n\nequals.autoRemove = val => val == null\n\nexport const between = (rows, ids, filterValue) => {\n  let [min, max] = filterValue || []\n\n  min = typeof min === 'number' ? min : -Infinity\n  max = typeof max === 'number' ? max : Infinity\n\n  if (min > max) {\n    const temp = min\n    min = max\n    max = temp\n  }\n\n  return rows.filter(row => {\n    return ids.some(id => {\n      const rowValue = row.values[id]\n      return rowValue >= min && rowValue <= max\n    })\n  })\n}\n\nbetween.autoRemove = val =>\n  !val || (typeof val[0] !== 'number' && typeof val[1] !== 'number')\n","import React from 'react'\n\nimport {\n  getFirstDefined,\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n} from '../utils'\n\nimport {\n  actions,\n  useGetLatest,\n  functionalUpdate,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetFilters = 'resetFilters'\nactions.setFilter = 'setFilter'\nactions.setAllFilters = 'setAllFilters'\n\nexport const useFilters = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseFilters.pluginName = 'useFilters'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      filters: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetFilters) {\n    return {\n      ...state,\n      filters: instance.initialState.filters || [],\n    }\n  }\n\n  if (action.type === actions.setFilter) {\n    const { columnId, filterValue } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    const column = allColumns.find(d => d.id === columnId)\n\n    if (!column) {\n      throw new Error(\n        `React-Table: Could not find a column with id: ${columnId}`\n      )\n    }\n\n    const filterMethod = getFilterMethod(\n      column.filter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const previousfilter = state.filters.find(d => d.id === columnId)\n\n    const newFilter = functionalUpdate(\n      filterValue,\n      previousfilter && previousfilter.value\n    )\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter, column)) {\n      return {\n        ...state,\n        filters: state.filters.filter(d => d.id !== columnId),\n      }\n    }\n\n    if (previousfilter) {\n      return {\n        ...state,\n        filters: state.filters.map(d => {\n          if (d.id === columnId) {\n            return { id: columnId, value: newFilter }\n          }\n          return d\n        }),\n      }\n    }\n\n    return {\n      ...state,\n      filters: [...state.filters, { id: columnId, value: newFilter }],\n    }\n  }\n\n  if (action.type === actions.setAllFilters) {\n    const { filters } = action\n    const { allColumns, filterTypes: userFilterTypes } = instance\n\n    return {\n      ...state,\n      // Filter out undefined values\n      filters: functionalUpdate(filters, state.filters).filter(filter => {\n        const column = allColumns.find(d => d.id === filter.id)\n        const filterMethod = getFilterMethod(\n          column.filter,\n          userFilterTypes || {},\n          filterTypes\n        )\n\n        if (\n          shouldAutoRemoveFilter(filterMethod.autoRemove, filter.value, column)\n        ) {\n          return false\n        }\n        return true\n      }),\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    manualFilters,\n    defaultCanFilter = false,\n    disableFilters,\n    state: { filters },\n    dispatch,\n    autoResetFilters = true,\n  } = instance\n\n  const setFilter = React.useCallback(\n    (columnId, filterValue) => {\n      dispatch({ type: actions.setFilter, columnId, filterValue })\n    },\n    [dispatch]\n  )\n\n  const setAllFilters = React.useCallback(\n    filters => {\n      dispatch({\n        type: actions.setAllFilters,\n        filters,\n      })\n    },\n    [dispatch]\n  )\n\n  allColumns.forEach(column => {\n    const {\n      id,\n      accessor,\n      defaultCanFilter: columnDefaultCanFilter,\n      disableFilters: columnDisableFilters,\n    } = column\n\n    // Determine if a column is filterable\n    column.canFilter = accessor\n      ? getFirstDefined(\n          columnDisableFilters === true ? false : undefined,\n          disableFilters === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(columnDefaultCanFilter, defaultCanFilter, false)\n\n    // Provide the column a way of updating the filter value\n    column.setFilter = val => setFilter(column.id, val)\n\n    // Provide the current filter value to the column for\n    // convenience\n    const found = filters.find(d => d.id === id)\n    column.filterValue = found && found.value\n  })\n\n  const [\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualFilters || !filters.length) {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    // Filters top level and nested rows\n    const filterRows = (rows, depth = 0) => {\n      let filteredRows = rows\n\n      filteredRows = filters.reduce(\n        (filteredSoFar, { id: columnId, value: filterValue }) => {\n          // Find the filters column\n          const column = allColumns.find(d => d.id === columnId)\n\n          if (!column) {\n            return filteredSoFar\n          }\n\n          if (depth === 0) {\n            column.preFilteredRows = filteredSoFar\n          }\n\n          const filterMethod = getFilterMethod(\n            column.filter,\n            userFilterTypes || {},\n            filterTypes\n          )\n\n          if (!filterMethod) {\n            console.warn(\n              `Could not find a valid 'column.filter' for column with the ID: ${column.id}.`\n            )\n            return filteredSoFar\n          }\n\n          // Pass the rows, id, filterValue and column to the filterMethod\n          // to get the filtered rows back\n          column.filteredRows = filterMethod(\n            filteredSoFar,\n            [columnId],\n            filterValue\n          )\n\n          return column.filteredRows\n        },\n        rows\n      )\n\n      // Apply the filter to any subRows\n      // We technically could do this recursively in the above loop,\n      // but that would severely hinder the API for the user, since they\n      // would be required to do that recursion in some scenarios\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n        if (!row.subRows) {\n          return\n        }\n\n        row.subRows =\n          row.subRows && row.subRows.length > 0\n            ? filterRows(row.subRows, depth + 1)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualFilters,\n    filters,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userFilterTypes,\n  ])\n\n  React.useMemo(() => {\n    // Now that each filtered column has it's partially filtered rows,\n    // lets assign the final filtered rows to all of the other columns\n    const nonFilteredColumns = allColumns.filter(\n      column => !filters.find(d => d.id === column.id)\n    )\n\n    // This essentially enables faceted filter options to be built easily\n    // using every column's preFilteredRows value\n    nonFilteredColumns.forEach(column => {\n      column.preFilteredRows = filteredRows\n      column.filteredRows = filteredRows\n    })\n  }, [filteredRows, filters, allColumns])\n\n  const getAutoResetFilters = useGetLatest(autoResetFilters)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetFilters()) {\n      dispatch({ type: actions.resetFilters })\n    }\n  }, [dispatch, manualFilters ? null : data])\n\n  Object.assign(instance, {\n    preFilteredRows: rows,\n    preFilteredFlatRows: flatRows,\n    preFilteredRowsById: rowsById,\n    filteredRows,\n    filteredFlatRows,\n    filteredRowsById,\n    rows: filteredRows,\n    flatRows: filteredFlatRows,\n    rowsById: filteredRowsById,\n    setFilter,\n    setAllFilters,\n  })\n}\n","import React from 'react'\n\nimport {\n  getFilterMethod,\n  shouldAutoRemoveFilter,\n  getFirstDefined,\n} from '../utils'\n\nimport {\n  actions,\n  useMountedLayoutEffect,\n  functionalUpdate,\n  useGetLatest,\n} from '../publicUtils'\n\nimport * as filterTypes from '../filterTypes'\n\n// Actions\nactions.resetGlobalFilter = 'resetGlobalFilter'\nactions.setGlobalFilter = 'setGlobalFilter'\n\nexport const useGlobalFilter = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseGlobalFilter.pluginName = 'useGlobalFilter'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.resetGlobalFilter) {\n    return {\n      ...state,\n      globalFilter: instance.initialState.globalFilter || undefined,\n    }\n  }\n\n  if (action.type === actions.setGlobalFilter) {\n    const { filterValue } = action\n    const { userFilterTypes } = instance\n\n    const filterMethod = getFilterMethod(\n      instance.globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    const newFilter = functionalUpdate(filterValue, state.globalFilter)\n\n    //\n    if (shouldAutoRemoveFilter(filterMethod.autoRemove, newFilter)) {\n      const { globalFilter, ...stateWithoutGlobalFilter } = state\n      return stateWithoutGlobalFilter\n    }\n\n    return {\n      ...state,\n      globalFilter: newFilter,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    filterTypes: userFilterTypes,\n    globalFilter,\n    manualGlobalFilter,\n    state: { globalFilter: globalFilterValue },\n    dispatch,\n    autoResetGlobalFilter = true,\n    disableGlobalFilter,\n  } = instance\n\n  const setGlobalFilter = React.useCallback(\n    filterValue => {\n      dispatch({ type: actions.setGlobalFilter, filterValue })\n    },\n    [dispatch]\n  )\n\n  // TODO: Create a filter cache for incremental high speed multi-filtering\n  // This gets pretty complicated pretty fast, since you have to maintain a\n  // cache for each row group (top-level rows, and each row's recursive subrows)\n  // This would make multi-filtering a lot faster though. Too far?\n\n  const [\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n  ] = React.useMemo(() => {\n    if (manualGlobalFilter || typeof globalFilterValue === 'undefined') {\n      return [rows, flatRows, rowsById]\n    }\n\n    const filteredFlatRows = []\n    const filteredRowsById = {}\n\n    const filterMethod = getFilterMethod(\n      globalFilter,\n      userFilterTypes || {},\n      filterTypes\n    )\n\n    if (!filterMethod) {\n      console.warn(`Could not find a valid 'globalFilter' option.`)\n      return rows\n    }\n\n    allColumns.forEach(column => {\n      const { disableGlobalFilter: columnDisableGlobalFilter } = column\n\n      column.canFilter = getFirstDefined(\n        columnDisableGlobalFilter === true ? false : undefined,\n        disableGlobalFilter === true ? false : undefined,\n        true\n      )\n    })\n\n    const filterableColumns = allColumns.filter(c => c.canFilter === true)\n\n    // Filters top level and nested rows\n    const filterRows = filteredRows => {\n      filteredRows = filterMethod(\n        filteredRows,\n        filterableColumns.map(d => d.id),\n        globalFilterValue\n      )\n\n      filteredRows.forEach(row => {\n        filteredFlatRows.push(row)\n        filteredRowsById[row.id] = row\n\n        row.subRows =\n          row.subRows && row.subRows.length\n            ? filterRows(row.subRows)\n            : row.subRows\n      })\n\n      return filteredRows\n    }\n\n    return [filterRows(rows), filteredFlatRows, filteredRowsById]\n  }, [\n    manualGlobalFilter,\n    globalFilterValue,\n    globalFilter,\n    userFilterTypes,\n    allColumns,\n    rows,\n    flatRows,\n    rowsById,\n    disableGlobalFilter,\n  ])\n\n  const getAutoResetGlobalFilter = useGetLatest(autoResetGlobalFilter)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGlobalFilter()) {\n      dispatch({ type: actions.resetGlobalFilter })\n    }\n  }, [dispatch, manualGlobalFilter ? null : data])\n\n  Object.assign(instance, {\n    preGlobalFilteredRows: rows,\n    preGlobalFilteredFlatRows: flatRows,\n    preGlobalFilteredRowsById: rowsById,\n    globalFilteredRows,\n    globalFilteredFlatRows,\n    globalFilteredRowsById,\n    rows: globalFilteredRows,\n    flatRows: globalFilteredFlatRows,\n    rowsById: globalFilteredRowsById,\n    setGlobalFilter,\n    disableGlobalFilter,\n  })\n}\n","export function sum(values, aggregatedValues) {\n  // It's faster to just add the aggregations together instead of\n  // process leaf nodes individually\n  return aggregatedValues.reduce(\n    (sum, next) => sum + (typeof next === 'number' ? next : 0),\n    0\n  )\n}\n\nexport function min(values) {\n  let min = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n    }\n  })\n\n  return min\n}\n\nexport function max(values) {\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      max = Math.max(max, value)\n    }\n  })\n\n  return max\n}\n\nexport function minMax(values) {\n  let min = values[0] || 0\n  let max = values[0] || 0\n\n  values.forEach(value => {\n    if (typeof value === 'number') {\n      min = Math.min(min, value)\n      max = Math.max(max, value)\n    }\n  })\n\n  return `${min}..${max}`\n}\n\nexport function average(values) {\n  return sum(null, values) / values.length\n}\n\nexport function median(values) {\n  if (!values.length) {\n    return null\n  }\n\n  const mid = Math.floor(values.length / 2)\n  const nums = [...values].sort((a, b) => a - b)\n  return values.length % 2 !== 0 ? nums[mid] : (nums[mid - 1] + nums[mid]) / 2\n}\n\nexport function unique(values) {\n  return Array.from(new Set(values).values())\n}\n\nexport function uniqueCount(values) {\n  return new Set(values).size\n}\n\nexport function count(values) {\n  return values.length\n}\n","import React from 'react'\n\nimport * as aggregations from '../aggregations'\n\nimport { getFirstDefined, flattenBy } from '../utils'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst emptyArray = []\nconst emptyObject = {}\n\n// Actions\nactions.resetGroupBy = 'resetGroupBy'\nactions.setGroupBy = 'setGroupBy'\nactions.toggleGroupBy = 'toggleGroupBy'\n\nexport const useGroupBy = hooks => {\n  hooks.getGroupByToggleProps = [defaultGetGroupByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => [\n    ...deps,\n    instance.state.groupBy,\n  ])\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseGroupBy.pluginName = 'useGroupBy'\n\nconst defaultGetGroupByToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canGroupBy\n      ? e => {\n          e.persist()\n          header.toggleGroupBy()\n        }\n      : undefined,\n    style: {\n      cursor: header.canGroupBy ? 'pointer' : undefined,\n    },\n    title: 'Toggle GroupBy',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      groupBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetGroupBy) {\n    return {\n      ...state,\n      groupBy: instance.initialState.groupBy || [],\n    }\n  }\n\n  if (action.type === actions.setGroupBy) {\n    const { value } = action\n    return {\n      ...state,\n      groupBy: value,\n    }\n  }\n\n  if (action.type === actions.toggleGroupBy) {\n    const { columnId, value: setGroupBy } = action\n\n    const resolvedGroupBy =\n      typeof setGroupBy !== 'undefined'\n        ? setGroupBy\n        : !state.groupBy.includes(columnId)\n\n    if (resolvedGroupBy) {\n      return {\n        ...state,\n        groupBy: [...state.groupBy, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      groupBy: state.groupBy.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { groupBy },\n    },\n  }\n) {\n  // Sort grouped columns to the start of the column list\n  // before the headers are built\n\n  const groupByColumns = groupBy\n    .map(g => columns.find(col => col.id === g))\n    .filter(Boolean)\n\n  const nonGroupByColumns = columns.filter(col => !groupBy.includes(col.id))\n\n  columns = [...groupByColumns, ...nonGroupByColumns]\n\n  columns.forEach(column => {\n    column.isGrouped = groupBy.includes(column.id)\n    column.groupedIndex = groupBy.indexOf(column.id)\n  })\n\n  return columns\n}\n\nconst defaultUserAggregations = {}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    flatHeaders,\n    groupByFn = defaultGroupByFn,\n    manualGroupBy,\n    aggregations: userAggregations = defaultUserAggregations,\n    plugins,\n    state: { groupBy },\n    dispatch,\n    autoResetGroupBy = true,\n    disableGroupBy,\n    defaultCanGroupBy,\n    getHooks,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useColumnOrder', 'useFilters'], 'useGroupBy')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultGroupBy: defaultColumnGroupBy,\n      disableGroupBy: columnDisableGroupBy,\n    } = column\n\n    column.canGroupBy = accessor\n      ? getFirstDefined(\n          column.canGroupBy,\n          columnDisableGroupBy === true ? false : undefined,\n          disableGroupBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canGroupBy,\n          defaultColumnGroupBy,\n          defaultCanGroupBy,\n          false\n        )\n\n    if (column.canGroupBy) {\n      column.toggleGroupBy = () => instance.toggleGroupBy(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const toggleGroupBy = React.useCallback(\n    (columnId, value) => {\n      dispatch({ type: actions.toggleGroupBy, columnId, value })\n    },\n    [dispatch]\n  )\n\n  const setGroupBy = React.useCallback(\n    value => {\n      dispatch({ type: actions.setGroupBy, value })\n    },\n    [dispatch]\n  )\n\n  flatHeaders.forEach(header => {\n    header.getGroupByToggleProps = makePropGetter(\n      getHooks().getGroupByToggleProps,\n      { instance: getInstance(), header }\n    )\n  })\n\n  const [\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n  ] = React.useMemo(() => {\n    if (manualGroupBy || !groupBy.length) {\n      return [\n        rows,\n        flatRows,\n        rowsById,\n        emptyArray,\n        emptyObject,\n        flatRows,\n        rowsById,\n      ]\n    }\n\n    // Ensure that the list of filtered columns exist\n    const existingGroupBy = groupBy.filter(g =>\n      allColumns.find(col => col.id === g)\n    )\n\n    // Find the columns that can or are aggregating\n    // Uses each column to aggregate rows into a single value\n    const aggregateRowsToValues = (leafRows, groupedRows, depth) => {\n      const values = {}\n\n      allColumns.forEach(column => {\n        // Don't aggregate columns that are in the groupBy\n        if (existingGroupBy.includes(column.id)) {\n          values[column.id] = groupedRows[0]\n            ? groupedRows[0].values[column.id]\n            : null\n          return\n        }\n\n        // Aggregate the values\n        let aggregateFn =\n          typeof column.aggregate === 'function'\n            ? column.aggregate\n            : userAggregations[column.aggregate] ||\n              aggregations[column.aggregate]\n\n        if (aggregateFn) {\n          // Get the columnValues to aggregate\n          const groupedValues = groupedRows.map(row => row.values[column.id])\n\n          // Get the columnValues to aggregate\n          const leafValues = leafRows.map(row => {\n            let columnValue = row.values[column.id]\n\n            if (!depth && column.aggregateValue) {\n              const aggregateValueFn =\n                typeof column.aggregateValue === 'function'\n                  ? column.aggregateValue\n                  : userAggregations[column.aggregateValue] ||\n                    aggregations[column.aggregateValue]\n\n              if (!aggregateValueFn) {\n                console.info({ column })\n                throw new Error(\n                  `React Table: Invalid column.aggregateValue option for column listed above`\n                )\n              }\n\n              columnValue = aggregateValueFn(columnValue, row, column)\n            }\n            return columnValue\n          })\n\n          values[column.id] = aggregateFn(leafValues, groupedValues)\n        } else if (column.aggregate) {\n          console.info({ column })\n          throw new Error(\n            `React Table: Invalid column.aggregate option for column listed above`\n          )\n        } else {\n          values[column.id] = null\n        }\n      })\n\n      return values\n    }\n\n    let groupedFlatRows = []\n    const groupedRowsById = {}\n    const onlyGroupedFlatRows = []\n    const onlyGroupedRowsById = {}\n    const nonGroupedFlatRows = []\n    const nonGroupedRowsById = {}\n\n    // Recursively group the data\n    const groupUpRecursively = (rows, depth = 0, parentId) => {\n      // This is the last level, just return the rows\n      if (depth === existingGroupBy.length) {\n        return rows\n      }\n\n      const columnId = existingGroupBy[depth]\n\n      // Group the rows together for this level\n      let rowGroupsMap = groupByFn(rows, columnId)\n\n      // Peform aggregations for each group\n      const aggregatedGroupedRows = Object.entries(rowGroupsMap).map(\n        ([groupByVal, groupedRows], index) => {\n          let id = `${columnId}:${groupByVal}`\n          id = parentId ? `${parentId}>${id}` : id\n\n          // First, Recurse to group sub rows before aggregation\n          const subRows = groupUpRecursively(groupedRows, depth + 1, id)\n\n          // Flatten the leaf rows of the rows in this group\n          const leafRows = depth\n            ? flattenBy(groupedRows, 'leafRows')\n            : groupedRows\n\n          const values = aggregateRowsToValues(leafRows, groupedRows, depth)\n\n          const row = {\n            id,\n            isGrouped: true,\n            groupByID: columnId,\n            groupByVal,\n            values,\n            subRows,\n            leafRows,\n            depth,\n            index,\n          }\n\n          subRows.forEach(subRow => {\n            groupedFlatRows.push(subRow)\n            groupedRowsById[subRow.id] = subRow\n            if (subRow.isGrouped) {\n              onlyGroupedFlatRows.push(subRow)\n              onlyGroupedRowsById[subRow.id] = subRow\n            } else {\n              nonGroupedFlatRows.push(subRow)\n              nonGroupedRowsById[subRow.id] = subRow\n            }\n          })\n\n          return row\n        }\n      )\n\n      return aggregatedGroupedRows\n    }\n\n    const groupedRows = groupUpRecursively(rows)\n\n    groupedRows.forEach(subRow => {\n      groupedFlatRows.push(subRow)\n      groupedRowsById[subRow.id] = subRow\n      if (subRow.isGrouped) {\n        onlyGroupedFlatRows.push(subRow)\n        onlyGroupedRowsById[subRow.id] = subRow\n      } else {\n        nonGroupedFlatRows.push(subRow)\n        nonGroupedRowsById[subRow.id] = subRow\n      }\n    })\n\n    // Assign the new data\n    return [\n      groupedRows,\n      groupedFlatRows,\n      groupedRowsById,\n      onlyGroupedFlatRows,\n      onlyGroupedRowsById,\n      nonGroupedFlatRows,\n      nonGroupedRowsById,\n    ]\n  }, [\n    manualGroupBy,\n    groupBy,\n    rows,\n    flatRows,\n    rowsById,\n    allColumns,\n    userAggregations,\n    groupByFn,\n  ])\n\n  const getAutoResetGroupBy = useGetLatest(autoResetGroupBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetGroupBy()) {\n      dispatch({ type: actions.resetGroupBy })\n    }\n  }, [dispatch, manualGroupBy ? null : data])\n\n  Object.assign(instance, {\n    preGroupedRows: rows,\n    preGroupedFlatRow: flatRows,\n    preGroupedRowsById: rowsById,\n    groupedRows,\n    groupedFlatRows,\n    groupedRowsById,\n    onlyGroupedFlatRows,\n    onlyGroupedRowsById,\n    nonGroupedFlatRows,\n    nonGroupedRowsById,\n    rows: groupedRows,\n    flatRows: groupedFlatRows,\n    rowsById: groupedRowsById,\n    toggleGroupBy,\n    setGroupBy,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the groupBy and the pivot cell for the row\n    cell.isGrouped = cell.column.isGrouped && cell.column.id === row.groupByID\n    // Placeholder cells are any columns in the groupBy that are not grouped\n    cell.isPlaceholder = !cell.isGrouped && cell.column.isGrouped\n    // Aggregated cells are not grouped, not repeated, but still have subRows\n    cell.isAggregated =\n      !cell.isGrouped && !cell.isPlaceholder && row.subRows?.length\n  })\n}\n\nexport function defaultGroupByFn(rows, columnId) {\n  return rows.reduce((prev, row, i) => {\n    // TODO: Might want to implement a key serializer here so\n    // irregular column values can still be grouped if needed?\n    const resKey = `${row.values[columnId]}`\n    prev[resKey] = Array.isArray(prev[resKey]) ? prev[resKey] : []\n    prev[resKey].push(row)\n    return prev\n  }, {})\n}\n","const reSplitAlphaNumeric = /([0-9]+)/gm\n\n// Mixed sorting is slow, but very inclusive of many edge cases.\n// It handles numbers, mixed alphanumeric combinations, and even\n// null, undefined, and Infinity\nexport const alphanumeric = (rowA, rowB, columnId) => {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  // Force to strings (or \"\" for unsupported types)\n  a = toString(a)\n  b = toString(b)\n\n  // Split on number groups, but keep the delimiter\n  // Then remove falsey split values\n  a = a.split(reSplitAlphaNumeric).filter(Boolean)\n  b = b.split(reSplitAlphaNumeric).filter(Boolean)\n\n  // While\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    const an = parseInt(aa, 10)\n    const bn = parseInt(bb, 10)\n\n    const combo = [an, bn].sort()\n\n    // Both are string\n    if (isNaN(combo[0])) {\n      if (aa > bb) {\n        return 1\n      }\n      if (bb > aa) {\n        return -1\n      }\n      continue\n    }\n\n    // One is a string, one is a number\n    if (isNaN(combo[1])) {\n      return isNaN(an) ? -1 : 1\n    }\n\n    // Both are numbers\n    if (an > bn) {\n      return 1\n    }\n    if (bn > an) {\n      return -1\n    }\n  }\n\n  return a.length - b.length\n}\nexport function datetime(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.getTime()\n  b = b.getTime()\n\n  return compareBasic(a, b)\n}\n\nexport function basic(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  return compareBasic(a, b)\n}\n\nexport function string(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  a = a.split('').filter(Boolean)\n  b = b.split('').filter(Boolean)\n\n  while (a.length && b.length) {\n    let aa = a.shift()\n    let bb = b.shift()\n\n    let alower = aa.toLowerCase()\n    let blower = bb.toLowerCase()\n\n    // Case insensitive comparison until characters match\n    if (alower > blower) {\n      return 1\n    }\n    if (blower > alower) {\n      return -1\n    }\n    // If lowercase characters are identical\n    if (aa > bb) {\n      return 1\n    }\n    if (bb > aa) {\n      return -1\n    }\n    continue\n  }\n\n  return a.length - b.length\n}\n\nexport function number(rowA, rowB, columnId) {\n  let [a, b] = getRowValuesByColumnID(rowA, rowB, columnId)\n\n  const replaceNonNumeric = /[^0-9.]/gi\n\n  a = Number(String(a).replace(replaceNonNumeric, ''))\n  b = Number(String(b).replace(replaceNonNumeric, ''))\n\n  return compareBasic(a, b)\n}\n\n// Utils\n\nfunction compareBasic(a, b) {\n  return a === b ? 0 : a > b ? 1 : -1\n}\n\nfunction getRowValuesByColumnID(row1, row2, columnId) {\n  return [row1.values[columnId], row2.values[columnId]]\n}\n\nfunction toString(a) {\n  if (typeof a === 'number') {\n    if (isNaN(a) || a === Infinity || a === -Infinity) {\n      return ''\n    }\n    return String(a)\n  }\n  if (typeof a === 'string') {\n    return a\n  }\n  return ''\n}\n","import React from 'react'\n\nimport {\n  actions,\n  ensurePluginOrder,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, isFunction } from '../utils'\n\nimport * as sortTypes from '../sortTypes'\n\n// Actions\nactions.resetSortBy = 'resetSortBy'\nactions.setSortBy = 'setSortBy'\nactions.toggleSortBy = 'toggleSortBy'\nactions.clearSortBy = 'clearSortBy'\n\ndefaultColumn.sortType = 'alphanumeric'\ndefaultColumn.sortDescFirst = false\n\nexport const useSortBy = hooks => {\n  hooks.getSortByToggleProps = [defaultGetSortByToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nuseSortBy.pluginName = 'useSortBy'\n\nconst defaultGetSortByToggleProps = (props, { instance, column }) => {\n  const { isMultiSortEvent = e => e.shiftKey } = instance\n\n  return [\n    props,\n    {\n      onClick: column.canSort\n        ? e => {\n            e.persist()\n            column.toggleSortBy(\n              undefined,\n              !instance.disableMultiSort && isMultiSortEvent(e)\n            )\n          }\n        : undefined,\n      style: {\n        cursor: column.canSort ? 'pointer' : undefined,\n      },\n      title: column.canSort ? 'Toggle SortBy' : undefined,\n    },\n  ]\n}\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      sortBy: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSortBy) {\n    return {\n      ...state,\n      sortBy: instance.initialState.sortBy || [],\n    }\n  }\n\n  if (action.type === actions.clearSortBy) {\n    const { sortBy } = state\n    const newSortBy = sortBy.filter(d => d.id !== action.columnId)\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n\n  if (action.type === actions.setSortBy) {\n    const { sortBy } = action\n    return {\n      ...state,\n      sortBy,\n    }\n  }\n\n  if (action.type === actions.toggleSortBy) {\n    const { columnId, desc, multi } = action\n\n    const {\n      allColumns,\n      disableMultiSort,\n      disableSortRemove,\n      disableMultiRemove,\n      maxMultiSortColCount = Number.MAX_SAFE_INTEGER,\n    } = instance\n\n    const { sortBy } = state\n\n    // Find the column for this columnId\n    const column = allColumns.find(d => d.id === columnId)\n    const { sortDescFirst } = column\n\n    // Find any existing sortBy for this column\n    const existingSortBy = sortBy.find(d => d.id === columnId)\n    const existingIndex = sortBy.findIndex(d => d.id === columnId)\n    const hasDescDefined = typeof desc !== 'undefined' && desc !== null\n\n    let newSortBy = []\n\n    // What should we do with this sort action?\n    let sortAction\n\n    if (!disableMultiSort && multi) {\n      if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'add'\n      }\n    } else {\n      // Normal mode\n      if (existingIndex !== sortBy.length - 1 || sortBy.length !== 1) {\n        sortAction = 'replace'\n      } else if (existingSortBy) {\n        sortAction = 'toggle'\n      } else {\n        sortAction = 'replace'\n      }\n    }\n\n    // Handle toggle states that will remove the sortBy\n    if (\n      sortAction === 'toggle' && // Must be toggling\n      !disableSortRemove && // If disableSortRemove, disable in general\n      !hasDescDefined && // Must not be setting desc\n      (multi ? !disableMultiRemove : true) && // If multi, don't allow if disableMultiRemove\n      ((existingSortBy && // Finally, detect if it should indeed be removed\n        existingSortBy.desc &&\n        !sortDescFirst) ||\n        (!existingSortBy.desc && sortDescFirst))\n    ) {\n      sortAction = 'remove'\n    }\n\n    if (sortAction === 'replace') {\n      newSortBy = [\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n    } else if (sortAction === 'add') {\n      newSortBy = [\n        ...sortBy,\n        {\n          id: columnId,\n          desc: hasDescDefined ? desc : sortDescFirst,\n        },\n      ]\n      // Take latest n columns\n      newSortBy.splice(0, newSortBy.length - maxMultiSortColCount)\n    } else if (sortAction === 'toggle') {\n      // This flips (or sets) the\n      newSortBy = sortBy.map(d => {\n        if (d.id === columnId) {\n          return {\n            ...d,\n            desc: hasDescDefined ? desc : !existingSortBy.desc,\n          }\n        }\n        return d\n      })\n    } else if (sortAction === 'remove') {\n      newSortBy = sortBy.filter(d => d.id !== columnId)\n    }\n\n    return {\n      ...state,\n      sortBy: newSortBy,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn = defaultOrderByFn,\n    sortTypes: userSortTypes,\n    manualSortBy,\n    defaultCanSort,\n    disableSortBy,\n    flatHeaders,\n    state: { sortBy },\n    dispatch,\n    plugins,\n    getHooks,\n    autoResetSortBy = true,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGlobalFilter', 'useGroupBy', 'usePivotColumns'],\n    'useSortBy'\n  )\n\n  const setSortBy = React.useCallback(\n    sortBy => {\n      dispatch({ type: actions.setSortBy, sortBy })\n    },\n    [dispatch]\n  )\n\n  // Updates sorting based on a columnId, desc flag and multi flag\n  const toggleSortBy = React.useCallback(\n    (columnId, desc, multi) => {\n      dispatch({ type: actions.toggleSortBy, columnId, desc, multi })\n    },\n    [dispatch]\n  )\n\n  // use reference to avoid memory leak in #1608\n  const getInstance = useGetLatest(instance)\n\n  // Add the getSortByToggleProps method to columns and headers\n  flatHeaders.forEach(column => {\n    const {\n      accessor,\n      canSort: defaultColumnCanSort,\n      disableSortBy: columnDisableSortBy,\n      id,\n    } = column\n\n    const canSort = accessor\n      ? getFirstDefined(\n          columnDisableSortBy === true ? false : undefined,\n          disableSortBy === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(defaultCanSort, defaultColumnCanSort, false)\n\n    column.canSort = canSort\n\n    if (column.canSort) {\n      column.toggleSortBy = (desc, multi) =>\n        toggleSortBy(column.id, desc, multi)\n\n      column.clearSortBy = () => {\n        dispatch({ type: actions.clearSortBy, columnId: column.id })\n      }\n    }\n\n    column.getSortByToggleProps = makePropGetter(\n      getHooks().getSortByToggleProps,\n      {\n        instance: getInstance(),\n        column,\n      }\n    )\n\n    const columnSort = sortBy.find(d => d.id === id)\n    column.isSorted = !!columnSort\n    column.sortedIndex = sortBy.findIndex(d => d.id === id)\n    column.isSortedDesc = column.isSorted ? columnSort.desc : undefined\n  })\n\n  const [sortedRows, sortedFlatRows] = React.useMemo(() => {\n    if (manualSortBy || !sortBy.length) {\n      return [rows, flatRows]\n    }\n\n    const sortedFlatRows = []\n\n    // Filter out sortBys that correspond to non existing columns\n    const availableSortBy = sortBy.filter(sort =>\n      allColumns.find(col => col.id === sort.id)\n    )\n\n    const sortData = rows => {\n      // Use the orderByFn to compose multiple sortBy's together.\n      // This will also perform a stable sorting using the row index\n      // if needed.\n      const sortedData = orderByFn(\n        rows,\n        availableSortBy.map(sort => {\n          // Support custom sorting methods for each column\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (!column) {\n            throw new Error(\n              `React-Table: Could not find a column with id: ${sort.id} while sorting`\n            )\n          }\n\n          const { sortType } = column\n\n          // Look up sortBy functions in this order:\n          // column function\n          // column string lookup on user sortType\n          // column string lookup on built-in sortType\n          // default function\n          // default string lookup on user sortType\n          // default string lookup on built-in sortType\n          const sortMethod =\n            isFunction(sortType) ||\n            (userSortTypes || {})[sortType] ||\n            sortTypes[sortType]\n\n          if (!sortMethod) {\n            throw new Error(\n              `React-Table: Could not find a valid sortType of '${sortType}' for column '${sort.id}'.`\n            )\n          }\n\n          // Return the correct sortFn.\n          // This function should always return in ascending order\n          return (a, b) => sortMethod(a, b, sort.id, sort.desc)\n        }),\n        // Map the directions\n        availableSortBy.map(sort => {\n          // Detect and use the sortInverted option\n          const column = allColumns.find(d => d.id === sort.id)\n\n          if (column && column.sortInverted) {\n            return sort.desc\n          }\n\n          return !sort.desc\n        })\n      )\n\n      // If there are sub-rows, sort them\n      sortedData.forEach(row => {\n        sortedFlatRows.push(row)\n        if (!row.subRows || row.subRows.length === 0) {\n          return\n        }\n        row.subRows = sortData(row.subRows)\n      })\n\n      return sortedData\n    }\n\n    return [sortData(rows), sortedFlatRows]\n  }, [\n    manualSortBy,\n    sortBy,\n    rows,\n    flatRows,\n    allColumns,\n    orderByFn,\n    userSortTypes,\n  ])\n\n  const getAutoResetSortBy = useGetLatest(autoResetSortBy)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSortBy()) {\n      dispatch({ type: actions.resetSortBy })\n    }\n  }, [manualSortBy ? null : data])\n\n  Object.assign(instance, {\n    preSortedRows: rows,\n    preSortedFlatRows: flatRows,\n    sortedRows,\n    sortedFlatRows,\n    rows: sortedRows,\n    flatRows: sortedFlatRows,\n    setSortBy,\n    toggleSortBy,\n  })\n}\n\nexport function defaultOrderByFn(arr, funcs, dirs) {\n  return [...arr].sort((rowA, rowB) => {\n    for (let i = 0; i < funcs.length; i += 1) {\n      const sortFn = funcs[i]\n      const desc = dirs[i] === false || dirs[i] === 'desc'\n      const sortInt = sortFn(rowA, rowB)\n      if (sortInt !== 0) {\n        return desc ? -sortInt : sortInt\n      }\n    }\n    return dirs[0] ? rowA.index - rowB.index : rowB.index - rowA.index\n  })\n}\n","import React from 'react'\n\n//\n\nimport {\n  actions,\n  ensurePluginOrder,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { expandRows } from '../utils'\n\nconst pluginName = 'usePagination'\n\n// Actions\nactions.resetPage = 'resetPage'\nactions.gotoPage = 'gotoPage'\nactions.setPageSize = 'setPageSize'\n\nexport const usePagination = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n}\n\nusePagination.pluginName = pluginName\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pageSize: 10,\n      pageIndex: 0,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPage) {\n    return {\n      ...state,\n      pageIndex: instance.initialState.pageIndex || 0,\n    }\n  }\n\n  if (action.type === actions.gotoPage) {\n    const { pageCount, page } = instance\n    const newPageIndex = functionalUpdate(action.pageIndex, state.pageIndex)\n    let canNavigate = false\n\n    if (newPageIndex > state.pageIndex) {\n      // next page\n      canNavigate =\n        pageCount === -1\n          ? page.length >= state.pageSize\n          : newPageIndex < pageCount\n    } else if (newPageIndex < state.pageIndex) {\n      // prev page\n      canNavigate = newPageIndex > -1\n    }\n\n    if (!canNavigate) {\n      return state\n    }\n\n    return {\n      ...state,\n      pageIndex: newPageIndex,\n    }\n  }\n\n  if (action.type === actions.setPageSize) {\n    const { pageSize } = action\n    const topRowIndex = state.pageSize * state.pageIndex\n    const pageIndex = Math.floor(topRowIndex / pageSize)\n\n    return {\n      ...state,\n      pageIndex,\n      pageSize,\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const {\n    rows,\n    autoResetPage = true,\n    manualExpandedKey = 'expanded',\n    plugins,\n    pageCount: userPageCount,\n    paginateExpandedRows = true,\n    expandSubRows = true,\n    state: {\n      pageSize,\n      pageIndex,\n      expanded,\n      globalFilter,\n      filters,\n      groupBy,\n      sortBy,\n    },\n    dispatch,\n    data,\n    manualPagination,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useGlobalFilter', 'useFilters', 'useGroupBy', 'useSortBy', 'useExpanded'],\n    'usePagination'\n  )\n\n  const getAutoResetPage = useGetLatest(autoResetPage)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPage()) {\n      dispatch({ type: actions.resetPage })\n    }\n  }, [\n    dispatch,\n    manualPagination ? null : data,\n    globalFilter,\n    filters,\n    groupBy,\n    sortBy,\n  ])\n\n  const pageCount = manualPagination\n    ? userPageCount\n    : Math.ceil(rows.length / pageSize)\n\n  const pageOptions = React.useMemo(\n    () =>\n      pageCount > 0\n        ? [...new Array(pageCount)].fill(null).map((d, i) => i)\n        : [],\n    [pageCount]\n  )\n\n  const page = React.useMemo(() => {\n    let page\n\n    if (manualPagination) {\n      page = rows\n    } else {\n      const pageStart = pageSize * pageIndex\n      const pageEnd = pageStart + pageSize\n\n      page = rows.slice(pageStart, pageEnd)\n    }\n\n    if (paginateExpandedRows) {\n      return page\n    }\n\n    return expandRows(page, { manualExpandedKey, expanded, expandSubRows })\n  }, [\n    expandSubRows,\n    expanded,\n    manualExpandedKey,\n    manualPagination,\n    pageIndex,\n    pageSize,\n    paginateExpandedRows,\n    rows,\n  ])\n\n  const canPreviousPage = pageIndex > 0\n  const canNextPage =\n    pageCount === -1 ? page.length >= pageSize : pageIndex < pageCount - 1\n\n  const gotoPage = React.useCallback(\n    pageIndex => {\n      dispatch({ type: actions.gotoPage, pageIndex })\n    },\n    [dispatch]\n  )\n\n  const previousPage = React.useCallback(() => {\n    return gotoPage(old => old - 1)\n  }, [gotoPage])\n\n  const nextPage = React.useCallback(() => {\n    return gotoPage(old => old + 1)\n  }, [gotoPage])\n\n  const setPageSize = React.useCallback(\n    pageSize => {\n      dispatch({ type: actions.setPageSize, pageSize })\n    },\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    pageOptions,\n    pageCount,\n    page,\n    canPreviousPage,\n    canNextPage,\n    gotoPage,\n    previousPage,\n    nextPage,\n    setPageSize,\n  })\n}\n","/* istanbul ignore file */\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nimport { flattenColumns, getFirstDefined } from '../utils'\n\n// Actions\nactions.resetPivot = 'resetPivot'\nactions.togglePivot = 'togglePivot'\n\nexport const _UNSTABLE_usePivotColumns = hooks => {\n  hooks.getPivotToggleProps = [defaultGetPivotToggleProps]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstanceAfterData.push(useInstanceAfterData)\n  hooks.allColumns.push(allColumns)\n  hooks.accessValue.push(accessValue)\n  hooks.materializedColumns.push(materializedColumns)\n  hooks.materializedColumnsDeps.push(materializedColumnsDeps)\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.visibleColumnsDeps.push(visibleColumnsDeps)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\n_UNSTABLE_usePivotColumns.pluginName = 'usePivotColumns'\n\nconst defaultPivotColumns = []\n\nconst defaultGetPivotToggleProps = (props, { header }) => [\n  props,\n  {\n    onClick: header.canPivot\n      ? e => {\n          e.persist()\n          header.togglePivot()\n        }\n      : undefined,\n    style: {\n      cursor: header.canPivot ? 'pointer' : undefined,\n    },\n    title: 'Toggle Pivot',\n  },\n]\n\n// Reducer\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      pivotColumns: defaultPivotColumns,\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetPivot) {\n    return {\n      ...state,\n      pivotColumns: instance.initialState.pivotColumns || defaultPivotColumns,\n    }\n  }\n\n  if (action.type === actions.togglePivot) {\n    const { columnId, value: setPivot } = action\n\n    const resolvedPivot =\n      typeof setPivot !== 'undefined'\n        ? setPivot\n        : !state.pivotColumns.includes(columnId)\n\n    if (resolvedPivot) {\n      return {\n        ...state,\n        pivotColumns: [...state.pivotColumns, columnId],\n      }\n    }\n\n    return {\n      ...state,\n      pivotColumns: state.pivotColumns.filter(d => d !== columnId),\n    }\n  }\n}\n\nfunction useInstanceAfterData(instance) {\n  instance.allColumns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n  })\n}\n\nfunction allColumns(columns, { instance }) {\n  columns.forEach(column => {\n    column.isPivotSource = instance.state.pivotColumns.includes(column.id)\n    column.uniqueValues = new Set()\n  })\n  return columns\n}\n\nfunction accessValue(value, { column }) {\n  if (column.uniqueValues && typeof value !== 'undefined') {\n    column.uniqueValues.add(value)\n  }\n  return value\n}\n\nfunction materializedColumns(materialized, { instance }) {\n  const { allColumns, state } = instance\n\n  if (!state.pivotColumns.length || !state.groupBy || !state.groupBy.length) {\n    return materialized\n  }\n\n  const pivotColumns = state.pivotColumns\n    .map(id => allColumns.find(d => d.id === id))\n    .filter(Boolean)\n\n  const sourceColumns = allColumns.filter(\n    d =>\n      !d.isPivotSource &&\n      !state.groupBy.includes(d.id) &&\n      !state.pivotColumns.includes(d.id)\n  )\n\n  const buildPivotColumns = (depth = 0, parent, pivotFilters = []) => {\n    const pivotColumn = pivotColumns[depth]\n\n    if (!pivotColumn) {\n      return sourceColumns.map(sourceColumn => {\n        // TODO: We could offer support here for renesting pivoted\n        // columns inside copies of their header groups. For now,\n        // that seems like it would be (1) overkill on nesting, considering\n        // you already get nesting for every pivot level and (2)\n        // really hard. :)\n\n        return {\n          ...sourceColumn,\n          canPivot: false,\n          isPivoted: true,\n          parent,\n          depth: depth,\n          id: `${parent ? `${parent.id}.${sourceColumn.id}` : sourceColumn.id}`,\n          accessor: (originalRow, i, row) => {\n            if (pivotFilters.every(filter => filter(row))) {\n              return row.values[sourceColumn.id]\n            }\n          },\n        }\n      })\n    }\n\n    const uniqueValues = Array.from(pivotColumn.uniqueValues).sort()\n\n    return uniqueValues.map(uniqueValue => {\n      const columnGroup = {\n        ...pivotColumn,\n        Header:\n          pivotColumn.PivotHeader || typeof pivotColumn.header === 'string'\n            ? `${pivotColumn.Header}: ${uniqueValue}`\n            : uniqueValue,\n        isPivotGroup: true,\n        parent,\n        depth,\n        id: parent\n          ? `${parent.id}.${pivotColumn.id}.${uniqueValue}`\n          : `${pivotColumn.id}.${uniqueValue}`,\n        pivotValue: uniqueValue,\n      }\n\n      columnGroup.columns = buildPivotColumns(depth + 1, columnGroup, [\n        ...pivotFilters,\n        row => row.values[pivotColumn.id] === uniqueValue,\n      ])\n\n      return columnGroup\n    })\n  }\n\n  const newMaterialized = flattenColumns(buildPivotColumns())\n\n  return [...materialized, ...newMaterialized]\n}\n\nfunction materializedColumnsDeps(\n  deps,\n  {\n    instance: {\n      state: { pivotColumns, groupBy },\n    },\n  }\n) {\n  return [...deps, pivotColumns, groupBy]\n}\n\nfunction visibleColumns(visibleColumns, { instance: { state } }) {\n  visibleColumns = visibleColumns.filter(d => !d.isPivotSource)\n\n  if (state.pivotColumns.length && state.groupBy && state.groupBy.length) {\n    visibleColumns = visibleColumns.filter(\n      column => column.isGrouped || column.isPivoted\n    )\n  }\n\n  return visibleColumns\n}\n\nfunction visibleColumnsDeps(deps, { instance }) {\n  return [...deps, instance.state.pivotColumns, instance.state.groupBy]\n}\n\nfunction useInstance(instance) {\n  const {\n    columns,\n    allColumns,\n    flatHeaders,\n    // pivotFn = defaultPivotFn,\n    // manualPivot,\n    getHooks,\n    plugins,\n    dispatch,\n    autoResetPivot = true,\n    manaulPivot,\n    disablePivot,\n    defaultCanPivot,\n  } = instance\n\n  ensurePluginOrder(plugins, ['useGroupBy'], 'usePivotColumns')\n\n  const getInstance = useGetLatest(instance)\n\n  allColumns.forEach(column => {\n    const {\n      accessor,\n      defaultPivot: defaultColumnPivot,\n      disablePivot: columnDisablePivot,\n    } = column\n\n    column.canPivot = accessor\n      ? getFirstDefined(\n          column.canPivot,\n          columnDisablePivot === true ? false : undefined,\n          disablePivot === true ? false : undefined,\n          true\n        )\n      : getFirstDefined(\n          column.canPivot,\n          defaultColumnPivot,\n          defaultCanPivot,\n          false\n        )\n\n    if (column.canPivot) {\n      column.togglePivot = () => instance.togglePivot(column.id)\n    }\n\n    column.Aggregated = column.Aggregated || column.Cell\n  })\n\n  const togglePivot = (columnId, value) => {\n    dispatch({ type: actions.togglePivot, columnId, value })\n  }\n\n  flatHeaders.forEach(header => {\n    header.getPivotToggleProps = makePropGetter(\n      getHooks().getPivotToggleProps,\n      {\n        instance: getInstance(),\n        header,\n      }\n    )\n  })\n\n  const getAutoResetPivot = useGetLatest(autoResetPivot)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetPivot()) {\n      dispatch({ type: actions.resetPivot })\n    }\n  }, [dispatch, manaulPivot ? null : columns])\n\n  Object.assign(instance, {\n    togglePivot,\n  })\n}\n\nfunction prepareRow(row) {\n  row.allCells.forEach(cell => {\n    // Grouped cells are in the pivotColumns and the pivot cell for the row\n    cell.isPivoted = cell.column.isPivoted\n  })\n}\n","import React from 'react'\n\nimport {\n  actions,\n  makePropGetter,\n  ensurePluginOrder,\n  useGetLatest,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nconst pluginName = 'useRowSelect'\n\n// Actions\nactions.resetSelectedRows = 'resetSelectedRows'\nactions.toggleAllRowsSelected = 'toggleAllRowsSelected'\nactions.toggleRowSelected = 'toggleRowSelected'\nactions.toggleAllPageRowsSelected = 'toggleAllPageRowsSelected'\n\nexport const useRowSelect = hooks => {\n  hooks.getToggleRowSelectedProps = [defaultGetToggleRowSelectedProps]\n  hooks.getToggleAllRowsSelectedProps = [defaultGetToggleAllRowsSelectedProps]\n  hooks.getToggleAllPageRowsSelectedProps = [\n    defaultGetToggleAllPageRowsSelectedProps,\n  ]\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowSelect.pluginName = pluginName\n\nconst defaultGetToggleRowSelectedProps = (props, { instance, row }) => {\n  const { manualRowSelectedKey = 'isSelected' } = instance\n  let checked = false\n\n  if (row.original && row.original[manualRowSelectedKey]) {\n    checked = true\n  } else {\n    checked = row.isSelected\n  }\n\n  return [\n    props,\n    {\n      onChange: e => {\n        row.toggleRowSelected(e.target.checked)\n      },\n      style: {\n        cursor: 'pointer',\n      },\n      checked,\n      title: 'Toggle Row Selected',\n      indeterminate: row.isSomeSelected,\n    },\n  ]\n}\n\nconst defaultGetToggleAllRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange: e => {\n      instance.toggleAllRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllRowsSelected,\n    title: 'Toggle All Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllRowsSelected &&\n        Object.keys(instance.state.selectedRowIds).length\n    ),\n  },\n]\n\nconst defaultGetToggleAllPageRowsSelectedProps = (props, { instance }) => [\n  props,\n  {\n    onChange(e) {\n      instance.toggleAllPageRowsSelected(e.target.checked)\n    },\n    style: {\n      cursor: 'pointer',\n    },\n    checked: instance.isAllPageRowsSelected,\n    title: 'Toggle All Current Page Rows Selected',\n    indeterminate: Boolean(\n      !instance.isAllPageRowsSelected &&\n        instance.page.some(({ id }) => instance.state.selectedRowIds[id])\n    ),\n  },\n]\n\n// eslint-disable-next-line max-params\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      selectedRowIds: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetSelectedRows) {\n    return {\n      ...state,\n      selectedRowIds: instance.initialState.selectedRowIds || {},\n    }\n  }\n\n  if (action.type === actions.toggleAllRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      isAllRowsSelected,\n      rowsById,\n      nonGroupedRowsById = rowsById,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllRowsSelected\n\n    // Only remove/add the rows that are visible on the screen\n    //  Leave all the other rows that are selected alone.\n    const selectedRowIds = Object.assign({}, state.selectedRowIds)\n\n    if (selectAll) {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        selectedRowIds[rowId] = true\n      })\n    } else {\n      Object.keys(nonGroupedRowsById).forEach(rowId => {\n        delete selectedRowIds[rowId]\n      })\n    }\n\n    return {\n      ...state,\n      selectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleRowSelected) {\n    const { id, value: setSelected } = action\n    const { rowsById, selectSubRows = true, getSubRows } = instance\n    const isSelected = state.selectedRowIds[id]\n    const shouldExist =\n      typeof setSelected !== 'undefined' ? setSelected : !isSelected\n\n    if (isSelected === shouldExist) {\n      return state\n    }\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (shouldExist) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    handleRowById(id)\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n\n  if (action.type === actions.toggleAllPageRowsSelected) {\n    const { value: setSelected } = action\n    const {\n      page,\n      rowsById,\n      selectSubRows = true,\n      isAllPageRowsSelected,\n      getSubRows,\n    } = instance\n\n    const selectAll =\n      typeof setSelected !== 'undefined' ? setSelected : !isAllPageRowsSelected\n\n    const newSelectedRowIds = { ...state.selectedRowIds }\n\n    const handleRowById = id => {\n      const row = rowsById[id]\n\n      if (!row.isGrouped) {\n        if (selectAll) {\n          newSelectedRowIds[id] = true\n        } else {\n          delete newSelectedRowIds[id]\n        }\n      }\n\n      if (selectSubRows && getSubRows(row)) {\n        return getSubRows(row).forEach(row => handleRowById(row.id))\n      }\n    }\n\n    page.forEach(row => handleRowById(row.id))\n\n    return {\n      ...state,\n      selectedRowIds: newSelectedRowIds,\n    }\n  }\n  return state\n}\n\nfunction useInstance(instance) {\n  const {\n    data,\n    rows,\n    getHooks,\n    plugins,\n    rowsById,\n    nonGroupedRowsById = rowsById,\n    autoResetSelectedRows = true,\n    state: { selectedRowIds },\n    selectSubRows = true,\n    dispatch,\n    page,\n    getSubRows,\n  } = instance\n\n  ensurePluginOrder(\n    plugins,\n    ['useFilters', 'useGroupBy', 'useSortBy', 'useExpanded', 'usePagination'],\n    'useRowSelect'\n  )\n\n  const selectedFlatRows = React.useMemo(() => {\n    const selectedFlatRows = []\n\n    rows.forEach(row => {\n      const isSelected = selectSubRows\n        ? getRowIsSelected(row, selectedRowIds, getSubRows)\n        : !!selectedRowIds[row.id]\n      row.isSelected = !!isSelected\n      row.isSomeSelected = isSelected === null\n\n      if (isSelected) {\n        selectedFlatRows.push(row)\n      }\n    })\n\n    return selectedFlatRows\n  }, [rows, selectSubRows, selectedRowIds, getSubRows])\n\n  let isAllRowsSelected = Boolean(\n    Object.keys(nonGroupedRowsById).length && Object.keys(selectedRowIds).length\n  )\n\n  let isAllPageRowsSelected = isAllRowsSelected\n\n  if (isAllRowsSelected) {\n    if (Object.keys(nonGroupedRowsById).some(id => !selectedRowIds[id])) {\n      isAllRowsSelected = false\n    }\n  }\n\n  if (!isAllRowsSelected) {\n    if (page && page.length && page.some(({ id }) => !selectedRowIds[id])) {\n      isAllPageRowsSelected = false\n    }\n  }\n\n  const getAutoResetSelectedRows = useGetLatest(autoResetSelectedRows)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetSelectedRows()) {\n      dispatch({ type: actions.resetSelectedRows })\n    }\n  }, [dispatch, data])\n\n  const toggleAllRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleAllPageRowsSelected = React.useCallback(\n    value => dispatch({ type: actions.toggleAllPageRowsSelected, value }),\n    [dispatch]\n  )\n\n  const toggleRowSelected = React.useCallback(\n    (id, value) => dispatch({ type: actions.toggleRowSelected, id, value }),\n    [dispatch]\n  )\n\n  const getInstance = useGetLatest(instance)\n\n  const getToggleAllRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  const getToggleAllPageRowsSelectedProps = makePropGetter(\n    getHooks().getToggleAllPageRowsSelectedProps,\n    { instance: getInstance() }\n  )\n\n  Object.assign(instance, {\n    selectedFlatRows,\n    isAllRowsSelected,\n    isAllPageRowsSelected,\n    toggleRowSelected,\n    toggleAllRowsSelected,\n    getToggleAllRowsSelectedProps,\n    getToggleAllPageRowsSelectedProps,\n    toggleAllPageRowsSelected,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  row.toggleRowSelected = set => instance.toggleRowSelected(row.id, set)\n\n  row.getToggleRowSelectedProps = makePropGetter(\n    instance.getHooks().getToggleRowSelectedProps,\n    { instance: instance, row }\n  )\n}\n\nfunction getRowIsSelected(row, selectedRowIds, getSubRows) {\n  if (selectedRowIds[row.id]) {\n    return true\n  }\n\n  const subRows = getSubRows(row)\n\n  if (subRows && subRows.length) {\n    let allChildrenSelected = true\n    let someSelected = false\n\n    subRows.forEach(subRow => {\n      // Bail out early if we know both of these\n      if (someSelected && !allChildrenSelected) {\n        return\n      }\n\n      if (getRowIsSelected(subRow, selectedRowIds, getSubRows)) {\n        someSelected = true\n      } else {\n        allChildrenSelected = false\n      }\n    })\n    return allChildrenSelected ? true : someSelected ? null : false\n  }\n\n  return false\n}\n","import React from 'react'\n\nimport {\n  actions,\n  functionalUpdate,\n  useMountedLayoutEffect,\n  useGetLatest,\n} from '../publicUtils'\n\nconst defaultInitialRowStateAccessor = row => ({})\nconst defaultInitialCellStateAccessor = cell => ({})\n\n// Actions\nactions.setRowState = 'setRowState'\nactions.setCellState = 'setCellState'\nactions.resetRowState = 'resetRowState'\n\nexport const useRowState = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.prepareRow.push(prepareRow)\n}\n\nuseRowState.pluginName = 'useRowState'\n\nfunction reducer(state, action, previousState, instance) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    rowsById,\n  } = instance\n\n  if (action.type === actions.init) {\n    return {\n      rowState: {},\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetRowState) {\n    return {\n      ...state,\n      rowState: instance.initialState.rowState || {},\n    }\n  }\n\n  if (action.type === actions.setRowState) {\n    const { rowId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: functionalUpdate(value, oldRowState),\n      },\n    }\n  }\n\n  if (action.type === actions.setCellState) {\n    const { rowId, columnId, value } = action\n\n    const oldRowState =\n      typeof state.rowState[rowId] !== 'undefined'\n        ? state.rowState[rowId]\n        : initialRowStateAccessor(rowsById[rowId])\n\n    const oldCellState =\n      typeof oldRowState?.cellState?.[columnId] !== 'undefined'\n        ? oldRowState.cellState[columnId]\n        : initialCellStateAccessor(\n            rowsById[rowId]?.cells?.find(cell => cell.column.id === columnId)\n          )\n\n    return {\n      ...state,\n      rowState: {\n        ...state.rowState,\n        [rowId]: {\n          ...oldRowState,\n          cellState: {\n            ...(oldRowState.cellState || {}),\n            [columnId]: functionalUpdate(value, oldCellState),\n          },\n        },\n      },\n    }\n  }\n}\n\nfunction useInstance(instance) {\n  const { autoResetRowState = true, data, dispatch } = instance\n\n  const setRowState = React.useCallback(\n    (rowId, value) =>\n      dispatch({\n        type: actions.setRowState,\n        rowId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const setCellState = React.useCallback(\n    (rowId, columnId, value) =>\n      dispatch({\n        type: actions.setCellState,\n        rowId,\n        columnId,\n        value,\n      }),\n    [dispatch]\n  )\n\n  const getAutoResetRowState = useGetLatest(autoResetRowState)\n\n  useMountedLayoutEffect(() => {\n    if (getAutoResetRowState()) {\n      dispatch({ type: actions.resetRowState })\n    }\n  }, [data])\n\n  Object.assign(instance, {\n    setRowState,\n    setCellState,\n  })\n}\n\nfunction prepareRow(row, { instance }) {\n  const {\n    initialRowStateAccessor = defaultInitialRowStateAccessor,\n    initialCellStateAccessor = defaultInitialCellStateAccessor,\n    state: { rowState },\n  } = instance\n\n  if (row) {\n    row.state =\n      typeof rowState[row.id] !== 'undefined'\n        ? rowState[row.id]\n        : initialRowStateAccessor(row)\n\n    row.setState = updater => {\n      return instance.setRowState(row.id, updater)\n    }\n\n    row.cells.forEach(cell => {\n      if (!row.state.cellState) {\n        row.state.cellState = {}\n      }\n\n      cell.state =\n        typeof row.state.cellState[cell.column.id] !== 'undefined'\n          ? row.state.cellState[cell.column.id]\n          : initialCellStateAccessor(cell)\n\n      cell.setState = updater => {\n        return instance.setCellState(row.id, cell.column.id, updater)\n      }\n    })\n  }\n}\n","import React from 'react'\n\nimport { functionalUpdate, actions } from '../publicUtils'\n\n// Actions\nactions.resetColumnOrder = 'resetColumnOrder'\nactions.setColumnOrder = 'setColumnOrder'\n\nexport const useColumnOrder = hooks => {\n  hooks.stateReducers.push(reducer)\n  hooks.visibleColumnsDeps.push((deps, { instance }) => {\n    return [...deps, instance.state.columnOrder]\n  })\n  hooks.visibleColumns.push(visibleColumns)\n  hooks.useInstance.push(useInstance)\n}\n\nuseColumnOrder.pluginName = 'useColumnOrder'\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === actions.init) {\n    return {\n      columnOrder: [],\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetColumnOrder) {\n    return {\n      ...state,\n      columnOrder: instance.initialState.columnOrder || [],\n    }\n  }\n\n  if (action.type === actions.setColumnOrder) {\n    return {\n      ...state,\n      columnOrder: functionalUpdate(action.columnOrder, state.columnOrder),\n    }\n  }\n}\n\nfunction visibleColumns(\n  columns,\n  {\n    instance: {\n      state: { columnOrder },\n    },\n  }\n) {\n  // If there is no order, return the normal columns\n  if (!columnOrder || !columnOrder.length) {\n    return columns\n  }\n\n  const columnOrderCopy = [...columnOrder]\n\n  // If there is an order, make a copy of the columns\n  const columnsCopy = [...columns]\n\n  // And make a new ordered array of the columns\n  const columnsInOrder = []\n\n  // Loop over the columns and place them in order into the new array\n  while (columnsCopy.length && columnOrderCopy.length) {\n    const targetColumnId = columnOrderCopy.shift()\n    const foundIndex = columnsCopy.findIndex(d => d.id === targetColumnId)\n    if (foundIndex > -1) {\n      columnsInOrder.push(columnsCopy.splice(foundIndex, 1)[0])\n    }\n  }\n\n  // If there are any columns left, add them to the end\n  return [...columnsInOrder, ...columnsCopy]\n}\n\nfunction useInstance(instance) {\n  const { dispatch } = instance\n\n  instance.setColumnOrder = React.useCallback(\n    columnOrder => {\n      return dispatch({ type: actions.setColumnOrder, columnOrder })\n    },\n    [dispatch]\n  )\n}\n","import React from 'react'\n\nimport {\n  actions,\n  defaultColumn,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n  useMountedLayoutEffect,\n} from '../publicUtils'\n\nimport { getFirstDefined, passiveEventSupported } from '../utils'\n\n// Default Column\ndefaultColumn.canResize = true\n\n// Actions\nactions.columnStartResizing = 'columnStartResizing'\nactions.columnResizing = 'columnResizing'\nactions.columnDoneResizing = 'columnDoneResizing'\nactions.resetResize = 'resetResize'\n\nexport const useResizeColumns = hooks => {\n  hooks.getResizerProps = [defaultGetResizerProps]\n  hooks.getHeaderProps.push({\n    style: {\n      position: 'relative',\n    },\n  })\n  hooks.stateReducers.push(reducer)\n  hooks.useInstance.push(useInstance)\n  hooks.useInstanceBeforeDimensions.push(useInstanceBeforeDimensions)\n}\n\nconst defaultGetResizerProps = (props, { instance, header }) => {\n  const { dispatch } = instance\n\n  const onResizeStart = (e, header) => {\n    let isTouchEvent = false\n    if (e.type === 'touchstart') {\n      // lets not respond to multiple touches (e.g. 2 or 3 fingers)\n      if (e.touches && e.touches.length > 1) {\n        return\n      }\n      isTouchEvent = true\n    }\n    const headersToResize = getLeafHeaders(header)\n    const headerIdWidths = headersToResize.map(d => [d.id, d.totalWidth])\n\n    const clientX = isTouchEvent ? Math.round(e.touches[0].clientX) : e.clientX\n\n    const dispatchMove = clientXPos => {\n      dispatch({ type: actions.columnResizing, clientX: clientXPos })\n    }\n    const dispatchEnd = () => dispatch({ type: actions.columnDoneResizing })\n\n    const handlersAndEvents = {\n      mouse: {\n        moveEvent: 'mousemove',\n        moveHandler: e => dispatchMove(e.clientX),\n        upEvent: 'mouseup',\n        upHandler: e => {\n          document.removeEventListener(\n            'mousemove',\n            handlersAndEvents.mouse.moveHandler\n          )\n          document.removeEventListener(\n            'mouseup',\n            handlersAndEvents.mouse.upHandler\n          )\n          dispatchEnd()\n        },\n      },\n      touch: {\n        moveEvent: 'touchmove',\n        moveHandler: e => {\n          if (e.cancelable) {\n            e.preventDefault()\n            e.stopPropagation()\n          }\n          dispatchMove(e.touches[0].clientX)\n          return false\n        },\n        upEvent: 'touchend',\n        upHandler: e => {\n          document.removeEventListener(\n            handlersAndEvents.touch.moveEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          document.removeEventListener(\n            handlersAndEvents.touch.upEvent,\n            handlersAndEvents.touch.moveHandler\n          )\n          dispatchEnd()\n        },\n      },\n    }\n\n    const events = isTouchEvent\n      ? handlersAndEvents.touch\n      : handlersAndEvents.mouse\n    const passiveIfSupported = passiveEventSupported()\n      ? { passive: false }\n      : false\n    document.addEventListener(\n      events.moveEvent,\n      events.moveHandler,\n      passiveIfSupported\n    )\n    document.addEventListener(\n      events.upEvent,\n      events.upHandler,\n      passiveIfSupported\n    )\n\n    dispatch({\n      type: actions.columnStartResizing,\n      columnId: header.id,\n      columnWidth: header.totalWidth,\n      headerIdWidths,\n      clientX,\n    })\n  }\n\n  return [\n    props,\n    {\n      onMouseDown: e => e.persist() || onResizeStart(e, header),\n      onTouchStart: e => e.persist() || onResizeStart(e, header),\n      style: {\n        cursor: 'col-resize',\n      },\n      draggable: false,\n      role: 'separator',\n    },\n  ]\n}\n\nuseResizeColumns.pluginName = 'useResizeColumns'\n\nfunction reducer(state, action) {\n  if (action.type === actions.init) {\n    return {\n      columnResizing: {\n        columnWidths: {},\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === actions.resetResize) {\n    return {\n      ...state,\n      columnResizing: {\n        columnWidths: {},\n      },\n    }\n  }\n\n  if (action.type === actions.columnStartResizing) {\n    const { clientX, columnId, columnWidth, headerIdWidths } = action\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: clientX,\n        headerIdWidths,\n        columnWidth,\n        isResizingColumn: columnId,\n      },\n    }\n  }\n\n  if (action.type === actions.columnResizing) {\n    const { clientX } = action\n    const { startX, columnWidth, headerIdWidths = [] } = state.columnResizing\n\n    const deltaX = clientX - startX\n    const percentageDeltaX = deltaX / columnWidth\n\n    const newColumnWidths = {}\n\n    headerIdWidths.forEach(([headerId, headerWidth]) => {\n      newColumnWidths[headerId] = Math.max(\n        headerWidth + headerWidth * percentageDeltaX,\n        0\n      )\n    })\n\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        columnWidths: {\n          ...state.columnResizing.columnWidths,\n          ...newColumnWidths,\n        },\n      },\n    }\n  }\n\n  if (action.type === actions.columnDoneResizing) {\n    return {\n      ...state,\n      columnResizing: {\n        ...state.columnResizing,\n        startX: null,\n        isResizingColumn: null,\n      },\n    }\n  }\n}\n\nconst useInstanceBeforeDimensions = instance => {\n  const {\n    flatHeaders,\n    disableResizing,\n    getHooks,\n    state: { columnResizing },\n  } = instance\n\n  const getInstance = useGetLatest(instance)\n\n  flatHeaders.forEach(header => {\n    const canResize = getFirstDefined(\n      header.disableResizing === true ? false : undefined,\n      disableResizing === true ? false : undefined,\n      true\n    )\n\n    header.canResize = canResize\n    header.width =\n      columnResizing.columnWidths[header.id] ||\n      header.originalWidth ||\n      header.width\n    header.isResizing = columnResizing.isResizingColumn === header.id\n\n    if (canResize) {\n      header.getResizerProps = makePropGetter(getHooks().getResizerProps, {\n        instance: getInstance(),\n        header,\n      })\n    }\n  })\n}\n\nfunction useInstance(instance) {\n  const { plugins, dispatch, autoResetResize = true, columns } = instance\n\n  ensurePluginOrder(plugins, ['useAbsoluteLayout'], 'useResizeColumns')\n\n  const getAutoResetResize = useGetLatest(autoResetResize)\n  useMountedLayoutEffect(() => {\n    if (getAutoResetResize()) {\n      dispatch({ type: actions.resetResize })\n    }\n  }, [columns])\n\n  const resetResizing = React.useCallback(\n    () => dispatch({ type: actions.resetResize }),\n    [dispatch]\n  )\n\n  Object.assign(instance, {\n    resetResizing,\n  })\n}\n\nfunction getLeafHeaders(header) {\n  const leafHeaders = []\n  const recurseHeader = header => {\n    if (header.columns && header.columns.length) {\n      header.columns.map(recurseHeader)\n    }\n    leafHeaders.push(header)\n  }\n  recurseHeader(header)\n  return leafHeaders\n}\n","const cellStyles = {\n  position: 'absolute',\n  top: 0,\n}\n\nexport const useAbsoluteLayout = hooks => {\n  hooks.getTableBodyProps.push(getRowStyles)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${cell.column.totalLeft}px`,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        left: `${column.totalLeft}px`,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseAbsoluteLayout.pluginName = 'useAbsoluteLayout'\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      position: 'relative',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n","const cellStyles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n}\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      width: `${instance.totalColumnsWidth}px`,\n    },\n  },\n]\n\nexport const useBlockLayout = hooks => {\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n\n  hooks.getHeaderProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getCellProps.push((props, { cell }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${cell.column.totalWidth}px`,\n      },\n    },\n  ])\n\n  hooks.getFooterProps.push((props, { column }) => [\n    props,\n    {\n      style: {\n        ...cellStyles,\n        width: `${column.totalWidth}px`,\n      },\n    },\n  ])\n}\n\nuseBlockLayout.pluginName = 'useBlockLayout'\n","export function useFlexLayout(hooks) {\n  hooks.getTableProps.push(getTableProps)\n  hooks.getRowProps.push(getRowStyles)\n  hooks.getHeaderGroupProps.push(getRowStyles)\n  hooks.getFooterGroupProps.push(getRowStyles)\n  hooks.getHeaderProps.push(getHeaderProps)\n  hooks.getCellProps.push(getCellProps)\n  hooks.getFooterProps.push(getFooterProps)\n}\n\nuseFlexLayout.pluginName = 'useFlexLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getRowStyles = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: 'flex',\n      flex: '1 0 auto',\n      minWidth: `${instance.totalColumnsMinWidth}px`,\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n\nconst getCellProps = (props, { cell }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: `${cell.column.totalFlexWidth} 0 auto`,\n      minWidth: `${cell.column.totalMinWidth}px`,\n      width: `${cell.column.totalWidth}px`,\n    },\n  },\n]\n\nconst getFooterProps = (props, { column }) => [\n  props,\n  {\n    style: {\n      boxSizing: 'border-box',\n      flex: column.totalFlexWidth\n        ? `${column.totalFlexWidth} 0 auto`\n        : undefined,\n      minWidth: `${column.totalMinWidth}px`,\n      width: `${column.totalWidth}px`,\n    },\n  },\n]\n","export function useGridLayout(hooks) {\n  hooks.stateReducers.push(reducer)\n  hooks.getTableProps.push(getTableProps)\n  hooks.getHeaderProps.push(getHeaderProps)\n}\n\nuseGridLayout.pluginName = 'useGridLayout'\n\nconst getTableProps = (props, { instance }) => [\n  props,\n  {\n    style: {\n      display: `grid`,\n      gridTemplateColumns: instance.state.gridLayout.columnWidths.map(w => w).join(` `),\n    },\n  },\n]\n\nconst getHeaderProps = (props, { column }) => [\n  props,\n  {\n    id: `header-cell-${column.id}`,\n    style: {\n      position: `sticky` //enables a scroll wrapper to be placed around the table and have sticky headers\n    },\n  },\n]\n\nfunction reducer(state, action, previousState, instance) {\n  if (action.type === `init`) {\n    return {\n      gridLayout: {\n        columnWidths: instance.columns.map(() => `auto`),\n      },\n      ...state,\n    }\n  }\n\n  if (action.type === `columnStartResizing`) {\n    const { columnId } = action\n    const columnIndex = instance.visibleColumns.findIndex(col => col.id === columnId)\n    const elWidth = getElementWidth(columnId)\n\n    if (elWidth !== undefined) {\n      return {\n        ...state,\n        gridLayout: {\n          ...state.gridLayout,\n          columnId,\n          columnIndex,\n          startingWidth: elWidth\n        },\n      }\n    } else {\n      return state\n    }\n  }\n\n  if (action.type === `columnResizing`) {\n    const {\n      columnIndex,\n      startingWidth,\n      columnWidths,\n    } = state.gridLayout\n\n    const change = state.columnResizing.startX - action.clientX\n    const newWidth = startingWidth - change\n    const columnWidthsCopy = [...columnWidths]\n    columnWidthsCopy[columnIndex] = `${newWidth}px`\n\n    return {\n      ...state,\n      gridLayout: {\n        ...state.gridLayout,\n        columnWidths: columnWidthsCopy,\n      },\n    }\n  }\n}\n\nfunction getElementWidth(columnId) {\n  const width = document.getElementById(`header-cell-${columnId}`)?.offsetWidth\n\n  if (width !== undefined) {\n    return width\n  }\n}"]},"metadata":{},"sourceType":"script"}