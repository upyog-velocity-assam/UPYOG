{"ast":null,"code":"import { isCancelable } from './retryer';\nexport function infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$state$data, _context$state$data2;\n        var fetchMore = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var newPageParams = oldPageParams; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        }; // Create function to fetch a page\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param\n          };\n          var cancelFn;\n          var queryFnResult = queryFn(queryFnContext);\n          if (queryFnResult.cancel) {\n            cancelFn = queryFnResult.cancel;\n          }\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n            return previous ? [page].concat(pages) : [].concat(pages, [page]);\n          });\n          if (cancelFn) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = cancelFn;\n          }\n          return promise;\n        };\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n          var manual = typeof pageParam !== 'undefined';\n          var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, manual, param);\n        } // Fetch previous page?\n        else if (isFetchingPreviousPage) {\n          var _manual = typeof pageParam !== 'undefined';\n          var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n          promise = fetchPage(oldPages, _manual, _param, true);\n        } // Refetch pages\n        else {\n          (function () {\n            newPageParams = [];\n            var manual = typeof context.options.getNextPageParam === 'undefined'; // Fetch first page\n\n            promise = fetchPage([], manual, oldPageParams[0]); // Fetch remaining pages\n\n            var _loop = function _loop(i) {\n              promise = promise.then(function (pages) {\n                var param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                return fetchPage(pages, manual, param);\n              });\n            };\n            for (var i = 1; i < oldPages.length; i++) {\n              _loop(i);\n            }\n          })();\n        }\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n        if (isCancelable(promise)) {\n          var finalPromiseAsAny = finalPromise;\n          finalPromiseAsAny.cancel = promise.cancel;\n        }\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}","map":{"version":3,"names":["isCancelable","infiniteQueryBehavior","onFetch","context","fetchFn","_context$fetchOptions","_context$fetchOptions2","_context$state$data","_context$state$data2","fetchMore","fetchOptions","meta","pageParam","isFetchingNextPage","direction","isFetchingPreviousPage","oldPages","state","data","pages","oldPageParams","pageParams","newPageParams","queryFn","options","Promise","reject","fetchPage","manual","param","previous","length","resolve","queryFnContext","queryKey","cancelFn","queryFnResult","cancel","promise","then","page","concat","promiseAsAny","getNextPageParam","_manual","_param","getPreviousPageParam","_loop","i","finalPromise","finalPromiseAsAny","hasNextPage","Array","isArray","nextPageParam","hasPreviousPage","previousPageParam"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/node_modules/react-query/es/core/infiniteQueryBehavior.js"],"sourcesContent":["import { isCancelable } from './retryer';\nexport function infiniteQueryBehavior() {\n  return {\n    onFetch: function onFetch(context) {\n      context.fetchFn = function () {\n        var _context$fetchOptions, _context$fetchOptions2, _context$state$data, _context$state$data2;\n\n        var fetchMore = (_context$fetchOptions = context.fetchOptions) == null ? void 0 : (_context$fetchOptions2 = _context$fetchOptions.meta) == null ? void 0 : _context$fetchOptions2.fetchMore;\n        var pageParam = fetchMore == null ? void 0 : fetchMore.pageParam;\n        var isFetchingNextPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'forward';\n        var isFetchingPreviousPage = (fetchMore == null ? void 0 : fetchMore.direction) === 'backward';\n        var oldPages = ((_context$state$data = context.state.data) == null ? void 0 : _context$state$data.pages) || [];\n        var oldPageParams = ((_context$state$data2 = context.state.data) == null ? void 0 : _context$state$data2.pageParams) || [];\n        var newPageParams = oldPageParams; // Get query function\n\n        var queryFn = context.options.queryFn || function () {\n          return Promise.reject('Missing queryFn');\n        }; // Create function to fetch a page\n\n\n        var fetchPage = function fetchPage(pages, manual, param, previous) {\n          if (typeof param === 'undefined' && !manual && pages.length) {\n            return Promise.resolve(pages);\n          }\n\n          var queryFnContext = {\n            queryKey: context.queryKey,\n            pageParam: param\n          };\n          var cancelFn;\n          var queryFnResult = queryFn(queryFnContext);\n\n          if (queryFnResult.cancel) {\n            cancelFn = queryFnResult.cancel;\n          }\n\n          var promise = Promise.resolve(queryFnResult).then(function (page) {\n            newPageParams = previous ? [param].concat(newPageParams) : [].concat(newPageParams, [param]);\n            return previous ? [page].concat(pages) : [].concat(pages, [page]);\n          });\n\n          if (cancelFn) {\n            var promiseAsAny = promise;\n            promiseAsAny.cancel = cancelFn;\n          }\n\n          return promise;\n        };\n\n        var promise; // Fetch first page?\n\n        if (!oldPages.length) {\n          promise = fetchPage([]);\n        } // Fetch next page?\n        else if (isFetchingNextPage) {\n            var manual = typeof pageParam !== 'undefined';\n            var param = manual ? pageParam : getNextPageParam(context.options, oldPages);\n            promise = fetchPage(oldPages, manual, param);\n          } // Fetch previous page?\n          else if (isFetchingPreviousPage) {\n              var _manual = typeof pageParam !== 'undefined';\n\n              var _param = _manual ? pageParam : getPreviousPageParam(context.options, oldPages);\n\n              promise = fetchPage(oldPages, _manual, _param, true);\n            } // Refetch pages\n            else {\n                (function () {\n                  newPageParams = [];\n                  var manual = typeof context.options.getNextPageParam === 'undefined'; // Fetch first page\n\n                  promise = fetchPage([], manual, oldPageParams[0]); // Fetch remaining pages\n\n                  var _loop = function _loop(i) {\n                    promise = promise.then(function (pages) {\n                      var param = manual ? oldPageParams[i] : getNextPageParam(context.options, pages);\n                      return fetchPage(pages, manual, param);\n                    });\n                  };\n\n                  for (var i = 1; i < oldPages.length; i++) {\n                    _loop(i);\n                  }\n                })();\n              }\n\n        var finalPromise = promise.then(function (pages) {\n          return {\n            pages: pages,\n            pageParams: newPageParams\n          };\n        });\n\n        if (isCancelable(promise)) {\n          var finalPromiseAsAny = finalPromise;\n          finalPromiseAsAny.cancel = promise.cancel;\n        }\n\n        return finalPromise;\n      };\n    }\n  };\n}\nexport function getNextPageParam(options, pages) {\n  return options.getNextPageParam == null ? void 0 : options.getNextPageParam(pages[pages.length - 1], pages);\n}\nexport function getPreviousPageParam(options, pages) {\n  return options.getPreviousPageParam == null ? void 0 : options.getPreviousPageParam(pages[0], pages);\n}\n/**\n * Checks if there is a next page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasNextPage(options, pages) {\n  if (options.getNextPageParam && Array.isArray(pages)) {\n    var nextPageParam = getNextPageParam(options, pages);\n    return typeof nextPageParam !== 'undefined' && nextPageParam !== null && nextPageParam !== false;\n  }\n}\n/**\n * Checks if there is a previous page.\n * Returns `undefined` if it cannot be determined.\n */\n\nexport function hasPreviousPage(options, pages) {\n  if (options.getPreviousPageParam && Array.isArray(pages)) {\n    var previousPageParam = getPreviousPageParam(options, pages);\n    return typeof previousPageParam !== 'undefined' && previousPageParam !== null && previousPageParam !== false;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}