{"ast":null,"code":"/*   method to check not null  if not returns false*/\nexport const checkForNotNull = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return value && value != null && value != undefined && value != \"\" ? true : false;\n};\nexport const convertDotValues = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && (value.replaceAll && value.replaceAll(\".\", \"_\") || value.replace && stringReplaceAll(value, \".\", \"_\")) || \"NA\";\n};\nexport const convertToLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let convertedValue = convertDotValues(value);\n  if (convertedValue == \"NA\") {\n    return \"PT_NA\";\n  }\n  return \"\".concat(key, \"_\").concat(convertedValue);\n};\nexport const getPropertyTypeLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return convertToLocale(value, \"COMMON_PROPTYPE\");\n};\nexport const getPropertyUsageTypeLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return convertToLocale(value, \"COMMON_PROPUSGTYPE\");\n};\nexport const getPropertySubUsageTypeLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return convertToLocale(value, \"COMMON_PROPSUBUSGTYPE\");\n};\nexport const getPropertyOccupancyTypeLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return convertToLocale(value, \"PROPERTYTAX_OCCUPANCYTYPE\");\n};\nexport const getMohallaLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let tenantId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let convertedValue = convertDotValues(tenantId);\n  if (convertedValue == \"NA\" || !checkForNotNull(value)) {\n    return \"PT_NA\";\n  }\n  convertedValue = convertedValue.toUpperCase();\n  return convertToLocale(value, \"\".concat(convertedValue, \"_REVENUE\"));\n};\nexport const getCityLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let convertedValue = convertDotValues(value);\n  if (convertedValue == \"NA\" || !checkForNotNull(value)) {\n    return \"PT_NA\";\n  }\n  convertedValue = convertedValue.toUpperCase();\n  return convertToLocale(convertedValue, \"TENANT_TENANTS\");\n};\nexport const getPropertyOwnerTypeLocale = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return convertToLocale(value, \"PROPERTYTAX_OWNERTYPE\");\n};\nexport const getFixedFilename = function () {\n  let filename = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n  if (filename.length <= size) {\n    return filename;\n  }\n  return \"\".concat(filename.substr(0, size), \"...\");\n};\nexport const shouldHideBackButton = function () {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return config.filter(key => window.location.href.includes(key.screenPath)).length > 0 ? true : false;\n};\n\n/*   style to keep the body height fixed across screens */\nexport const cardBodyStyle = {\n  // maxHeight: \"calc(100vh - 20em)\",\n  // overflowY: \"auto\",\n};\nexport const propertyCardBodyStyle = {\n  // maxHeight: \"calc(100vh - 10em)\",\n  // overflowY: \"auto\",\n};\nexport const setAddressDetails = data => {\n  var _address$city, _address$locality, _address$locality2;\n  let {\n    address\n  } = data;\n  let propAddress = {\n    ...address,\n    pincode: address === null || address === void 0 ? void 0 : address.pincode,\n    landmark: address === null || address === void 0 ? void 0 : address.landmark,\n    city: address === null || address === void 0 ? void 0 : (_address$city = address.city) === null || _address$city === void 0 ? void 0 : _address$city.name,\n    doorNo: address === null || address === void 0 ? void 0 : address.doorNo,\n    street: address === null || address === void 0 ? void 0 : address.street,\n    locality: {\n      code: (address === null || address === void 0 ? void 0 : (_address$locality = address.locality) === null || _address$locality === void 0 ? void 0 : _address$locality.code) || \"NA\",\n      area: address === null || address === void 0 ? void 0 : (_address$locality2 = address.locality) === null || _address$locality2 === void 0 ? void 0 : _address$locality2.name\n    }\n  };\n  data.address = propAddress;\n  return data;\n};\nexport const setOwnerDetails = data => {\n  const {\n    address,\n    owners\n  } = data;\n  let institution = {},\n    owner = [];\n  if (owners && owners.length > 0) {\n    var _data$ownershipCatego, _data$ownershipCatego2;\n    if ((data === null || data === void 0 ? void 0 : (_data$ownershipCatego = data.ownershipCategory) === null || _data$ownershipCatego === void 0 ? void 0 : _data$ownershipCatego.value) === \"INSTITUTIONALPRIVATE\" || (data === null || data === void 0 ? void 0 : (_data$ownershipCatego2 = data.ownershipCategory) === null || _data$ownershipCatego2 === void 0 ? void 0 : _data$ownershipCatego2.value) === \"INSTITUTIONALGOVERNMENT\") {\n      var _owners$, _owners$2, _owners$3, _address$city2, _owners$4, _owners$4$inistitutet, _owners$5, _owners$5$documents$p, _owners$8, _owners$9, _owners$10, _owners$11, _owners$12, _owners$13, _owners$14, _owners$15, _owners$15$ownerType;\n      institution.designation = (_owners$ = owners[0]) === null || _owners$ === void 0 ? void 0 : _owners$.designation;\n      institution.name = (_owners$2 = owners[0]) === null || _owners$2 === void 0 ? void 0 : _owners$2.inistitutionName;\n      institution.nameOfAuthorizedPerson = (_owners$3 = owners[0]) === null || _owners$3 === void 0 ? void 0 : _owners$3.name;\n      institution.tenantId = address === null || address === void 0 ? void 0 : (_address$city2 = address.city) === null || _address$city2 === void 0 ? void 0 : _address$city2.code;\n      institution.type = (_owners$4 = owners[0]) === null || _owners$4 === void 0 ? void 0 : (_owners$4$inistitutet = _owners$4.inistitutetype) === null || _owners$4$inistitutet === void 0 ? void 0 : _owners$4$inistitutet.value;\n      let document = [];\n      if ((_owners$5 = owners[0]) !== null && _owners$5 !== void 0 && (_owners$5$documents$p = _owners$5.documents[\"proofIdentity\"]) !== null && _owners$5$documents$p !== void 0 && _owners$5$documents$p.fileStoreId) {\n        var _owners$6, _owners$6$documents$p, _owners$7, _owners$7$documents$p, _owners$7$documents$p2;\n        document.push({\n          fileStoreId: ((_owners$6 = owners[0]) === null || _owners$6 === void 0 ? void 0 : (_owners$6$documents$p = _owners$6.documents[\"proofIdentity\"]) === null || _owners$6$documents$p === void 0 ? void 0 : _owners$6$documents$p.fileStoreId) || \"\",\n          documentType: ((_owners$7 = owners[0]) === null || _owners$7 === void 0 ? void 0 : (_owners$7$documents$p = _owners$7.documents[\"proofIdentity\"]) === null || _owners$7$documents$p === void 0 ? void 0 : (_owners$7$documents$p2 = _owners$7$documents$p.documentType) === null || _owners$7$documents$p2 === void 0 ? void 0 : _owners$7$documents$p2.code) || \"\"\n        });\n      }\n      owner.push({\n        altContactNumber: (_owners$8 = owners[0]) === null || _owners$8 === void 0 ? void 0 : _owners$8.altContactNumber,\n        correspondenceAddress: (_owners$9 = owners[0]) === null || _owners$9 === void 0 ? void 0 : _owners$9.permanentAddress,\n        designation: (_owners$10 = owners[0]) === null || _owners$10 === void 0 ? void 0 : _owners$10.designation,\n        emailId: (_owners$11 = owners[0]) === null || _owners$11 === void 0 ? void 0 : _owners$11.emailId,\n        isCorrespondenceAddress: (_owners$12 = owners[0]) === null || _owners$12 === void 0 ? void 0 : _owners$12.isCorrespondenceAddress,\n        mobileNumber: (_owners$13 = owners[0]) === null || _owners$13 === void 0 ? void 0 : _owners$13.mobileNumber,\n        name: (_owners$14 = owners[0]) === null || _owners$14 === void 0 ? void 0 : _owners$14.name,\n        ownerType: ((_owners$15 = owners[0]) === null || _owners$15 === void 0 ? void 0 : (_owners$15$ownerType = _owners$15.ownerType) === null || _owners$15$ownerType === void 0 ? void 0 : _owners$15$ownerType.code) || \"NONE\",\n        documents: document\n      });\n      data.institution = institution;\n      data.owners = owner;\n    } else {\n      owners.map(ownr => {\n        var _ownr$ownerType, _ownr$documents$proof, _ownr$gender, _ownr$ownerType2, _ownr$relationship;\n        let document = [];\n        if ((ownr === null || ownr === void 0 ? void 0 : (_ownr$ownerType = ownr.ownerType) === null || _ownr$ownerType === void 0 ? void 0 : _ownr$ownerType.code) != \"NONE\") {\n          var _ownr$documents$speci, _ownr$documents$speci2, _ownr$documents$speci3;\n          document.push({\n            fileStoreId: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$speci = ownr.documents[\"specialProofIdentity\"]) === null || _ownr$documents$speci === void 0 ? void 0 : _ownr$documents$speci.fileStoreId) || \"\",\n            documentType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$speci2 = ownr.documents[\"specialProofIdentity\"]) === null || _ownr$documents$speci2 === void 0 ? void 0 : (_ownr$documents$speci3 = _ownr$documents$speci2.documentType) === null || _ownr$documents$speci3 === void 0 ? void 0 : _ownr$documents$speci3.code) || \"\"\n          });\n        }\n        if (ownr !== null && ownr !== void 0 && (_ownr$documents$proof = ownr.documents[\"proofIdentity\"]) !== null && _ownr$documents$proof !== void 0 && _ownr$documents$proof.fileStoreId) {\n          var _ownr$documents$proof2, _ownr$documents$proof3, _ownr$documents$proof4;\n          document.push({\n            fileStoreId: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$proof2 = ownr.documents[\"proofIdentity\"]) === null || _ownr$documents$proof2 === void 0 ? void 0 : _ownr$documents$proof2.fileStoreId) || \"\",\n            documentType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$documents$proof3 = ownr.documents[\"proofIdentity\"]) === null || _ownr$documents$proof3 === void 0 ? void 0 : (_ownr$documents$proof4 = _ownr$documents$proof3.documentType) === null || _ownr$documents$proof4 === void 0 ? void 0 : _ownr$documents$proof4.code) || \"\"\n          });\n        }\n        owner.push({\n          emailId: ownr === null || ownr === void 0 ? void 0 : ownr.emailId,\n          fatherOrHusbandName: ownr === null || ownr === void 0 ? void 0 : ownr.fatherOrHusbandName,\n          gender: ownr === null || ownr === void 0 ? void 0 : (_ownr$gender = ownr.gender) === null || _ownr$gender === void 0 ? void 0 : _ownr$gender.value,\n          isCorrespondenceAddress: ownr === null || ownr === void 0 ? void 0 : ownr.isCorrespondenceAddress,\n          mobileNumber: ownr === null || ownr === void 0 ? void 0 : ownr.mobileNumber,\n          name: ownr === null || ownr === void 0 ? void 0 : ownr.name,\n          ownerType: (ownr === null || ownr === void 0 ? void 0 : (_ownr$ownerType2 = ownr.ownerType) === null || _ownr$ownerType2 === void 0 ? void 0 : _ownr$ownerType2.code) || \"NONE\",\n          permanentAddress: ownr === null || ownr === void 0 ? void 0 : ownr.permanentAddress,\n          relationship: ownr === null || ownr === void 0 ? void 0 : (_ownr$relationship = ownr.relationship) === null || _ownr$relationship === void 0 ? void 0 : _ownr$relationship.code,\n          documents: document\n        });\n      });\n      data.owners = owner;\n    }\n  }\n  return data;\n};\nexport const setDocumentDetails = data => {\n  var _address$documents$Pr;\n  const {\n    address,\n    owners\n  } = data;\n  let documents = [];\n  if (address !== null && address !== void 0 && (_address$documents$Pr = address.documents[\"ProofOfAddress\"]) !== null && _address$documents$Pr !== void 0 && _address$documents$Pr.id) {\n    var _address$documents$Pr2, _address$documents$Pr3, _address$documents$Pr4, _address$documents$Pr5, _address$documents$Pr6;\n    documents.push({\n      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr2 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr2 === void 0 ? void 0 : _address$documents$Pr2.fileStoreId) || \"\",\n      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr3 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr3 === void 0 ? void 0 : (_address$documents$Pr4 = _address$documents$Pr3.documentType) === null || _address$documents$Pr4 === void 0 ? void 0 : _address$documents$Pr4.code) || \"\",\n      id: (address === null || address === void 0 ? void 0 : (_address$documents$Pr5 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr5 === void 0 ? void 0 : _address$documents$Pr5.id) || \"\",\n      status: (address === null || address === void 0 ? void 0 : (_address$documents$Pr6 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr6 === void 0 ? void 0 : _address$documents$Pr6.status) || \"\"\n    });\n  } else {\n    var _address$documents$Pr7, _address$documents$Pr8, _address$documents$Pr9;\n    documents.push({\n      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr7 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr7 === void 0 ? void 0 : _address$documents$Pr7.fileStoreId) || \"\",\n      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr8 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr8 === void 0 ? void 0 : (_address$documents$Pr9 = _address$documents$Pr8.documentType) === null || _address$documents$Pr9 === void 0 ? void 0 : _address$documents$Pr9.code) || \"\"\n    });\n  }\n  owners && owners.length > 0 && owners.map(owner => {\n    if (owner.documents && owner.documents[\"proofIdentity\"]) {\n      var _owner$documents$proo;\n      if (owner !== null && owner !== void 0 && (_owner$documents$proo = owner.documents[\"proofIdentity\"]) !== null && _owner$documents$proo !== void 0 && _owner$documents$proo.id) {\n        var _owner$documents$proo2, _owner$documents$proo3, _owner$documents$proo4;\n        documents.push({\n          fileStoreId: (owner === null || owner === void 0 ? void 0 : owner.documents[\"proofIdentity\"].fileStoreId) || \"\",\n          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo2 = owner.documents[\"proofIdentity\"].documentType) === null || _owner$documents$proo2 === void 0 ? void 0 : _owner$documents$proo2.code) || \"\",\n          id: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo3 = owner.documents[\"proofIdentity\"]) === null || _owner$documents$proo3 === void 0 ? void 0 : _owner$documents$proo3.id) || \"\",\n          status: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo4 = owner.documents[\"proofIdentity\"]) === null || _owner$documents$proo4 === void 0 ? void 0 : _owner$documents$proo4.status) || \"\"\n        });\n      } else {\n        var _owner$documents$proo5;\n        documents.push({\n          fileStoreId: (owner === null || owner === void 0 ? void 0 : owner.documents[\"proofIdentity\"].fileStoreId) || \"\",\n          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$proo5 = owner.documents[\"proofIdentity\"].documentType) === null || _owner$documents$proo5 === void 0 ? void 0 : _owner$documents$proo5.code) || \"\"\n        });\n      }\n    }\n    if (owner.documents && owner.documents[\"specialProofIdentity\"]) {\n      var _owner$documents$spec;\n      if (owner !== null && owner !== void 0 && (_owner$documents$spec = owner.documents[\"specialProofIdentity\"]) !== null && _owner$documents$spec !== void 0 && _owner$documents$spec.id) {\n        var _owner$documents$spec2, _owner$documents$spec3, _owner$documents$spec4, _owner$documents$spec5, _owner$documents$spec6;\n        documents.push({\n          fileStoreId: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec2 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec2 === void 0 ? void 0 : _owner$documents$spec2.fileStoreId) || \"\",\n          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec3 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec3 === void 0 ? void 0 : (_owner$documents$spec4 = _owner$documents$spec3.documentType) === null || _owner$documents$spec4 === void 0 ? void 0 : _owner$documents$spec4.code) || \"\",\n          id: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec5 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec5 === void 0 ? void 0 : _owner$documents$spec5.id) || \"\",\n          status: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec6 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec6 === void 0 ? void 0 : _owner$documents$spec6.status) || \"\"\n        });\n      } else {\n        var _owner$documents$spec7, _owner$documents$spec8, _owner$documents$spec9;\n        documents.push({\n          fileStoreId: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec7 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec7 === void 0 ? void 0 : _owner$documents$spec7.fileStoreId) || \"\",\n          documentType: (owner === null || owner === void 0 ? void 0 : (_owner$documents$spec8 = owner.documents[\"specialProofIdentity\"]) === null || _owner$documents$spec8 === void 0 ? void 0 : (_owner$documents$spec9 = _owner$documents$spec8.documentType) === null || _owner$documents$spec9 === void 0 ? void 0 : _owner$documents$spec9.code) || \"\"\n        });\n      }\n    }\n  });\n  data.documents = documents;\n  return data;\n};\nconst getUsageType = data => {\n  var _data$isResdential;\n  if ((data === null || data === void 0 ? void 0 : (_data$isResdential = data.isResdential) === null || _data$isResdential === void 0 ? void 0 : _data$isResdential.code) == \"RESIDENTIAL\") {\n    var _data$isResdential2;\n    return data === null || data === void 0 ? void 0 : (_data$isResdential2 = data.isResdential) === null || _data$isResdential2 === void 0 ? void 0 : _data$isResdential2.code;\n  } else {\n    var _data$usageCategoryMa;\n    return data === null || data === void 0 ? void 0 : (_data$usageCategoryMa = data.usageCategoryMajor) === null || _data$usageCategoryMa === void 0 ? void 0 : _data$usageCategoryMa.code;\n  }\n};\nconst getFloorNumber = data => {\n  var _data$Floorno;\n  let floorcode = data === null || data === void 0 ? void 0 : (_data$Floorno = data.Floorno) === null || _data$Floorno === void 0 ? void 0 : _data$Floorno.i18nKey;\n  if (floorcode.charAt(floorcode.length - 3) === \"_\" && floorcode.charAt(floorcode.length - 2) === \"_\") {\n    return \"-\" + floorcode.charAt(floorcode.length - 1);\n  } else {\n    if (floorcode.charAt(floorcode.length - 2) !== \"_\") {\n      return floorcode.charAt(floorcode.length - 2) + floorcode.charAt(floorcode.length - 1);\n    } else {\n      return floorcode.charAt(floorcode.length - 1);\n    }\n  }\n};\nexport const getSuperBuiltUparea = data => {\n  var _data$selfOccupied;\n  let builtUpArea;\n  if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied = data.selfOccupied) === null || _data$selfOccupied === void 0 ? void 0 : _data$selfOccupied.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\") {\n    var _data$floordetails;\n    builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails = data.floordetails) === null || _data$floordetails === void 0 ? void 0 : _data$floordetails.builtUpArea);\n  } else {\n    var _data$selfOccupied2;\n    if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied2 = data.selfOccupied) === null || _data$selfOccupied2 === void 0 ? void 0 : _data$selfOccupied2.i18nKey) === \"PT_PARTIALLY_RENTED_OUT\") {\n      var _data$landarea, _data$Constructiondet;\n      builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$landarea = data.landarea) === null || _data$landarea === void 0 ? void 0 : _data$landarea.floorarea) + parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet = data.Constructiondetails) === null || _data$Constructiondet === void 0 ? void 0 : _data$Constructiondet.RentArea);\n    } else {\n      var _data$Constructiondet2;\n      builtUpArea = parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet2 = data.Constructiondetails) === null || _data$Constructiondet2 === void 0 ? void 0 : _data$Constructiondet2.RentArea);\n    }\n    if ((data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === \"PT_COMMON_YES\") {\n      var _data$UnOccupiedArea;\n      builtUpArea = builtUpArea + parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea = data.UnOccupiedArea) === null || _data$UnOccupiedArea === void 0 ? void 0 : _data$UnOccupiedArea.UnOccupiedArea);\n    }\n  }\n  return builtUpArea;\n};\nexport const getSuperBuiltUpareafromob = data => {\n  let builtuparea = 0;\n  data === null || data === void 0 ? void 0 : data.units.map(unit => {\n    var _unit$constructionDet;\n    builtuparea = builtuparea + (unit === null || unit === void 0 ? void 0 : (_unit$constructionDet = unit.constructionDetail) === null || _unit$constructionDet === void 0 ? void 0 : _unit$constructionDet.builtUpArea);\n  });\n  return builtuparea;\n};\nexport const getnumberoffloors = data => {\n  var _data$units, _data$noOofBasements, _data$noOofBasements2;\n  let unitlenght = data === null || data === void 0 ? void 0 : (_data$units = data.units) === null || _data$units === void 0 ? void 0 : _data$units.length;\n  if ((data === null || data === void 0 ? void 0 : (_data$noOofBasements = data.noOofBasements) === null || _data$noOofBasements === void 0 ? void 0 : _data$noOofBasements.i18nKey) === \"PT_ONE_BASEMENT_OPTION\") {\n    return parseInt(unitlenght) + 1;\n  } else if ((data === null || data === void 0 ? void 0 : (_data$noOofBasements2 = data.noOofBasements) === null || _data$noOofBasements2 === void 0 ? void 0 : _data$noOofBasements2.i18nKey) === \"PT_TWO_BASEMENT_OPTION\") {\n    return parseInt(unitlenght) + 2;\n  }\n  return parseInt(unitlenght);\n};\nexport const getusageCategory = (data, i) => {\n  var _data$isResdential3, _data$usageCategoryMa2;\n  if ((data === null || data === void 0 ? void 0 : (_data$isResdential3 = data.isResdential) === null || _data$isResdential3 === void 0 ? void 0 : _data$isResdential3.i18nKey) === \"PT_COMMON_YES\") {\n    var _data$isResdential4;\n    return data === null || data === void 0 ? void 0 : (_data$isResdential4 = data.isResdential) === null || _data$isResdential4 === void 0 ? void 0 : _data$isResdential4.code;\n  } else if ((data === null || data === void 0 ? void 0 : (_data$usageCategoryMa2 = data.usageCategoryMajor) === null || _data$usageCategoryMa2 === void 0 ? void 0 : _data$usageCategoryMa2.code) === \"NONRESIDENTIAL.OTHERS\") {\n    var _data$isResdential5;\n    return data === null || data === void 0 ? void 0 : (_data$isResdential5 = data.isResdential) === null || _data$isResdential5 === void 0 ? void 0 : _data$isResdential5.code;\n  } else {\n    var _data$PropertyType, _data$PropertyType$co;\n    if (data !== null && data !== void 0 && (_data$PropertyType = data.PropertyType) !== null && _data$PropertyType !== void 0 && (_data$PropertyType$co = _data$PropertyType.code) !== null && _data$PropertyType$co !== void 0 && _data$PropertyType$co.includes(\"INDEPENDENTPROPERTY\")) {\n      var _data$units$i, _data$units$i$selfOcc;\n      if ((data === null || data === void 0 ? void 0 : (_data$units$i = data.units[i]) === null || _data$units$i === void 0 ? void 0 : (_data$units$i$selfOcc = _data$units$i.selfOccupied) === null || _data$units$i$selfOcc === void 0 ? void 0 : _data$units$i$selfOcc.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\") {\n        var _data$units$i2;\n        return data === null || data === void 0 ? void 0 : (_data$units$i2 = data.units[i]) === null || _data$units$i2 === void 0 ? void 0 : _data$units$i2.subuagecode;\n      } else {\n        var _data$units$i3;\n        return data === null || data === void 0 ? void 0 : (_data$units$i3 = data.units[i]) === null || _data$units$i3 === void 0 ? void 0 : _data$units$i3.Subusagetypeofrentedareacode;\n      }\n    } else {\n      var _data$selfOccupied3;\n      if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied3 = data.selfOccupied) === null || _data$selfOccupied3 === void 0 ? void 0 : _data$selfOccupied3.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\") {\n        var _data$subusagetype;\n        return data === null || data === void 0 ? void 0 : (_data$subusagetype = data.subusagetype) === null || _data$subusagetype === void 0 ? void 0 : _data$subusagetype.subuagecode;\n      } else {\n        var _data$Subusagetypeofr;\n        return data === null || data === void 0 ? void 0 : (_data$Subusagetypeofr = data.Subusagetypeofrentedarea) === null || _data$Subusagetypeofr === void 0 ? void 0 : _data$Subusagetypeofr.Subusagetypeofrentedareacode;\n      }\n    }\n  }\n};\nexport const getunits = data => {\n  var _data$selfOccupied4, _data$selfOccupied6;\n  let unit = [];\n  if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied4 = data.selfOccupied) === null || _data$selfOccupied4 === void 0 ? void 0 : _data$selfOccupied4.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\" && (data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === \"PT_COMMON_YES\") {\n    var _data$selfOccupied5, _data$floordetails2, _data$UnOccupiedArea2, _data$IsAnyPartOfThis, _data$UnOccupiedArea3;\n    unit.push({\n      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied5 = data.selfOccupied) === null || _data$selfOccupied5 === void 0 ? void 0 : _data$selfOccupied5.code,\n      floorNo: getFloorNumber(data),\n      constructionDetail: {\n        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails2 = data.floordetails) === null || _data$floordetails2 === void 0 ? void 0 : _data$floordetails2.builtUpArea) - parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea2 = data.UnOccupiedArea) === null || _data$UnOccupiedArea2 === void 0 ? void 0 : _data$UnOccupiedArea2.UnOccupiedArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data)\n    });\n    unit.push({\n      occupancyType: data === null || data === void 0 ? void 0 : (_data$IsAnyPartOfThis = data.IsAnyPartOfThisFloorUnOccupied) === null || _data$IsAnyPartOfThis === void 0 ? void 0 : _data$IsAnyPartOfThis.code,\n      floorNo: getFloorNumber(data),\n      constructionDetail: {\n        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea3 = data.UnOccupiedArea) === null || _data$UnOccupiedArea3 === void 0 ? void 0 : _data$UnOccupiedArea3.UnOccupiedArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data)\n    });\n  } else if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied6 = data.selfOccupied) === null || _data$selfOccupied6 === void 0 ? void 0 : _data$selfOccupied6.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\" && (data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) !== \"PT_COMMON_YES\") {\n    var _data$selfOccupied7, _data$floordetails3;\n    unit.push({\n      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied7 = data.selfOccupied) === null || _data$selfOccupied7 === void 0 ? void 0 : _data$selfOccupied7.code,\n      floorNo: getFloorNumber(data),\n      constructionDetail: {\n        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$floordetails3 = data.floordetails) === null || _data$floordetails3 === void 0 ? void 0 : _data$floordetails3.builtUpArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data)\n    });\n  } else {\n    var _data$selfOccupied8, _data$selfOccupied9, _data$Constructiondet3, _data$Constructiondet4;\n    if ((data === null || data === void 0 ? void 0 : (_data$selfOccupied8 = data.selfOccupied) === null || _data$selfOccupied8 === void 0 ? void 0 : _data$selfOccupied8.i18nKey) === \"PT_PARTIALLY_RENTED_OUT\") {\n      var _data$landarea2, _data$isResdential6, _data$usageCategoryMa3, _data$isResdential7, _data$subusagetype2;\n      unit.push({\n        occupancyType: \"SELFOCCUPIED\",\n        floorNo: getFloorNumber(data),\n        constructionDetail: {\n          builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$landarea2 = data.landarea) === null || _data$landarea2 === void 0 ? void 0 : _data$landarea2.floorarea)\n        },\n        tenantId: data.tenantId,\n        usageCategory: (data === null || data === void 0 ? void 0 : (_data$isResdential6 = data.isResdential) === null || _data$isResdential6 === void 0 ? void 0 : _data$isResdential6.i18nKey) === \"PT_COMMON_YES\" || (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa3 = data.usageCategoryMajor) === null || _data$usageCategoryMa3 === void 0 ? void 0 : _data$usageCategoryMa3.code) === \"NONRESIDENTIAL.OTHERS\" ? data === null || data === void 0 ? void 0 : (_data$isResdential7 = data.isResdential) === null || _data$isResdential7 === void 0 ? void 0 : _data$isResdential7.code : data === null || data === void 0 ? void 0 : (_data$subusagetype2 = data.subusagetype) === null || _data$subusagetype2 === void 0 ? void 0 : _data$subusagetype2.subuagecode\n      });\n    }\n    unit.push({\n      occupancyType: data === null || data === void 0 ? void 0 : (_data$selfOccupied9 = data.selfOccupied) === null || _data$selfOccupied9 === void 0 ? void 0 : _data$selfOccupied9.code,\n      arv: data === null || data === void 0 ? void 0 : (_data$Constructiondet3 = data.Constructiondetails) === null || _data$Constructiondet3 === void 0 ? void 0 : _data$Constructiondet3.AnnualRent,\n      floorNo: getFloorNumber(data),\n      constructionDetail: {\n        builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$Constructiondet4 = data.Constructiondetails) === null || _data$Constructiondet4 === void 0 ? void 0 : _data$Constructiondet4.RentArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data)\n    });\n    if ((data === null || data === void 0 ? void 0 : data.IsAnyPartOfThisFloorUnOccupied.i18nKey) === \"PT_COMMON_YES\") {\n      var _data$IsAnyPartOfThis2, _data$UnOccupiedArea4;\n      unit.push({\n        occupancyType: data === null || data === void 0 ? void 0 : (_data$IsAnyPartOfThis2 = data.IsAnyPartOfThisFloorUnOccupied) === null || _data$IsAnyPartOfThis2 === void 0 ? void 0 : _data$IsAnyPartOfThis2.code,\n        floorNo: getFloorNumber(data),\n        constructionDetail: {\n          builtUpArea: parseInt(data === null || data === void 0 ? void 0 : (_data$UnOccupiedArea4 = data.UnOccupiedArea) === null || _data$UnOccupiedArea4 === void 0 ? void 0 : _data$UnOccupiedArea4.UnOccupiedArea)\n        },\n        tenantId: data.tenantId,\n        usageCategory: getusageCategory(data)\n      });\n    }\n  }\n  data !== null && data !== void 0 && data.extraunitFPB ? unit = unit.concat(data === null || data === void 0 ? void 0 : data.extraunitFPB) : \"\";\n  return unit;\n};\nexport const getunitarray = (i, unitsdata, unit, data) => {\n  var _unitsdata$i$selfOccu, _unitsdata$i$IsAnyPar, _unitsdata$i3, _unitsdata$i3$selfOcc, _unitsdata$i4;\n  if (unitsdata[i].active === true) {\n    unit.push(unitsdata[i]);\n  } else if (((_unitsdata$i$selfOccu = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu === void 0 ? void 0 : _unitsdata$i$selfOccu.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\" && ((_unitsdata$i$IsAnyPar = unitsdata[i].IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i$IsAnyPar === void 0 ? void 0 : _unitsdata$i$IsAnyPar.i18nKey) === \"PT_COMMON_YES\") {\n    var _unitsdata$i$selfOccu2, _unitsdata$i, _unitsdata$i$IsAnyPar2, _unitsdata$i2;\n    unit.push({\n      occupancyType: (_unitsdata$i$selfOccu2 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu2 === void 0 ? void 0 : _unitsdata$i$selfOccu2.code,\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n      constructionDetail: {\n        builtUpArea: parseInt(unitsdata[i].builtUpArea) - parseInt(unitsdata[i].UnOccupiedArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data, i)\n    });\n    unit.push({\n      occupancyType: (_unitsdata$i = unitsdata[i]) === null || _unitsdata$i === void 0 ? void 0 : (_unitsdata$i$IsAnyPar2 = _unitsdata$i.IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i$IsAnyPar2 === void 0 ? void 0 : _unitsdata$i$IsAnyPar2.code,\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n      constructionDetail: {\n        builtUpArea: parseInt((_unitsdata$i2 = unitsdata[i]) === null || _unitsdata$i2 === void 0 ? void 0 : _unitsdata$i2.UnOccupiedArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data, i)\n    });\n  } else if (((_unitsdata$i3 = unitsdata[i]) === null || _unitsdata$i3 === void 0 ? void 0 : (_unitsdata$i3$selfOcc = _unitsdata$i3.selfOccupied) === null || _unitsdata$i3$selfOcc === void 0 ? void 0 : _unitsdata$i3$selfOcc.i18nKey) === \"PT_YES_IT_IS_SELFOCCUPIED\" && ((_unitsdata$i4 = unitsdata[i]) === null || _unitsdata$i4 === void 0 ? void 0 : _unitsdata$i4.IsAnyPartOfThisFloorUnOccupied.i18nKey) !== \"PT_COMMON_YES\") {\n    var _unitsdata$i$selfOccu3, _unitsdata$i5;\n    unit.push({\n      occupancyType: (_unitsdata$i$selfOccu3 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu3 === void 0 ? void 0 : _unitsdata$i$selfOccu3.code,\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n      constructionDetail: {\n        builtUpArea: parseInt((_unitsdata$i5 = unitsdata[i]) === null || _unitsdata$i5 === void 0 ? void 0 : _unitsdata$i5.builtUpArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data, i)\n    });\n  } else {\n    var _unitsdata$i6, _unitsdata$i6$selfOcc, _unitsdata$i$selfOccu4, _unitsdata$i8, _unitsdata$i9;\n    if (((_unitsdata$i6 = unitsdata[i]) === null || _unitsdata$i6 === void 0 ? void 0 : (_unitsdata$i6$selfOcc = _unitsdata$i6.selfOccupied) === null || _unitsdata$i6$selfOcc === void 0 ? void 0 : _unitsdata$i6$selfOcc.i18nKey) === \"PT_PARTIALLY_RENTED_OUT\") {\n      var _unitsdata$i7, _data$isResdential8, _data$usageCategoryMa4, _data$isResdential9;\n      unit.push({\n        occupancyType: \"SELFOCCUPIED\",\n        floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n        constructionDetail: {\n          builtUpArea: parseInt((_unitsdata$i7 = unitsdata[i]) === null || _unitsdata$i7 === void 0 ? void 0 : _unitsdata$i7.floorarea)\n        },\n        tenantId: data.tenantId,\n        usageCategory: (data === null || data === void 0 ? void 0 : (_data$isResdential8 = data.isResdential) === null || _data$isResdential8 === void 0 ? void 0 : _data$isResdential8.i18nKey) === \"PT_COMMON_YES\" || (data === null || data === void 0 ? void 0 : (_data$usageCategoryMa4 = data.usageCategoryMajor) === null || _data$usageCategoryMa4 === void 0 ? void 0 : _data$usageCategoryMa4.code) === \"NONRESIDENTIAL.OTHERS\" ? data === null || data === void 0 ? void 0 : (_data$isResdential9 = data.isResdential) === null || _data$isResdential9 === void 0 ? void 0 : _data$isResdential9.code : unitsdata[i].subuagecode\n      });\n    }\n    unit.push({\n      occupancyType: (_unitsdata$i$selfOccu4 = unitsdata[i].selfOccupied) === null || _unitsdata$i$selfOccu4 === void 0 ? void 0 : _unitsdata$i$selfOccu4.code,\n      arv: unitsdata[i].AnnualRent,\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n      constructionDetail: {\n        builtUpArea: parseInt((_unitsdata$i8 = unitsdata[i]) === null || _unitsdata$i8 === void 0 ? void 0 : _unitsdata$i8.RentArea)\n      },\n      tenantId: data.tenantId,\n      usageCategory: getusageCategory(data, i)\n    });\n    if (((_unitsdata$i9 = unitsdata[i]) === null || _unitsdata$i9 === void 0 ? void 0 : _unitsdata$i9.IsAnyPartOfThisFloorUnOccupied.i18nKey) === \"PT_COMMON_YES\") {\n      var _unitsdata$i10, _unitsdata$i10$IsAnyP, _unitsdata$i11;\n      unit.push({\n        occupancyType: (_unitsdata$i10 = unitsdata[i]) === null || _unitsdata$i10 === void 0 ? void 0 : (_unitsdata$i10$IsAnyP = _unitsdata$i10.IsAnyPartOfThisFloorUnOccupied) === null || _unitsdata$i10$IsAnyP === void 0 ? void 0 : _unitsdata$i10$IsAnyP.code,\n        floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\n        constructionDetail: {\n          builtUpArea: parseInt((_unitsdata$i11 = unitsdata[i]) === null || _unitsdata$i11 === void 0 ? void 0 : _unitsdata$i11.UnOccupiedArea)\n        },\n        tenantId: data.tenantId,\n        usageCategory: getusageCategory(data, i)\n      });\n    }\n  }\n  return unit;\n};\nexport const getunitsindependent = data => {\n  var _data$noOofBasements3, _data$noOofBasements4, _data$noOofBasements5;\n  let unit = [];\n  let unitsdata = [];\n  unitsdata = data === null || data === void 0 ? void 0 : data.units;\n  let i;\n  for (i = 0; i < unitsdata.length && unitsdata.length > 0; i++) {\n    unit = getunitarray(i, unitsdata, unit, data);\n  }\n  if (isthere1Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements3 = data.noOofBasements) === null || _data$noOofBasements3 === void 0 ? void 0 : _data$noOofBasements3.i18nKey) || isthere2Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements4 = data.noOofBasements) === null || _data$noOofBasements4 === void 0 ? void 0 : _data$noOofBasements4.i18nKey)) {\n    unit = getunitarray(\"-1\", unitsdata, unit, data);\n  }\n  if (isthere2Basement(data === null || data === void 0 ? void 0 : (_data$noOofBasements5 = data.noOofBasements) === null || _data$noOofBasements5 === void 0 ? void 0 : _data$noOofBasements5.i18nKey)) {\n    unit = getunitarray(\"-2\", unitsdata, unit, data);\n  }\n  return unit;\n};\nexport const setPropertyDetails = data => {\n  var _data$PropertyType2, _data$PropertyType2$c, _data$PropertyType4, _data$PropertyType4$c, _data$PropertyType6, _data$PropertyType6$c;\n  // let unitleghtvalue = getnumberoffloors(data);\n  let propertyDetails = {};\n  if (data !== null && data !== void 0 && (_data$PropertyType2 = data.PropertyType) !== null && _data$PropertyType2 !== void 0 && (_data$PropertyType2$c = _data$PropertyType2.code) !== null && _data$PropertyType2$c !== void 0 && _data$PropertyType2$c.includes(\"VACANT\")) {\n    var _data$landarea3, _data$PropertyType3;\n    propertyDetails = {\n      units: [],\n      landArea: parseInt(data === null || data === void 0 ? void 0 : (_data$landarea3 = data.landarea) === null || _data$landarea3 === void 0 ? void 0 : _data$landarea3.floorarea),\n      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType3 = data.PropertyType) === null || _data$PropertyType3 === void 0 ? void 0 : _data$PropertyType3.code,\n      noOfFloors: 0,\n      usageCategory: getUsageType(data)\n    };\n  } else if (data !== null && data !== void 0 && (_data$PropertyType4 = data.PropertyType) !== null && _data$PropertyType4 !== void 0 && (_data$PropertyType4$c = _data$PropertyType4.code) !== null && _data$PropertyType4$c !== void 0 && _data$PropertyType4$c.includes(\"SHAREDPROPERTY\")) {\n    var _data$units2, _data$PropertyType5, _data$units3, _data$units4, _data$units4$;\n    /*  update this case tulika*/\n    propertyDetails = {\n      units: data === null || data === void 0 ? void 0 : data.units,\n      landArea: data === null || data === void 0 ? void 0 : (_data$units2 = data.units) === null || _data$units2 === void 0 ? void 0 : _data$units2.reduce((acc, curr) => {\n        var _curr$constructionDet;\n        return Number(curr === null || curr === void 0 ? void 0 : (_curr$constructionDet = curr.constructionDetail) === null || _curr$constructionDet === void 0 ? void 0 : _curr$constructionDet.builtUpArea) + acc;\n      }, 0),\n      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType5 = data.PropertyType) === null || _data$PropertyType5 === void 0 ? void 0 : _data$PropertyType5.code,\n      noOfFloors: 1,\n      superBuiltUpArea: data === null || data === void 0 ? void 0 : (_data$units3 = data.units) === null || _data$units3 === void 0 ? void 0 : _data$units3.reduce((acc, curr) => {\n        var _curr$constructionDet2;\n        return Number(curr === null || curr === void 0 ? void 0 : (_curr$constructionDet2 = curr.constructionDetail) === null || _curr$constructionDet2 === void 0 ? void 0 : _curr$constructionDet2.builtUpArea) + acc;\n      }, 0),\n      usageCategory: data === null || data === void 0 ? void 0 : (_data$units4 = data.units) === null || _data$units4 === void 0 ? void 0 : (_data$units4$ = _data$units4[0]) === null || _data$units4$ === void 0 ? void 0 : _data$units4$.usageCategory\n    };\n  } else if (data !== null && data !== void 0 && (_data$PropertyType6 = data.PropertyType) !== null && _data$PropertyType6 !== void 0 && (_data$PropertyType6$c = _data$PropertyType6.code) !== null && _data$PropertyType6$c !== void 0 && _data$PropertyType6$c.includes(\"INDEPENDENTPROPERTY\")) {\n    var _data$landArea, _data$PropertyType7, _data$noOfFloors, _data$units5, _data$units5$;\n    /*  update this case tulika*/\n    propertyDetails = {\n      units: data === null || data === void 0 ? void 0 : data.units,\n      landArea: data === null || data === void 0 ? void 0 : (_data$landArea = data.landArea) === null || _data$landArea === void 0 ? void 0 : _data$landArea.floorarea,\n      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType7 = data.PropertyType) === null || _data$PropertyType7 === void 0 ? void 0 : _data$PropertyType7.code,\n      noOfFloors: (data === null || data === void 0 ? void 0 : (_data$noOfFloors = data.noOfFloors) === null || _data$noOfFloors === void 0 ? void 0 : _data$noOfFloors.code) + 1,\n      superBuiltUpArea: null,\n      usageCategory: data === null || data === void 0 ? void 0 : (_data$units5 = data.units) === null || _data$units5 === void 0 ? void 0 : (_data$units5$ = _data$units5[0]) === null || _data$units5$ === void 0 ? void 0 : _data$units5$.usageCategory\n    };\n  } else {\n    var _data$PropertyType8;\n    propertyDetails = {\n      units: [{\n        occupancyType: \"SELFOCCUPIED\",\n        floorNo: \"0\",\n        constructionDetail: {\n          builtUpArea: 16.67\n        },\n        tenantId: data.tenantId,\n        usageCategory: \"RESIDENTIAL\"\n      }],\n      landArea: \"2000\",\n      propertyType: data === null || data === void 0 ? void 0 : (_data$PropertyType8 = data.PropertyType) === null || _data$PropertyType8 === void 0 ? void 0 : _data$PropertyType8.code,\n      noOfFloors: 1,\n      superBuiltUpArea: 16.67,\n      usageCategory: getUsageType(data)\n    };\n  }\n  data.propertyDetails = propertyDetails;\n  return data;\n};\n\n/*   method to convert collected details to proeprty create object */\nexport const convertToProperty = function () {\n  var _data, _data$floordetails4, _data2, _data3, _data4, _data5, _data6, _data7, _data8, _data9, _data10, _data11, _data11$ownershipCate;\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let isResdential = data.isResdential;\n  let propertyType = data.PropertyType;\n  let selfOccupied = data.selfOccupied;\n  let Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;\n  let subusagetype = data.subusagetype || null;\n  let IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;\n  let builtUpArea = ((_data = data) === null || _data === void 0 ? void 0 : (_data$floordetails4 = _data.floordetails) === null || _data$floordetails4 === void 0 ? void 0 : _data$floordetails4.builtUpArea) || null;\n  let noOfFloors = (_data2 = data) === null || _data2 === void 0 ? void 0 : _data2.noOfFloors;\n  let noOofBasements = (_data3 = data) === null || _data3 === void 0 ? void 0 : _data3.noOofBasements;\n  let unit = (_data4 = data) === null || _data4 === void 0 ? void 0 : _data4.units;\n  let basement1 = Array.isArray((_data5 = data) === null || _data5 === void 0 ? void 0 : _data5.units) && (_data6 = data) !== null && _data6 !== void 0 && _data6.units[\"-1\"] ? (_data7 = data) === null || _data7 === void 0 ? void 0 : _data7.units[\"-1\"] : null;\n  let basement2 = Array.isArray((_data8 = data) === null || _data8 === void 0 ? void 0 : _data8.units) && (_data9 = data) !== null && _data9 !== void 0 && _data9.units[\"-2\"] ? (_data10 = data) === null || _data10 === void 0 ? void 0 : _data10.units[\"-2\"] : null;\n  data = setDocumentDetails(data);\n  data = setOwnerDetails(data);\n  data = setAddressDetails(data);\n  data = setPropertyDetails(data);\n  const formdata = {\n    Property: {\n      tenantId: data.tenantId,\n      address: data.address,\n      ownershipCategory: (_data11 = data) === null || _data11 === void 0 ? void 0 : (_data11$ownershipCate = _data11.ownershipCategory) === null || _data11$ownershipCate === void 0 ? void 0 : _data11$ownershipCate.value,\n      owners: data.owners,\n      institution: data.institution || null,\n      documents: data.documents || [],\n      ...data.propertyDetails,\n      additionalDetails: {\n        inflammable: false,\n        heightAbove36Feet: false,\n        isResdential: isResdential,\n        propertyType: propertyType,\n        selfOccupied: selfOccupied,\n        Subusagetypeofrentedarea: Subusagetypeofrentedarea,\n        subusagetype: subusagetype,\n        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,\n        builtUpArea: builtUpArea,\n        noOfFloors: noOfFloors,\n        noOofBasements: noOofBasements,\n        unit: unit,\n        basement1: basement1,\n        basement2: basement2\n      },\n      creationReason: getCreationReason(data),\n      source: \"MUNICIPAL_RECORDS\",\n      channel: \"CITIZEN\"\n    }\n  };\n  return formdata;\n};\nexport const CompareTwoObjects = (ob1, ob2) => {\n  let comp = 0;\n  Object.keys(ob1).map(key => {\n    if (typeof ob1[key] == \"object\") {\n      var _ob1$key3, _ob2$key3;\n      if (key == \"institution\") {\n        var _ob1$key, _ob2$key, _ob1$key2, _ob1$key2$type, _ob2$key2, _ob2$key2$type;\n        if ((ob1[key].name || ob2[key].name) && ((_ob1$key = ob1[key]) === null || _ob1$key === void 0 ? void 0 : _ob1$key.name) !== ((_ob2$key = ob2[key]) === null || _ob2$key === void 0 ? void 0 : _ob2$key.name)) comp = 1;else if (((_ob1$key2 = ob1[key]) === null || _ob1$key2 === void 0 ? void 0 : (_ob1$key2$type = _ob1$key2.type) === null || _ob1$key2$type === void 0 ? void 0 : _ob1$key2$type.code) !== ((_ob2$key2 = ob2[key]) === null || _ob2$key2 === void 0 ? void 0 : (_ob2$key2$type = _ob2$key2.type) === null || _ob2$key2$type === void 0 ? void 0 : _ob2$key2$type.code)) comp = 1;\n      } else if (((_ob1$key3 = ob1[key]) === null || _ob1$key3 === void 0 ? void 0 : _ob1$key3.code) !== ((_ob2$key3 = ob2[key]) === null || _ob2$key3 === void 0 ? void 0 : _ob2$key3.code)) comp = 1;\n    } else {\n      if ((ob1[key] || ob2[key]) && ob1[key] !== ob2[key]) comp = 1;\n    }\n  });\n  if (comp == 1) return false;else return true;\n};\nexport const setUpdateOwnerDetails = function () {\n  var _data$ownershipCatego3, _data$ownershipCatego4;\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  const {\n    institution,\n    owners\n  } = data;\n  if ((data === null || data === void 0 ? void 0 : (_data$ownershipCatego3 = data.ownershipCategory) === null || _data$ownershipCatego3 === void 0 ? void 0 : _data$ownershipCatego3.value) === \"INSTITUTIONALPRIVATE\" || (data === null || data === void 0 ? void 0 : (_data$ownershipCatego4 = data.ownershipCategory) === null || _data$ownershipCatego4 === void 0 ? void 0 : _data$ownershipCatego4.value) === \"INSTITUTIONALGOVERNMENT\") {\n    var _data$ownershipCatego5, _data$ownershipCatego6;\n    if ((data === null || data === void 0 ? void 0 : (_data$ownershipCatego5 = data.ownershipCategory) === null || _data$ownershipCatego5 === void 0 ? void 0 : _data$ownershipCatego5.value) === \"INSTITUTIONALPRIVATE\" || (data === null || data === void 0 ? void 0 : (_data$ownershipCatego6 = data.ownershipCategory) === null || _data$ownershipCatego6 === void 0 ? void 0 : _data$ownershipCatego6.value) === \"INSTITUTIONALGOVERNMENT\") {\n      var _owners$16, _owners$17, _owners$18, _data$address, _data$address$city, _owners$19, _owners$19$inistitute, _owners$20, _owners$20$documents$;\n      institution.designation = (_owners$16 = owners[0]) === null || _owners$16 === void 0 ? void 0 : _owners$16.designation;\n      institution.name = (_owners$17 = owners[0]) === null || _owners$17 === void 0 ? void 0 : _owners$17.inistitutionName;\n      institution.nameOfAuthorizedPerson = (_owners$18 = owners[0]) === null || _owners$18 === void 0 ? void 0 : _owners$18.name;\n      institution.tenantId = data === null || data === void 0 ? void 0 : (_data$address = data.address) === null || _data$address === void 0 ? void 0 : (_data$address$city = _data$address.city) === null || _data$address$city === void 0 ? void 0 : _data$address$city.code;\n      institution.type = (_owners$19 = owners[0]) === null || _owners$19 === void 0 ? void 0 : (_owners$19$inistitute = _owners$19.inistitutetype) === null || _owners$19$inistitute === void 0 ? void 0 : _owners$19$inistitute.value;\n      let document = [];\n      if ((_owners$20 = owners[0]) !== null && _owners$20 !== void 0 && (_owners$20$documents$ = _owners$20.documents[\"proofIdentity\"]) !== null && _owners$20$documents$ !== void 0 && _owners$20$documents$.fileStoreId && owners[0].documents[\"proofIdentity\"].id) {\n        var _owners$0$documents$p;\n        document.push({\n          fileStoreId: owners[0].documents[\"proofIdentity\"].fileStoreId || \"\",\n          documentType: ((_owners$0$documents$p = owners[0].documents[\"proofIdentity\"].documentType) === null || _owners$0$documents$p === void 0 ? void 0 : _owners$0$documents$p.code) || \"\",\n          id: owners[0].documents[\"proofIdentity\"].id || \"\",\n          status: owners[0].documents[\"proofIdentity\"].status || \"\"\n        });\n      } else {\n        var _owners$0$documents$p2;\n        document.push({\n          fileStoreId: owners[0].documents[\"proofIdentity\"].fileStoreId || \"\",\n          documentType: ((_owners$0$documents$p2 = owners[0].documents[\"proofIdentity\"].documentType) === null || _owners$0$documents$p2 === void 0 ? void 0 : _owners$0$documents$p2.code) || \"\"\n        });\n      }\n      data.owners.forEach(owner => {\n        var _owners$21, _owners$22, _owners$23, _owners$24, _owners$25, _owners$26, _owners$27, _owners$28, _owners$28$ownerType;\n        owner.altContactNumber = (_owners$21 = owners[0]) === null || _owners$21 === void 0 ? void 0 : _owners$21.altContactNumber;\n        owner.correspondenceAddress = (_owners$22 = owners[0]) === null || _owners$22 === void 0 ? void 0 : _owners$22.permanentAddress;\n        owner.designation = (_owners$23 = owners[0]) === null || _owners$23 === void 0 ? void 0 : _owners$23.designation;\n        owner.emailId = (_owners$24 = owners[0]) === null || _owners$24 === void 0 ? void 0 : _owners$24.emailId;\n        owner.isCorrespondenceAddress = (_owners$25 = owners[0]) === null || _owners$25 === void 0 ? void 0 : _owners$25.isCorrespondenceAddress;\n        owner.mobileNumber = (_owners$26 = owners[0]) === null || _owners$26 === void 0 ? void 0 : _owners$26.mobileNumber;\n        owner.name = (_owners$27 = owners[0]) === null || _owners$27 === void 0 ? void 0 : _owners$27.name;\n        owner.ownerType = ((_owners$28 = owners[0]) === null || _owners$28 === void 0 ? void 0 : (_owners$28$ownerType = _owners$28.ownerType) === null || _owners$28$ownerType === void 0 ? void 0 : _owners$28$ownerType.code) || \"NONE\";\n        owner.documents = document;\n      });\n      data.institution = institution;\n    }\n  } else {\n    data.owners.forEach(owner => {\n      var _owner$ownerType, _owner$documents$proo6, _owner$gender, _owner$ownerType2, _owner$relationship;\n      let document = [];\n      if ((owner === null || owner === void 0 ? void 0 : (_owner$ownerType = owner.ownerType) === null || _owner$ownerType === void 0 ? void 0 : _owner$ownerType.code) != \"NONE\") {\n        if (owner.documents[\"specialProofIdentity\"].id) {\n          var _owner$documents$spec10;\n          document.push({\n            fileStoreId: owner.documents[\"specialProofIdentity\"].fileStoreId || \"\",\n            documentType: ((_owner$documents$spec10 = owner.documents[\"specialProofIdentity\"].documentType) === null || _owner$documents$spec10 === void 0 ? void 0 : _owner$documents$spec10.code) || \"\",\n            id: owner.documents[\"specialProofIdentity\"].id || \"\",\n            status: owner.documents[\"specialProofIdentity\"].status || \"\"\n          });\n        } else {\n          var _owner$documents$spec11;\n          document.push({\n            fileStoreId: owner.documents[\"specialProofIdentity\"].fileStoreId || \"\",\n            documentType: ((_owner$documents$spec11 = owner.documents[\"specialProofIdentity\"].documentType) === null || _owner$documents$spec11 === void 0 ? void 0 : _owner$documents$spec11.code) || \"\"\n          });\n        }\n      }\n      if (owner !== null && owner !== void 0 && (_owner$documents$proo6 = owner.documents[\"proofIdentity\"]) !== null && _owner$documents$proo6 !== void 0 && _owner$documents$proo6.fileStoreId) {\n        if (owner.documents[\"proofIdentity\"].id) {\n          var _owner$documents$proo7;\n          document.push({\n            fileStoreId: owner.documents[\"proofIdentity\"].fileStoreId || \"\",\n            documentType: ((_owner$documents$proo7 = owner.documents[\"proofIdentity\"].documentType) === null || _owner$documents$proo7 === void 0 ? void 0 : _owner$documents$proo7.code) || \"\",\n            id: owner.documents[\"proofIdentity\"].id || \"\",\n            status: owner.documents[\"proofIdentity\"].status || \"\"\n          });\n        } else {\n          var _owner$documents$proo8;\n          document.push({\n            fileStoreId: owner.documents[\"proofIdentity\"].fileStoreId || \"\",\n            documentType: ((_owner$documents$proo8 = owner.documents[\"proofIdentity\"].documentType) === null || _owner$documents$proo8 === void 0 ? void 0 : _owner$documents$proo8.code) || \"\"\n          });\n        }\n      }\n      owner.gender = owner === null || owner === void 0 ? void 0 : (_owner$gender = owner.gender) === null || _owner$gender === void 0 ? void 0 : _owner$gender.code;\n      owner.ownerType = owner === null || owner === void 0 ? void 0 : (_owner$ownerType2 = owner.ownerType) === null || _owner$ownerType2 === void 0 ? void 0 : _owner$ownerType2.code;\n      owner.relationship = owner === null || owner === void 0 ? void 0 : (_owner$relationship = owner.relationship) === null || _owner$relationship === void 0 ? void 0 : _owner$relationship.code;\n      owner.documents = document;\n    });\n  }\n  return data;\n};\nexport const setUpdatedDocumentDetails = data => {\n  var _address$documents$Pr10;\n  const {\n    address,\n    owners\n  } = data;\n  let documents = [];\n  if (address !== null && address !== void 0 && (_address$documents$Pr10 = address.documents[\"ProofOfAddress\"]) !== null && _address$documents$Pr10 !== void 0 && _address$documents$Pr10.id) {\n    var _address$documents$Pr11, _address$documents$Pr12, _address$documents$Pr13, _address$documents$Pr14, _address$documents$Pr15;\n    documents.push({\n      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr11 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr11 === void 0 ? void 0 : _address$documents$Pr11.fileStoreId) || \"\",\n      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr12 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr12 === void 0 ? void 0 : (_address$documents$Pr13 = _address$documents$Pr12.documentType) === null || _address$documents$Pr13 === void 0 ? void 0 : _address$documents$Pr13.code) || \"\",\n      id: (address === null || address === void 0 ? void 0 : (_address$documents$Pr14 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr14 === void 0 ? void 0 : _address$documents$Pr14.id) || \"\",\n      status: (address === null || address === void 0 ? void 0 : (_address$documents$Pr15 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr15 === void 0 ? void 0 : _address$documents$Pr15.status) || \"\"\n    });\n  } else {\n    var _address$documents$Pr16, _address$documents$Pr17, _address$documents$Pr18;\n    documents.push({\n      fileStoreId: (address === null || address === void 0 ? void 0 : (_address$documents$Pr16 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr16 === void 0 ? void 0 : _address$documents$Pr16.fileStoreId) || \"\",\n      documentType: (address === null || address === void 0 ? void 0 : (_address$documents$Pr17 = address.documents[\"ProofOfAddress\"]) === null || _address$documents$Pr17 === void 0 ? void 0 : (_address$documents$Pr18 = _address$documents$Pr17.documentType) === null || _address$documents$Pr18 === void 0 ? void 0 : _address$documents$Pr18.code) || \"\"\n    });\n  }\n  owners && owners.length > 0 && owners.map(owner => {\n    owner.documents.map(document => {\n      documents.push(document);\n    });\n  });\n  data.documents = documents;\n  return data;\n};\nexport const convertToUpdateProperty = function () {\n  var _data12, _data12$floordetails, _data13, _data14, _data15, _data16, _data16$units, _data17, _data18, _data19, _data20, _data21, _data22, _data23, _data24, _data24$ownershipCate, _formdata$Property, _data25, _formdata$Property3;\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let t = arguments.length > 1 ? arguments[1] : undefined;\n  let isResdential = data.isResdential;\n  let propertyType = data.PropertyType;\n  let selfOccupied = data.selfOccupied;\n  let Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;\n  let subusagetype = data.subusagetype || null;\n  let IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;\n  let builtUpArea = ((_data12 = data) === null || _data12 === void 0 ? void 0 : (_data12$floordetails = _data12.floordetails) === null || _data12$floordetails === void 0 ? void 0 : _data12$floordetails.builtUpArea) || null;\n  let noOfFloors = (_data13 = data) === null || _data13 === void 0 ? void 0 : _data13.noOfFloors;\n  let noOofBasements = (_data14 = data) === null || _data14 === void 0 ? void 0 : _data14.noOofBasements;\n  let unit = (_data15 = data) === null || _data15 === void 0 ? void 0 : _data15.units;\n  data.units = (_data16 = data) === null || _data16 === void 0 ? void 0 : (_data16$units = _data16.units) === null || _data16$units === void 0 ? void 0 : _data16$units.map(ob => {\n    var _ob$unitType;\n    return {\n      ...ob,\n      unitType: ob === null || ob === void 0 ? void 0 : (_ob$unitType = ob.unitType) === null || _ob$unitType === void 0 ? void 0 : _ob$unitType.code\n    };\n  });\n  let basement1 = Array.isArray((_data17 = data) === null || _data17 === void 0 ? void 0 : _data17.units) && (_data18 = data) !== null && _data18 !== void 0 && _data18.units[\"-1\"] ? (_data19 = data) === null || _data19 === void 0 ? void 0 : _data19.units[\"-1\"] : null;\n  let basement2 = Array.isArray((_data20 = data) === null || _data20 === void 0 ? void 0 : _data20.units) && (_data21 = data) !== null && _data21 !== void 0 && _data21.units[\"-2\"] ? (_data22 = data) === null || _data22 === void 0 ? void 0 : _data22.units[\"-2\"] : null;\n  data = setAddressDetails(data);\n  data = setUpdateOwnerDetails(data);\n  data = setUpdatedDocumentDetails(data);\n  data = setPropertyDetails(data);\n  data.address.city = data.address.city ? data.address.city : t(\"TENANT_TENANTS_\".concat(stringReplaceAll((_data23 = data) === null || _data23 === void 0 ? void 0 : _data23.tenantId.toUpperCase(), \".\", \"_\")));\n  const formdata = {\n    Property: {\n      id: data.id,\n      accountId: data.accountId,\n      acknowldgementNumber: data.acknowldgementNumber,\n      propertyId: data.propertyId,\n      status: data.status || \"INWORKFLOW\",\n      tenantId: data.tenantId,\n      address: data.address,\n      ownershipCategory: (_data24 = data) === null || _data24 === void 0 ? void 0 : (_data24$ownershipCate = _data24.ownershipCategory) === null || _data24$ownershipCate === void 0 ? void 0 : _data24$ownershipCate.value,\n      owners: data.owners,\n      institution: data.institution || null,\n      documents: data.documents || [],\n      ...data.propertyDetails,\n      additionalDetails: {\n        inflammable: false,\n        heightAbove36Feet: false,\n        isResdential: isResdential,\n        propertyType: propertyType,\n        selfOccupied: selfOccupied,\n        Subusagetypeofrentedarea: Subusagetypeofrentedarea,\n        subusagetype: subusagetype,\n        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,\n        builtUpArea: builtUpArea,\n        noOfFloors: noOfFloors,\n        noOofBasements: noOofBasements,\n        unit: unit,\n        basement1: basement1,\n        basement2: basement2\n      },\n      creationReason: getCreationReason(data),\n      source: \"MUNICIPAL_RECORDS\",\n      channel: \"CITIZEN\",\n      workflow: getWorkflow(data)\n    }\n  };\n  let propertyInitialObject = JSON.parse(sessionStorage.getItem(\"propertyInitialObject\"));\n  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.units) && checkIsAnArray((_formdata$Property = formdata.Property) === null || _formdata$Property === void 0 ? void 0 : _formdata$Property.units) && (_data25 = data) !== null && _data25 !== void 0 && _data25.isEditProperty) {\n    var _formdata$Property2;\n    propertyInitialObject.units = propertyInitialObject.units.filter(unit => unit.active);\n    let oldUnits = propertyInitialObject.units.map(unit => {\n      return {\n        ...unit,\n        active: false\n      };\n    });\n    (_formdata$Property2 = formdata.Property) === null || _formdata$Property2 === void 0 ? void 0 : _formdata$Property2.units.push(...oldUnits);\n  }\n  /* if (\r\n    checkArrayLength(propertyInitialObject?.owners) &&\r\n    checkIsAnArray(formdata.Property?.owners) &&\r\n    data?.isEditProperty &&\r\n    data.isUpdateProperty == false\r\n  ) {\r\n    propertyInitialObject.owners = propertyInitialObject.owners.filter((owner) => owner.status === \"ACTIVE\");\r\n    let oldOwners = propertyInitialObject.owners.map((owner) => {\r\n      return { ...owner, status: \"INACTIVE\" };\r\n    });\r\n    formdata.Property?.owners.push(...oldOwners);\r\n  } else {\r\n    formdata.Property.owners = [...propertyInitialObject.owners];\r\n  } */\n\n  if (checkArrayLength(propertyInitialObject === null || propertyInitialObject === void 0 ? void 0 : propertyInitialObject.owners) && checkIsAnArray((_formdata$Property3 = formdata.Property) === null || _formdata$Property3 === void 0 ? void 0 : _formdata$Property3.owners)) {\n    formdata.Property.owners = [...propertyInitialObject.owners];\n  }\n  if (propertyInitialObject !== null && propertyInitialObject !== void 0 && propertyInitialObject.auditDetails) {\n    formdata.Property[\"auditDetails\"] = {\n      ...propertyInitialObject.auditDetails\n    };\n  }\n  return formdata;\n};\n\n/*   method to check value  if not returns NA*/\nexport const checkForNA = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) ? value : \"PT_NA\";\n};\n\n/*   method to check value  if not returns NA*/\nexport const isPropertyVacant = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"VACANT\") ? true : false;\n};\n\n/*   method to check value equal to flat / part of building if not returns NA  */\nexport const isPropertyFlatorPartofBuilding = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"SHAREDPROPERTY\") ? true : false;\n};\nexport const isPropertyIndependent = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"INDEPENDENT\") ? true : false;\n};\nexport const isthere1Basement = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"ONE\") ? true : false;\n};\nexport const isthere2Basement = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"TWO\") ? true : false;\n};\nexport const isPropertyselfoccupied = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"SELFOCCUPIED\") ? true : false;\n};\nexport const isPropertyPartiallyrented = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"PARTIALLY\") ? true : false;\n};\nexport const ispropertyunoccupied = function () {\n  let value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  return checkForNotNull(value) && value.includes(\"YES\") ? true : false;\n};\n/*   method to get required format from fielstore url*/\nexport const pdfDownloadLink = function () {\n  let documents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let fileStoreId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  /* Need to enhance this util to return required format*/\n\n  let downloadLink = documents[fileStoreId] || \"\";\n  let differentFormats = (downloadLink === null || downloadLink === void 0 ? void 0 : downloadLink.split(\",\")) || [];\n  let fileURL = \"\";\n  differentFormats.length > 0 && differentFormats.map(link => {\n    if (!link.includes(\"large\") && !link.includes(\"medium\") && !link.includes(\"small\")) {\n      fileURL = link;\n    }\n  });\n  return fileURL;\n};\n\n/*   method to get filename  from fielstore url*/\nexport const pdfDocumentName = function () {\n  let documentLink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  let documentName = decodeURIComponent(documentLink.split(\"?\")[0].split(\"/\").pop().slice(13)) || \"Document - \".concat(index + 1);\n  return documentName;\n};\n\n/* methid to get date from epoch */\nexport const convertEpochToDate = (dateEpoch, businessService) => {\n  // Returning null in else case because new Date(null) returns initial date from calender\n  if (dateEpoch) {\n    const dateFromApi = new Date(dateEpoch);\n    let month = dateFromApi.getMonth() + 1;\n    let day = dateFromApi.getDate();\n    let year = dateFromApi.getFullYear();\n    month = (month > 9 ? \"\" : \"0\") + month;\n    day = (day > 9 ? \"\" : \"0\") + day;\n    if (businessService == \"PT\") return \"\".concat(day, \"-\").concat(month, \"-\").concat(year);else return \"\".concat(day, \"/\").concat(month, \"/\").concat(year);\n  } else {\n    return null;\n  }\n};\nexport const stringReplaceAll = function () {\n  let str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n  let searcher = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  let replaceWith = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"\";\n  if (searcher == \"\") return str;\n  while (str.includes(searcher)) {\n    str = str.replace(searcher, replaceWith);\n  }\n  return str;\n};\nexport const DownloadReceipt = async function (consumerCode, tenantId, businessService) {\n  let pdfKey = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"consolidatedreceipt\";\n  tenantId = tenantId ? tenantId : Digit.ULBService.getCurrentTenantId();\n  await Digit.Utils.downloadReceipt(consumerCode, businessService, \"consolidatedreceipt\", tenantId);\n};\nexport const checkIsAnArray = function () {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return obj && Array.isArray(obj) ? true : false;\n};\nexport const checkArrayLength = function () {\n  let obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  let length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  return checkIsAnArray(obj) && obj.length > length ? true : false;\n};\nexport const getWorkflow = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    action: data !== null && data !== void 0 && data.isEditProperty ? \"REOPEN\" : \"OPEN\",\n    businessService: \"PT.\".concat(getCreationReason(data)),\n    moduleName: \"PT\"\n  };\n};\nexport const getCreationReason = function () {\n  let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return data !== null && data !== void 0 && data.isUpdateProperty ? \"UPDATE\" : \"CREATE\";\n};","map":{"version":3,"names":["checkForNotNull","value","arguments","length","undefined","convertDotValues","replaceAll","replace","stringReplaceAll","convertToLocale","key","convertedValue","concat","getPropertyTypeLocale","getPropertyUsageTypeLocale","getPropertySubUsageTypeLocale","getPropertyOccupancyTypeLocale","getMohallaLocale","tenantId","toUpperCase","getCityLocale","getPropertyOwnerTypeLocale","getFixedFilename","filename","size","substr","shouldHideBackButton","config","filter","window","location","href","includes","screenPath","cardBodyStyle","propertyCardBodyStyle","setAddressDetails","data","_address$city","_address$locality","_address$locality2","address","propAddress","pincode","landmark","city","name","doorNo","street","locality","code","area","setOwnerDetails","owners","institution","owner","_data$ownershipCatego","_data$ownershipCatego2","ownershipCategory","_owners$","_owners$2","_owners$3","_address$city2","_owners$4","_owners$4$inistitutet","_owners$5","_owners$5$documents$p","_owners$8","_owners$9","_owners$10","_owners$11","_owners$12","_owners$13","_owners$14","_owners$15","_owners$15$ownerType","designation","inistitutionName","nameOfAuthorizedPerson","type","inistitutetype","document","documents","fileStoreId","_owners$6","_owners$6$documents$p","_owners$7","_owners$7$documents$p","_owners$7$documents$p2","push","documentType","altContactNumber","correspondenceAddress","permanentAddress","emailId","isCorrespondenceAddress","mobileNumber","ownerType","map","ownr","_ownr$ownerType","_ownr$documents$proof","_ownr$gender","_ownr$ownerType2","_ownr$relationship","_ownr$documents$speci","_ownr$documents$speci2","_ownr$documents$speci3","_ownr$documents$proof2","_ownr$documents$proof3","_ownr$documents$proof4","fatherOrHusbandName","gender","relationship","setDocumentDetails","_address$documents$Pr","id","_address$documents$Pr2","_address$documents$Pr3","_address$documents$Pr4","_address$documents$Pr5","_address$documents$Pr6","status","_address$documents$Pr7","_address$documents$Pr8","_address$documents$Pr9","_owner$documents$proo","_owner$documents$proo2","_owner$documents$proo3","_owner$documents$proo4","_owner$documents$proo5","_owner$documents$spec","_owner$documents$spec2","_owner$documents$spec3","_owner$documents$spec4","_owner$documents$spec5","_owner$documents$spec6","_owner$documents$spec7","_owner$documents$spec8","_owner$documents$spec9","getUsageType","_data$isResdential","isResdential","_data$isResdential2","_data$usageCategoryMa","usageCategoryMajor","getFloorNumber","_data$Floorno","floorcode","Floorno","i18nKey","charAt","getSuperBuiltUparea","_data$selfOccupied","builtUpArea","selfOccupied","_data$floordetails","parseInt","floordetails","_data$selfOccupied2","_data$landarea","_data$Constructiondet","landarea","floorarea","Constructiondetails","RentArea","_data$Constructiondet2","IsAnyPartOfThisFloorUnOccupied","_data$UnOccupiedArea","UnOccupiedArea","getSuperBuiltUpareafromob","builtuparea","units","unit","_unit$constructionDet","constructionDetail","getnumberoffloors","_data$units","_data$noOofBasements","_data$noOofBasements2","unitlenght","noOofBasements","getusageCategory","i","_data$isResdential3","_data$usageCategoryMa2","_data$isResdential4","_data$isResdential5","_data$PropertyType","_data$PropertyType$co","PropertyType","_data$units$i","_data$units$i$selfOcc","_data$units$i2","subuagecode","_data$units$i3","Subusagetypeofrentedareacode","_data$selfOccupied3","_data$subusagetype","subusagetype","_data$Subusagetypeofr","Subusagetypeofrentedarea","getunits","_data$selfOccupied4","_data$selfOccupied6","_data$selfOccupied5","_data$floordetails2","_data$UnOccupiedArea2","_data$IsAnyPartOfThis","_data$UnOccupiedArea3","occupancyType","floorNo","usageCategory","_data$selfOccupied7","_data$floordetails3","_data$selfOccupied8","_data$selfOccupied9","_data$Constructiondet3","_data$Constructiondet4","_data$landarea2","_data$isResdential6","_data$usageCategoryMa3","_data$isResdential7","_data$subusagetype2","arv","AnnualRent","_data$IsAnyPartOfThis2","_data$UnOccupiedArea4","extraunitFPB","getunitarray","unitsdata","_unitsdata$i$selfOccu","_unitsdata$i$IsAnyPar","_unitsdata$i3","_unitsdata$i3$selfOcc","_unitsdata$i4","active","_unitsdata$i$selfOccu2","_unitsdata$i","_unitsdata$i$IsAnyPar2","_unitsdata$i2","_unitsdata$i$selfOccu3","_unitsdata$i5","_unitsdata$i6","_unitsdata$i6$selfOcc","_unitsdata$i$selfOccu4","_unitsdata$i8","_unitsdata$i9","_unitsdata$i7","_data$isResdential8","_data$usageCategoryMa4","_data$isResdential9","_unitsdata$i10","_unitsdata$i10$IsAnyP","_unitsdata$i11","getunitsindependent","_data$noOofBasements3","_data$noOofBasements4","_data$noOofBasements5","isthere1Basement","isthere2Basement","setPropertyDetails","_data$PropertyType2","_data$PropertyType2$c","_data$PropertyType4","_data$PropertyType4$c","_data$PropertyType6","_data$PropertyType6$c","propertyDetails","_data$landarea3","_data$PropertyType3","landArea","propertyType","noOfFloors","_data$units2","_data$PropertyType5","_data$units3","_data$units4","_data$units4$","reduce","acc","curr","_curr$constructionDet","Number","superBuiltUpArea","_curr$constructionDet2","_data$landArea","_data$PropertyType7","_data$noOfFloors","_data$units5","_data$units5$","_data$PropertyType8","convertToProperty","_data","_data$floordetails4","_data2","_data3","_data4","_data5","_data6","_data7","_data8","_data9","_data10","_data11","_data11$ownershipCate","basement1","Array","isArray","basement2","formdata","Property","additionalDetails","inflammable","heightAbove36Feet","creationReason","getCreationReason","source","channel","CompareTwoObjects","ob1","ob2","comp","Object","keys","_ob1$key3","_ob2$key3","_ob1$key","_ob2$key","_ob1$key2","_ob1$key2$type","_ob2$key2","_ob2$key2$type","setUpdateOwnerDetails","_data$ownershipCatego3","_data$ownershipCatego4","_data$ownershipCatego5","_data$ownershipCatego6","_owners$16","_owners$17","_owners$18","_data$address","_data$address$city","_owners$19","_owners$19$inistitute","_owners$20","_owners$20$documents$","_owners$0$documents$p","_owners$0$documents$p2","forEach","_owners$21","_owners$22","_owners$23","_owners$24","_owners$25","_owners$26","_owners$27","_owners$28","_owners$28$ownerType","_owner$ownerType","_owner$documents$proo6","_owner$gender","_owner$ownerType2","_owner$relationship","_owner$documents$spec10","_owner$documents$spec11","_owner$documents$proo7","_owner$documents$proo8","setUpdatedDocumentDetails","_address$documents$Pr10","_address$documents$Pr11","_address$documents$Pr12","_address$documents$Pr13","_address$documents$Pr14","_address$documents$Pr15","_address$documents$Pr16","_address$documents$Pr17","_address$documents$Pr18","convertToUpdateProperty","_data12","_data12$floordetails","_data13","_data14","_data15","_data16","_data16$units","_data17","_data18","_data19","_data20","_data21","_data22","_data23","_data24","_data24$ownershipCate","_formdata$Property","_data25","_formdata$Property3","t","ob","_ob$unitType","unitType","accountId","acknowldgementNumber","propertyId","workflow","getWorkflow","propertyInitialObject","JSON","parse","sessionStorage","getItem","checkArrayLength","checkIsAnArray","isEditProperty","_formdata$Property2","oldUnits","auditDetails","checkForNA","isPropertyVacant","isPropertyFlatorPartofBuilding","isPropertyIndependent","isPropertyselfoccupied","isPropertyPartiallyrented","ispropertyunoccupied","pdfDownloadLink","format","downloadLink","differentFormats","split","fileURL","link","pdfDocumentName","documentLink","index","documentName","decodeURIComponent","pop","slice","convertEpochToDate","dateEpoch","businessService","dateFromApi","Date","month","getMonth","day","getDate","year","getFullYear","str","searcher","replaceWith","DownloadReceipt","consumerCode","pdfKey","Digit","ULBService","getCurrentTenantId","Utils","downloadReceipt","obj","action","moduleName","isUpdateProperty"],"sources":["D:/wamp64/www/UPYOG-Project/Test-UPYOG/UPYOG/frontend/micro-ui/web/micro-ui-internals/packages/modules/pt/src/utils/index.js"],"sourcesContent":["/*   method to check not null  if not returns false*/\r\nexport const checkForNotNull = (value = \"\") => {\r\n  return value && value != null && value != undefined && value != \"\" ? true : false;\r\n};\r\n\r\nexport const convertDotValues = (value = \"\") => {\r\n  return (\r\n    (checkForNotNull(value) && ((value.replaceAll && value.replaceAll(\".\", \"_\")) || (value.replace && stringReplaceAll(value, \".\", \"_\")))) || \"NA\"\r\n  );\r\n};\r\n\r\nexport const convertToLocale = (value = \"\", key = \"\") => {\r\n  let convertedValue = convertDotValues(value);\r\n  if (convertedValue == \"NA\") {\r\n    return \"PT_NA\";\r\n  }\r\n  return `${key}_${convertedValue}`;\r\n};\r\n\r\nexport const getPropertyTypeLocale = (value = \"\") => {\r\n  return convertToLocale(value, \"COMMON_PROPTYPE\");\r\n};\r\n\r\nexport const getPropertyUsageTypeLocale = (value = \"\") => {\r\n  return convertToLocale(value, \"COMMON_PROPUSGTYPE\");\r\n};\r\n\r\nexport const getPropertySubUsageTypeLocale = (value = \"\") => {\r\n  return convertToLocale(value, \"COMMON_PROPSUBUSGTYPE\");\r\n};\r\nexport const getPropertyOccupancyTypeLocale = (value = \"\") => {\r\n  return convertToLocale(value, \"PROPERTYTAX_OCCUPANCYTYPE\");\r\n};\r\n\r\nexport const getMohallaLocale = (value = \"\", tenantId = \"\") => {\r\n  let convertedValue = convertDotValues(tenantId);\r\n  if (convertedValue == \"NA\" || !checkForNotNull(value)) {\r\n    return \"PT_NA\";\r\n  }\r\n  convertedValue = convertedValue.toUpperCase();\r\n  return convertToLocale(value, `${convertedValue}_REVENUE`);\r\n};\r\n\r\nexport const getCityLocale = (value = \"\") => {\r\n  let convertedValue = convertDotValues(value);\r\n  if (convertedValue == \"NA\" || !checkForNotNull(value)) {\r\n    return \"PT_NA\";\r\n  }\r\n  convertedValue = convertedValue.toUpperCase();\r\n  return convertToLocale(convertedValue, `TENANT_TENANTS`);\r\n};\r\n\r\nexport const getPropertyOwnerTypeLocale = (value = \"\") => {\r\n  return convertToLocale(value, \"PROPERTYTAX_OWNERTYPE\");\r\n};\r\n\r\nexport const getFixedFilename = (filename = \"\", size = 5) => {\r\n  if (filename.length <= size) {\r\n    return filename;\r\n  }\r\n  return `${filename.substr(0, size)}...`;\r\n};\r\n\r\nexport const shouldHideBackButton = (config = []) => {\r\n  return config.filter((key) => window.location.href.includes(key.screenPath)).length > 0 ? true : false;\r\n};\r\n\r\n/*   style to keep the body height fixed across screens */\r\nexport const cardBodyStyle = {\r\n  // maxHeight: \"calc(100vh - 20em)\",\r\n  // overflowY: \"auto\",\r\n};\r\n\r\nexport const propertyCardBodyStyle = {\r\n  // maxHeight: \"calc(100vh - 10em)\",\r\n  // overflowY: \"auto\",\r\n};\r\n\r\nexport const setAddressDetails = (data) => {\r\n  let { address } = data;\r\n\r\n  let propAddress = {\r\n    ...address,\r\n    pincode: address?.pincode,\r\n    landmark: address?.landmark,\r\n    city: address?.city?.name,\r\n    doorNo: address?.doorNo,\r\n    street: address?.street,\r\n    locality: {\r\n      code: address?.locality?.code || \"NA\",\r\n      area: address?.locality?.name,\r\n    },\r\n  };\r\n\r\n  data.address = propAddress;\r\n  return data;\r\n};\r\n\r\nexport const setOwnerDetails = (data) => {\r\n  const { address, owners } = data;\r\n  let institution = {},\r\n    owner = [];\r\n  if (owners && owners.length > 0) {\r\n    if (data?.ownershipCategory?.value === \"INSTITUTIONALPRIVATE\" || data?.ownershipCategory?.value === \"INSTITUTIONALGOVERNMENT\") {\r\n      institution.designation = owners[0]?.designation;\r\n      institution.name = owners[0]?.inistitutionName;\r\n      institution.nameOfAuthorizedPerson = owners[0]?.name;\r\n      institution.tenantId = address?.city?.code;\r\n      institution.type = owners[0]?.inistitutetype?.value;\r\n      let document = [];\r\n      if (owners[0]?.documents[\"proofIdentity\"]?.fileStoreId) {\r\n        document.push({\r\n          fileStoreId: owners[0]?.documents[\"proofIdentity\"]?.fileStoreId || \"\",\r\n          documentType: owners[0]?.documents[\"proofIdentity\"]?.documentType?.code || \"\",\r\n        });\r\n      }\r\n      owner.push({\r\n        altContactNumber: owners[0]?.altContactNumber,\r\n        correspondenceAddress: owners[0]?.permanentAddress,\r\n        designation: owners[0]?.designation,\r\n        emailId: owners[0]?.emailId,\r\n        isCorrespondenceAddress: owners[0]?.isCorrespondenceAddress,\r\n        mobileNumber: owners[0]?.mobileNumber,\r\n        name: owners[0]?.name,\r\n        ownerType: owners[0]?.ownerType?.code || \"NONE\",\r\n        documents: document,\r\n      });\r\n      data.institution = institution;\r\n      data.owners = owner;\r\n    } else {\r\n      owners.map((ownr) => {\r\n        let document = [];\r\n        if (ownr?.ownerType?.code != \"NONE\") {\r\n          document.push({\r\n            fileStoreId: ownr?.documents[\"specialProofIdentity\"]?.fileStoreId || \"\",\r\n            documentType: ownr?.documents[\"specialProofIdentity\"]?.documentType?.code || \"\",\r\n          });\r\n        }\r\n        if (ownr?.documents[\"proofIdentity\"]?.fileStoreId) {\r\n          document.push({\r\n            fileStoreId: ownr?.documents[\"proofIdentity\"]?.fileStoreId || \"\",\r\n            documentType: ownr?.documents[\"proofIdentity\"]?.documentType?.code || \"\",\r\n          });\r\n        }\r\n        owner.push({\r\n          emailId: ownr?.emailId,\r\n          fatherOrHusbandName: ownr?.fatherOrHusbandName,\r\n          gender: ownr?.gender?.value,\r\n          isCorrespondenceAddress: ownr?.isCorrespondenceAddress,\r\n          mobileNumber: ownr?.mobileNumber,\r\n          name: ownr?.name,\r\n          ownerType: ownr?.ownerType?.code || \"NONE\",\r\n          permanentAddress: ownr?.permanentAddress,\r\n          relationship: ownr?.relationship?.code,\r\n          documents: document,\r\n        });\r\n      });\r\n      data.owners = owner;\r\n    }\r\n  }\r\n  return data;\r\n};\r\n\r\nexport const setDocumentDetails = (data) => {\r\n  const { address, owners } = data;\r\n  let documents = [];\r\n  if (address?.documents[\"ProofOfAddress\"]?.id) {\r\n    documents.push({\r\n      fileStoreId: address?.documents[\"ProofOfAddress\"]?.fileStoreId || \"\",\r\n      documentType: address?.documents[\"ProofOfAddress\"]?.documentType?.code || \"\",\r\n      id: address?.documents[\"ProofOfAddress\"]?.id || \"\",\r\n      status: address?.documents[\"ProofOfAddress\"]?.status || \"\",\r\n    });\r\n  } else {\r\n    documents.push({\r\n      fileStoreId: address?.documents[\"ProofOfAddress\"]?.fileStoreId || \"\",\r\n      documentType: address?.documents[\"ProofOfAddress\"]?.documentType?.code || \"\",\r\n    });\r\n  }\r\n\r\n  owners &&\r\n    owners.length > 0 &&\r\n    owners.map((owner) => {\r\n      if (owner.documents && owner.documents[\"proofIdentity\"]) {\r\n        if (owner?.documents[\"proofIdentity\"]?.id) {\r\n          documents.push({\r\n            fileStoreId: owner?.documents[\"proofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner?.documents[\"proofIdentity\"].documentType?.code || \"\",\r\n            id: owner?.documents[\"proofIdentity\"]?.id || \"\",\r\n            status: owner?.documents[\"proofIdentity\"]?.status || \"\",\r\n          });\r\n        } else {\r\n          documents.push({\r\n            fileStoreId: owner?.documents[\"proofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner?.documents[\"proofIdentity\"].documentType?.code || \"\",\r\n          });\r\n        }\r\n      }\r\n      if (owner.documents && owner.documents[\"specialProofIdentity\"]) {\r\n        if (owner?.documents[\"specialProofIdentity\"]?.id) {\r\n          documents.push({\r\n            fileStoreId: owner?.documents[\"specialProofIdentity\"]?.fileStoreId || \"\",\r\n            documentType: owner?.documents[\"specialProofIdentity\"]?.documentType?.code || \"\",\r\n            id: owner?.documents[\"specialProofIdentity\"]?.id || \"\",\r\n            status: owner?.documents[\"specialProofIdentity\"]?.status || \"\",\r\n          });\r\n        } else {\r\n          documents.push({\r\n            fileStoreId: owner?.documents[\"specialProofIdentity\"]?.fileStoreId || \"\",\r\n            documentType: owner?.documents[\"specialProofIdentity\"]?.documentType?.code || \"\",\r\n          });\r\n        }\r\n      }\r\n    });\r\n  data.documents = documents;\r\n  return data;\r\n};\r\n\r\nconst getUsageType = (data) => {\r\n  if (data?.isResdential?.code == \"RESIDENTIAL\") {\r\n    return data?.isResdential?.code;\r\n  } else {\r\n    return data?.usageCategoryMajor?.code;\r\n  }\r\n};\r\n\r\nconst getFloorNumber = (data) => {\r\n  let floorcode = data?.Floorno?.i18nKey;\r\n  if (floorcode.charAt(floorcode.length - 3) === \"_\" && floorcode.charAt(floorcode.length - 2) === \"_\") {\r\n    return \"-\" + floorcode.charAt(floorcode.length - 1);\r\n  } else {\r\n    if (floorcode.charAt(floorcode.length - 2) !== \"_\") {\r\n      return floorcode.charAt(floorcode.length - 2) + floorcode.charAt(floorcode.length - 1);\r\n    } else {\r\n      return floorcode.charAt(floorcode.length - 1);\r\n    }\r\n  }\r\n};\r\n\r\nexport const getSuperBuiltUparea = (data) => {\r\n  let builtUpArea;\r\n  if (data?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\") {\r\n    builtUpArea = parseInt(data?.floordetails?.builtUpArea);\r\n  } else {\r\n    if (data?.selfOccupied?.i18nKey === \"PT_PARTIALLY_RENTED_OUT\") {\r\n      builtUpArea = parseInt(data?.landarea?.floorarea) + parseInt(data?.Constructiondetails?.RentArea);\r\n    } else {\r\n      builtUpArea = parseInt(data?.Constructiondetails?.RentArea);\r\n    }\r\n    if (data?.IsAnyPartOfThisFloorUnOccupied.i18nKey === \"PT_COMMON_YES\") {\r\n      builtUpArea = builtUpArea + parseInt(data?.UnOccupiedArea?.UnOccupiedArea);\r\n    }\r\n  }\r\n  return builtUpArea;\r\n};\r\n\r\nexport const getSuperBuiltUpareafromob = (data) => {\r\n  let builtuparea = 0;\r\n  data?.units.map((unit) => {\r\n    builtuparea = builtuparea + unit?.constructionDetail?.builtUpArea;\r\n  });\r\n  return builtuparea;\r\n};\r\n\r\nexport const getnumberoffloors = (data) => {\r\n  let unitlenght = data?.units?.length;\r\n  if (data?.noOofBasements?.i18nKey === \"PT_ONE_BASEMENT_OPTION\") {\r\n    return parseInt(unitlenght) + 1;\r\n  } else if (data?.noOofBasements?.i18nKey === \"PT_TWO_BASEMENT_OPTION\") {\r\n    return parseInt(unitlenght) + 2;\r\n  }\r\n  return parseInt(unitlenght);\r\n};\r\n\r\nexport const getusageCategory = (data, i) => {\r\n  if (data?.isResdential?.i18nKey === \"PT_COMMON_YES\") {\r\n    return data?.isResdential?.code;\r\n  } else if (data?.usageCategoryMajor?.code === \"NONRESIDENTIAL.OTHERS\") {\r\n    return data?.isResdential?.code;\r\n  } else {\r\n    if (data?.PropertyType?.code?.includes(\"INDEPENDENTPROPERTY\")) {\r\n      if (data?.units[i]?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\") {\r\n        return data?.units[i]?.subuagecode;\r\n      } else {\r\n        return data?.units[i]?.Subusagetypeofrentedareacode;\r\n      }\r\n    } else {\r\n      if (data?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\") {\r\n        return data?.subusagetype?.subuagecode;\r\n      } else {\r\n        return data?.Subusagetypeofrentedarea?.Subusagetypeofrentedareacode;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const getunits = (data) => {\r\n  let unit = [];\r\n  if (data?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\" && data?.IsAnyPartOfThisFloorUnOccupied.i18nKey === \"PT_COMMON_YES\") {\r\n    unit.push({\r\n      occupancyType: data?.selfOccupied?.code,\r\n      floorNo: getFloorNumber(data),\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(data?.floordetails?.builtUpArea) - parseInt(data?.UnOccupiedArea?.UnOccupiedArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data),\r\n    });\r\n    unit.push({\r\n      occupancyType: data?.IsAnyPartOfThisFloorUnOccupied?.code,\r\n      floorNo: getFloorNumber(data),\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(data?.UnOccupiedArea?.UnOccupiedArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data),\r\n    });\r\n  } else if (data?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\" && data?.IsAnyPartOfThisFloorUnOccupied.i18nKey !== \"PT_COMMON_YES\") {\r\n    unit.push({\r\n      occupancyType: data?.selfOccupied?.code,\r\n      floorNo: getFloorNumber(data),\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(data?.floordetails?.builtUpArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data),\r\n    });\r\n  } else {\r\n    if (data?.selfOccupied?.i18nKey === \"PT_PARTIALLY_RENTED_OUT\") {\r\n      unit.push({\r\n        occupancyType: \"SELFOCCUPIED\",\r\n        floorNo: getFloorNumber(data),\r\n        constructionDetail: {\r\n          builtUpArea: parseInt(data?.landarea?.floorarea),\r\n        },\r\n        tenantId: data.tenantId,\r\n        usageCategory:\r\n          data?.isResdential?.i18nKey === \"PT_COMMON_YES\" || data?.usageCategoryMajor?.code === \"NONRESIDENTIAL.OTHERS\"\r\n            ? data?.isResdential?.code\r\n            : data?.subusagetype?.subuagecode,\r\n      });\r\n    }\r\n    unit.push({\r\n      occupancyType: data?.selfOccupied?.code,\r\n      arv: data?.Constructiondetails?.AnnualRent,\r\n      floorNo: getFloorNumber(data),\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(data?.Constructiondetails?.RentArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data),\r\n    });\r\n    if (data?.IsAnyPartOfThisFloorUnOccupied.i18nKey === \"PT_COMMON_YES\") {\r\n      unit.push({\r\n        occupancyType: data?.IsAnyPartOfThisFloorUnOccupied?.code,\r\n        floorNo: getFloorNumber(data),\r\n        constructionDetail: {\r\n          builtUpArea: parseInt(data?.UnOccupiedArea?.UnOccupiedArea),\r\n        },\r\n        tenantId: data.tenantId,\r\n        usageCategory: getusageCategory(data),\r\n      });\r\n    }\r\n  }\r\n  data?.extraunitFPB ? (unit = unit.concat(data?.extraunitFPB)) : \"\";\r\n  return unit;\r\n};\r\n\r\nexport const getunitarray = (i, unitsdata, unit, data) => {\r\n  if (unitsdata[i].active === true) {\r\n    unit.push(unitsdata[i]);\r\n  } else if (\r\n    unitsdata[i].selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\" &&\r\n    unitsdata[i].IsAnyPartOfThisFloorUnOccupied?.i18nKey === \"PT_COMMON_YES\"\r\n  ) {\r\n    unit.push({\r\n      occupancyType: unitsdata[i].selfOccupied?.code,\r\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(unitsdata[i].builtUpArea) - parseInt(unitsdata[i].UnOccupiedArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data, i),\r\n    });\r\n    unit.push({\r\n      occupancyType: unitsdata[i]?.IsAnyPartOfThisFloorUnOccupied?.code,\r\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(unitsdata[i]?.UnOccupiedArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data, i),\r\n    });\r\n  } else if (\r\n    unitsdata[i]?.selfOccupied?.i18nKey === \"PT_YES_IT_IS_SELFOCCUPIED\" &&\r\n    unitsdata[i]?.IsAnyPartOfThisFloorUnOccupied.i18nKey !== \"PT_COMMON_YES\"\r\n  ) {\r\n    unit.push({\r\n      occupancyType: unitsdata[i].selfOccupied?.code,\r\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(unitsdata[i]?.builtUpArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data, i),\r\n    });\r\n  } else {\r\n    if (unitsdata[i]?.selfOccupied?.i18nKey === \"PT_PARTIALLY_RENTED_OUT\") {\r\n      unit.push({\r\n        occupancyType: \"SELFOCCUPIED\",\r\n        floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n        constructionDetail: {\r\n          builtUpArea: parseInt(unitsdata[i]?.floorarea),\r\n        },\r\n        tenantId: data.tenantId,\r\n        usageCategory:\r\n          data?.isResdential?.i18nKey === \"PT_COMMON_YES\" || data?.usageCategoryMajor?.code === \"NONRESIDENTIAL.OTHERS\"\r\n            ? data?.isResdential?.code\r\n            : unitsdata[i].subuagecode,\r\n      });\r\n    }\r\n    unit.push({\r\n      occupancyType: unitsdata[i].selfOccupied?.code,\r\n      arv: unitsdata[i].AnnualRent,\r\n      floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n      constructionDetail: {\r\n        builtUpArea: parseInt(unitsdata[i]?.RentArea),\r\n      },\r\n      tenantId: data.tenantId,\r\n      usageCategory: getusageCategory(data, i),\r\n    });\r\n    if (unitsdata[i]?.IsAnyPartOfThisFloorUnOccupied.i18nKey === \"PT_COMMON_YES\") {\r\n      unit.push({\r\n        occupancyType: unitsdata[i]?.IsAnyPartOfThisFloorUnOccupied?.code,\r\n        floorNo: i === \"-1\" ? \"-1\" : i === \"-2\" ? \"-2\" : i,\r\n        constructionDetail: {\r\n          builtUpArea: parseInt(unitsdata[i]?.UnOccupiedArea),\r\n        },\r\n        tenantId: data.tenantId,\r\n        usageCategory: getusageCategory(data, i),\r\n      });\r\n    }\r\n  }\r\n  return unit;\r\n};\r\n\r\nexport const getunitsindependent = (data) => {\r\n  let unit = [];\r\n  let unitsdata = [];\r\n  unitsdata = data?.units;\r\n\r\n  let i;\r\n  for (i = 0; i < unitsdata.length && unitsdata.length > 0; i++) {\r\n    unit = getunitarray(i, unitsdata, unit, data);\r\n  }\r\n  if (isthere1Basement(data?.noOofBasements?.i18nKey) || isthere2Basement(data?.noOofBasements?.i18nKey)) {\r\n    unit = getunitarray(\"-1\", unitsdata, unit, data);\r\n  }\r\n  if (isthere2Basement(data?.noOofBasements?.i18nKey)) {\r\n    unit = getunitarray(\"-2\", unitsdata, unit, data);\r\n  }\r\n  return unit;\r\n};\r\n\r\nexport const setPropertyDetails = (data) => {\r\n  // let unitleghtvalue = getnumberoffloors(data);\r\n  let propertyDetails = {};\r\n  if (data?.PropertyType?.code?.includes(\"VACANT\")) {\r\n    propertyDetails = {\r\n      units: [],\r\n      landArea: parseInt(data?.landarea?.floorarea),\r\n      propertyType: data?.PropertyType?.code,\r\n      noOfFloors: 0,\r\n      usageCategory: getUsageType(data),\r\n    };\r\n  } else if (data?.PropertyType?.code?.includes(\"SHAREDPROPERTY\")) {\r\n    /*  update this case tulika*/\r\n    propertyDetails = {\r\n      units: data?.units,\r\n      landArea: data?.units?.reduce((acc, curr) => Number(curr?.constructionDetail?.builtUpArea) + acc, 0),\r\n      propertyType: data?.PropertyType?.code,\r\n      noOfFloors: 1,\r\n      superBuiltUpArea: data?.units?.reduce((acc, curr) => Number(curr?.constructionDetail?.builtUpArea) + acc, 0),\r\n      usageCategory: data?.units?.[0]?.usageCategory,\r\n    };\r\n  } else if (data?.PropertyType?.code?.includes(\"INDEPENDENTPROPERTY\")) {\r\n    /*  update this case tulika*/\r\n    propertyDetails = {\r\n      units: data?.units,\r\n      landArea: data?.landArea?.floorarea,\r\n      propertyType: data?.PropertyType?.code,\r\n      noOfFloors: data?.noOfFloors?.code+1,\r\n      superBuiltUpArea: null,\r\n      usageCategory: data?.units?.[0]?.usageCategory,\r\n    };\r\n  } else {\r\n    propertyDetails = {\r\n      units: [\r\n        {\r\n          occupancyType: \"SELFOCCUPIED\",\r\n          floorNo: \"0\",\r\n          constructionDetail: {\r\n            builtUpArea: 16.67,\r\n          },\r\n          tenantId: data.tenantId,\r\n          usageCategory: \"RESIDENTIAL\",\r\n        },\r\n      ],\r\n      landArea: \"2000\",\r\n      propertyType: data?.PropertyType?.code,\r\n      noOfFloors: 1,\r\n      superBuiltUpArea: 16.67,\r\n      usageCategory: getUsageType(data),\r\n    };\r\n  }\r\n\r\n  data.propertyDetails = propertyDetails;\r\n  return data;\r\n};\r\n\r\n/*   method to convert collected details to proeprty create object */\r\nexport const convertToProperty = (data = {}) => {\r\n  let isResdential = data.isResdential;\r\n  let propertyType = data.PropertyType;\r\n  let selfOccupied = data.selfOccupied;\r\n  let Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;\r\n  let subusagetype = data.subusagetype || null;\r\n  let IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;\r\n  let builtUpArea = data?.floordetails?.builtUpArea || null;\r\n  let noOfFloors = data?.noOfFloors;\r\n  let noOofBasements = data?.noOofBasements;\r\n  let unit = data?.units;\r\n  let basement1 = Array.isArray(data?.units) && data?.units[\"-1\"] ? data?.units[\"-1\"] : null;\r\n  let basement2 = Array.isArray(data?.units) && data?.units[\"-2\"] ? data?.units[\"-2\"] : null;\r\n  data = setDocumentDetails(data);\r\n  data = setOwnerDetails(data);\r\n  data = setAddressDetails(data);\r\n  data = setPropertyDetails(data);\r\n\r\n  const formdata = {\r\n    Property: {\r\n      tenantId: data.tenantId,\r\n      address: data.address,\r\n\r\n      ownershipCategory: data?.ownershipCategory?.value,\r\n      owners: data.owners,\r\n      institution: data.institution || null,\r\n\r\n      documents: data.documents || [],\r\n      ...data.propertyDetails,\r\n\r\n      additionalDetails: {\r\n        inflammable: false,\r\n        heightAbove36Feet: false,\r\n        isResdential: isResdential,\r\n        propertyType: propertyType,\r\n        selfOccupied: selfOccupied,\r\n        Subusagetypeofrentedarea: Subusagetypeofrentedarea,\r\n        subusagetype: subusagetype,\r\n        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,\r\n        builtUpArea: builtUpArea,\r\n        noOfFloors: noOfFloors,\r\n        noOofBasements: noOofBasements,\r\n        unit: unit,\r\n        basement1: basement1,\r\n        basement2: basement2,\r\n      },\r\n\r\n      creationReason: getCreationReason(data),\r\n      source: \"MUNICIPAL_RECORDS\",\r\n      channel: \"CITIZEN\",\r\n    },\r\n  };\r\n  return formdata;\r\n};\r\n\r\nexport const CompareTwoObjects = (ob1, ob2) => {\r\n  let comp = 0;\r\nObject.keys(ob1).map((key) =>{\r\n  if(typeof ob1[key] == \"object\")\r\n  {\r\n    if(key == \"institution\")\r\n    {\r\n      if((ob1[key].name || ob2[key].name) && ob1[key]?.name !== ob2[key]?.name)\r\n      comp=1\r\n      else if(ob1[key]?.type?.code !== ob2[key]?.type?.code)\r\n      comp=1\r\n      \r\n    }\r\n    else if(ob1[key]?.code !== ob2[key]?.code)\r\n    comp=1\r\n  }\r\n  else\r\n  {\r\n    if((ob1[key] || ob2[key]) && ob1[key] !== ob2[key])\r\n    comp=1\r\n  }\r\n});\r\nif(comp==1)\r\nreturn false\r\nelse\r\nreturn true;\r\n}\r\n\r\nexport const setUpdateOwnerDetails = (data = []) => {\r\n  const { institution, owners } = data;\r\n  if (data?.ownershipCategory?.value === \"INSTITUTIONALPRIVATE\" || data?.ownershipCategory?.value === \"INSTITUTIONALGOVERNMENT\") {\r\n    if (data?.ownershipCategory?.value === \"INSTITUTIONALPRIVATE\" || data?.ownershipCategory?.value === \"INSTITUTIONALGOVERNMENT\") {\r\n      institution.designation = owners[0]?.designation;\r\n      institution.name = owners[0]?.inistitutionName;\r\n      institution.nameOfAuthorizedPerson = owners[0]?.name;\r\n      institution.tenantId = data?.address?.city?.code;\r\n      institution.type = owners[0]?.inistitutetype?.value;\r\n      let document = [];\r\n      if (owners[0]?.documents[\"proofIdentity\"]?.fileStoreId && owners[0].documents[\"proofIdentity\"].id) {\r\n        document.push({\r\n          fileStoreId: owners[0].documents[\"proofIdentity\"].fileStoreId || \"\",\r\n          documentType: owners[0].documents[\"proofIdentity\"].documentType?.code || \"\",\r\n          id: owners[0].documents[\"proofIdentity\"].id || \"\",\r\n          status: owners[0].documents[\"proofIdentity\"].status || \"\",\r\n        });\r\n      } else {\r\n        document.push({\r\n          fileStoreId: owners[0].documents[\"proofIdentity\"].fileStoreId || \"\",\r\n          documentType: owners[0].documents[\"proofIdentity\"].documentType?.code || \"\",\r\n        });\r\n      }\r\n      data.owners.forEach((owner) => {\r\n        owner.altContactNumber = owners[0]?.altContactNumber;\r\n        owner.correspondenceAddress = owners[0]?.permanentAddress;\r\n        owner.designation = owners[0]?.designation;\r\n        owner.emailId = owners[0]?.emailId;\r\n        owner.isCorrespondenceAddress = owners[0]?.isCorrespondenceAddress;\r\n        owner.mobileNumber = owners[0]?.mobileNumber;\r\n        owner.name = owners[0]?.name;\r\n        owner.ownerType = owners[0]?.ownerType?.code || \"NONE\";\r\n        owner.documents = document;\r\n      });\r\n      data.institution = institution;\r\n    }\r\n  } else {\r\n    data.owners.forEach((owner) => {\r\n      let document = [];\r\n      if (owner?.ownerType?.code != \"NONE\") {\r\n        if (owner.documents[\"specialProofIdentity\"].id) {\r\n          document.push({\r\n            fileStoreId: owner.documents[\"specialProofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner.documents[\"specialProofIdentity\"].documentType?.code || \"\",\r\n            id: owner.documents[\"specialProofIdentity\"].id || \"\",\r\n            status: owner.documents[\"specialProofIdentity\"].status || \"\",\r\n          });\r\n        } else {\r\n          document.push({\r\n            fileStoreId: owner.documents[\"specialProofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner.documents[\"specialProofIdentity\"].documentType?.code || \"\",\r\n          });\r\n        }\r\n      }\r\n      if (owner?.documents[\"proofIdentity\"]?.fileStoreId) {\r\n        if (owner.documents[\"proofIdentity\"].id) {\r\n          document.push({\r\n            fileStoreId: owner.documents[\"proofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner.documents[\"proofIdentity\"].documentType?.code || \"\",\r\n            id: owner.documents[\"proofIdentity\"].id || \"\",\r\n            status: owner.documents[\"proofIdentity\"].status || \"\",\r\n          });\r\n        } else {\r\n          document.push({\r\n            fileStoreId: owner.documents[\"proofIdentity\"].fileStoreId || \"\",\r\n            documentType: owner.documents[\"proofIdentity\"].documentType?.code || \"\",\r\n          });\r\n        }\r\n      }\r\n      owner.gender = owner?.gender?.code;\r\n      owner.ownerType = owner?.ownerType?.code;\r\n      owner.relationship = owner?.relationship?.code;\r\n      owner.documents = document;\r\n    });\r\n  }\r\n  return data;\r\n};\r\nexport const setUpdatedDocumentDetails = (data) => {\r\n  const { address, owners } = data;\r\n  let documents = [];\r\n  if (address?.documents[\"ProofOfAddress\"]?.id) {\r\n    documents.push({\r\n      fileStoreId: address?.documents[\"ProofOfAddress\"]?.fileStoreId || \"\",\r\n      documentType: address?.documents[\"ProofOfAddress\"]?.documentType?.code || \"\",\r\n      id: address?.documents[\"ProofOfAddress\"]?.id || \"\",\r\n      status: address?.documents[\"ProofOfAddress\"]?.status || \"\",\r\n    });\r\n  } else {\r\n    documents.push({\r\n      fileStoreId: address?.documents[\"ProofOfAddress\"]?.fileStoreId || \"\",\r\n      documentType: address?.documents[\"ProofOfAddress\"]?.documentType?.code || \"\",\r\n    });\r\n  }\r\n\r\n  owners &&\r\n    owners.length > 0 &&\r\n    owners.map((owner) => {\r\n      owner.documents.map((document) => {\r\n        documents.push(document);\r\n      });\r\n    });\r\n  data.documents = documents;\r\n  return data;\r\n};\r\nexport const convertToUpdateProperty = (data = {}, t) => {\r\n  let isResdential = data.isResdential;\r\n  let propertyType = data.PropertyType;\r\n  let selfOccupied = data.selfOccupied;\r\n  let Subusagetypeofrentedarea = data.Subusagetypeofrentedarea || null;\r\n  let subusagetype = data.subusagetype || null;\r\n  let IsAnyPartOfThisFloorUnOccupied = data.IsAnyPartOfThisFloorUnOccupied || null;\r\n  let builtUpArea = data?.floordetails?.builtUpArea || null;\r\n  let noOfFloors = data?.noOfFloors;\r\n  let noOofBasements = data?.noOofBasements;\r\n  let unit = data?.units;\r\n  data.units = data?.units?.map((ob) => {return({\r\n    ...ob, unitType : ob?.unitType?.code\r\n  })})\r\n  let basement1 = Array.isArray(data?.units) && data?.units[\"-1\"] ? data?.units[\"-1\"] : null;\r\n  let basement2 = Array.isArray(data?.units) && data?.units[\"-2\"] ? data?.units[\"-2\"] : null;\r\n  data = setAddressDetails(data);\r\n  data = setUpdateOwnerDetails(data);\r\n  data = setUpdatedDocumentDetails(data);\r\n  data = setPropertyDetails(data);\r\n  data.address.city = data.address.city ? data.address.city : t(`TENANT_TENANTS_${stringReplaceAll(data?.tenantId.toUpperCase(),\".\",\"_\")}`);\r\n\r\n  const formdata = {\r\n    Property: {\r\n      id: data.id,\r\n      accountId: data.accountId,\r\n      acknowldgementNumber: data.acknowldgementNumber,\r\n      propertyId: data.propertyId,\r\n      status: data.status || \"INWORKFLOW\",\r\n      tenantId: data.tenantId,\r\n      address: data.address,\r\n\r\n      ownershipCategory: data?.ownershipCategory?.value,\r\n      owners: data.owners,\r\n      institution: data.institution || null,\r\n\r\n      documents: data.documents || [],\r\n      ...data.propertyDetails,\r\n\r\n      additionalDetails: {\r\n        inflammable: false,\r\n        heightAbove36Feet: false,\r\n        isResdential: isResdential,\r\n        propertyType: propertyType,\r\n        selfOccupied: selfOccupied,\r\n        Subusagetypeofrentedarea: Subusagetypeofrentedarea,\r\n        subusagetype: subusagetype,\r\n        IsAnyPartOfThisFloorUnOccupied: IsAnyPartOfThisFloorUnOccupied,\r\n        builtUpArea: builtUpArea,\r\n        noOfFloors: noOfFloors,\r\n        noOofBasements: noOofBasements,\r\n        unit: unit,\r\n        basement1: basement1,\r\n        basement2: basement2,\r\n      },\r\n\r\n      creationReason: getCreationReason(data),\r\n      source: \"MUNICIPAL_RECORDS\",\r\n      channel: \"CITIZEN\",\r\n      workflow: getWorkflow(data),\r\n    },\r\n  };\r\n\r\n  let propertyInitialObject = JSON.parse(sessionStorage.getItem(\"propertyInitialObject\"));\r\n  if (checkArrayLength(propertyInitialObject?.units) && checkIsAnArray(formdata.Property?.units) && data?.isEditProperty) {\r\n    propertyInitialObject.units = propertyInitialObject.units.filter((unit) => unit.active);\r\n    let oldUnits = propertyInitialObject.units.map((unit) => {\r\n      return { ...unit, active: false };\r\n    });\r\n    formdata.Property?.units.push(...oldUnits);\r\n  }\r\n  /* if (\r\n    checkArrayLength(propertyInitialObject?.owners) &&\r\n    checkIsAnArray(formdata.Property?.owners) &&\r\n    data?.isEditProperty &&\r\n    data.isUpdateProperty == false\r\n  ) {\r\n    propertyInitialObject.owners = propertyInitialObject.owners.filter((owner) => owner.status === \"ACTIVE\");\r\n    let oldOwners = propertyInitialObject.owners.map((owner) => {\r\n      return { ...owner, status: \"INACTIVE\" };\r\n    });\r\n    formdata.Property?.owners.push(...oldOwners);\r\n  } else {\r\n    formdata.Property.owners = [...propertyInitialObject.owners];\r\n  } */\r\n\r\n  if (checkArrayLength(propertyInitialObject?.owners) && checkIsAnArray(formdata.Property?.owners)) {\r\n    formdata.Property.owners = [...propertyInitialObject.owners];\r\n  }\r\n  if (propertyInitialObject?.auditDetails) {\r\n    formdata.Property[\"auditDetails\"] = { ...propertyInitialObject.auditDetails };\r\n  }\r\n  return formdata;\r\n};\r\n\r\n/*   method to check value  if not returns NA*/\r\nexport const checkForNA = (value = \"\") => {\r\n  return checkForNotNull(value) ? value : \"PT_NA\";\r\n};\r\n\r\n/*   method to check value  if not returns NA*/\r\nexport const isPropertyVacant = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"VACANT\") ? true : false;\r\n};\r\n\r\n/*   method to check value equal to flat / part of building if not returns NA  */\r\nexport const isPropertyFlatorPartofBuilding = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"SHAREDPROPERTY\") ? true : false;\r\n};\r\n\r\nexport const isPropertyIndependent = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"INDEPENDENT\") ? true : false;\r\n};\r\n\r\nexport const isthere1Basement = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"ONE\") ? true : false;\r\n};\r\n\r\nexport const isthere2Basement = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"TWO\") ? true : false;\r\n};\r\n\r\nexport const isPropertyselfoccupied = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"SELFOCCUPIED\") ? true : false;\r\n};\r\n\r\nexport const isPropertyPartiallyrented = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"PARTIALLY\") ? true : false;\r\n};\r\n\r\nexport const ispropertyunoccupied = (value = \"\") => {\r\n  return checkForNotNull(value) && value.includes(\"YES\") ? true : false;\r\n};\r\n/*   method to get required format from fielstore url*/\r\nexport const pdfDownloadLink = (documents = {}, fileStoreId = \"\", format = \"\") => {\r\n  /* Need to enhance this util to return required format*/\r\n\r\n  let downloadLink = documents[fileStoreId] || \"\";\r\n  let differentFormats = downloadLink?.split(\",\") || [];\r\n  let fileURL = \"\";\r\n  differentFormats.length > 0 &&\r\n    differentFormats.map((link) => {\r\n      if (!link.includes(\"large\") && !link.includes(\"medium\") && !link.includes(\"small\")) {\r\n        fileURL = link;\r\n      }\r\n    });\r\n  return fileURL;\r\n};\r\n\r\n/*   method to get filename  from fielstore url*/\r\nexport const pdfDocumentName = (documentLink = \"\", index = 0) => {\r\n  let documentName = decodeURIComponent(documentLink.split(\"?\")[0].split(\"/\").pop().slice(13)) || `Document - ${index + 1}`;\r\n  return documentName;\r\n};\r\n\r\n/* methid to get date from epoch */\r\nexport const convertEpochToDate = (dateEpoch,businessService) => {\r\n  // Returning null in else case because new Date(null) returns initial date from calender\r\n  if (dateEpoch) {\r\n    const dateFromApi = new Date(dateEpoch);\r\n    let month = dateFromApi.getMonth() + 1;\r\n    let day = dateFromApi.getDate();\r\n    let year = dateFromApi.getFullYear();\r\n    month = (month > 9 ? \"\" : \"0\") + month;\r\n    day = (day > 9 ? \"\" : \"0\") + day;\r\n    if(businessService == \"PT\")\r\n    return `${day}-${month}-${year}`;\r\n    else\r\n    return `${day}/${month}/${year}`;\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport const stringReplaceAll = (str = \"\", searcher = \"\", replaceWith = \"\") => {\r\n  if (searcher == \"\") return str;\r\n  while (str.includes(searcher)) {\r\n    str = str.replace(searcher, replaceWith);\r\n  }\r\n  return str;\r\n};\r\n\r\nexport const DownloadReceipt = async (consumerCode, tenantId, businessService, pdfKey = \"consolidatedreceipt\") => {\r\n  tenantId = tenantId ? tenantId : Digit.ULBService.getCurrentTenantId();\r\n  await Digit.Utils.downloadReceipt(consumerCode, businessService, \"consolidatedreceipt\", tenantId);\r\n};\r\n\r\nexport const checkIsAnArray = (obj = []) => {\r\n  return obj && Array.isArray(obj) ? true : false;\r\n};\r\nexport const checkArrayLength = (obj = [], length = 0) => {\r\n  return checkIsAnArray(obj) && obj.length > length ? true : false;\r\n};\r\n\r\nexport const getWorkflow = (data = {}) => {\r\n  return {\r\n    action: data?.isEditProperty ? \"REOPEN\" : \"OPEN\",\r\n    businessService: `PT.${getCreationReason(data)}`,\r\n    moduleName: \"PT\",\r\n  };\r\n};\r\n\r\nexport const getCreationReason = (data = {}) => {\r\n  return data?.isUpdateProperty  ? \"UPDATE\" : \"CREATE\";\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}